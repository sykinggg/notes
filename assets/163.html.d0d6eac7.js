import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,a as t}from"./app.9a21e182.js";const p={},o=t(`<h1 id="\u7B2C172\u9898-\u4E2D\u65ADpromise" tabindex="-1"><a class="header-anchor" href="#\u7B2C172\u9898-\u4E2D\u65ADpromise" aria-hidden="true">#</a> \u7B2C172\u9898\uFF1A\u4E2D\u65ADPromise</h1><h2 id="\u53C2\u8003" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003" aria-hidden="true">#</a> \u53C2\u8003</h2><p><code>Promise</code> \u6709\u4E2A\u7F3A\u70B9\u5C31\u662F\u4E00\u65E6\u521B\u5EFA\u5C31\u65E0\u6CD5\u53D6\u6D88\uFF0C\u6240\u4EE5\u672C\u8D28\u4E0A <code>Promise</code> \u662F\u65E0\u6CD5\u88AB\u7EC8\u6B62\u7684\uFF0C\u4F46\u6211\u4EEC\u5728\u5F00\u53D1\u8FC7\u7A0B\u4E2D\u53EF\u80FD\u4F1A\u9047\u5230\u4E0B\u9762\u4E24\u4E2A\u9700\u6C42\uFF1A</p><ul><li>\u4E2D\u65AD\u8C03\u7528\u94FE</li></ul><p>\u5C31\u662F\u5728\u67D0\u4E2A <code>then/catch</code> \u6267\u884C\u4E4B\u540E\uFF0C\u4E0D\u60F3\u8BA9\u540E\u7EED\u7684\u94FE\u5F0F\u8C03\u7528\u7EE7\u7EED\u6267\u884C\u4E86\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>somePromise
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u7EC8\u6B62 Promise \u94FE\uFF0C\u8BA9\u4E0B\u9762\u7684 then\u3001catch \u548C finally \u90FD\u4E0D\u6267\u884C</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;then&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;catch&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;finally&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E00\u79CD\u65B9\u6CD5\u662F\u5728<code>then</code>\u4E2D\u76F4\u63A5\u629B\u9519, \u8FD9\u6837\u5C31\u4E0D\u4F1A\u6267\u884C\u540E\u9762\u7684<code>then</code>, \u76F4\u63A5\u8DF3\u5230<code>catch</code>\u65B9\u6CD5\u6253\u5370<code>err</code>(\u4F46\u6B64\u65B9\u6CD5\u5E76\u6CA1\u6709\u5B9E\u9645\u4E2D\u65AD)\u3002\u4F46\u5982\u679C\u94FE\u8DEF\u4E2D\u5BF9\u9519\u8BEF\u8FDB\u884C\u4E86\u6355\u83B7\uFF0C\u540E\u9762\u7684<code>then</code>\u51FD\u6570\u8FD8\u662F\u4F1A\u7EE7\u7EED\u6267\u884C\u3002</p><p><code>Promise</code>\u7684<code>then</code>\u65B9\u6CD5\u63A5\u6536\u4E24\u4E2A\u53C2\u6570\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Promise</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>onFulfilled<span class="token punctuation">,</span> onRejected<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u82E5<code>onFulfilled</code>\u6216<code>onRejected</code>\u662F\u4E00\u4E2A\u51FD\u6570\uFF0C\u5F53\u51FD\u6570\u8FD4\u56DE\u4E00\u4E2A\u65B0<code>Promise</code>\u5BF9\u8C61\u65F6\uFF0C\u539F<code>Promise</code>\u5BF9\u8C61\u7684\u72B6\u6001\u5C06\u8DDF\u65B0\u5BF9\u8C61\u4FDD\u6301\u4E00\u81F4\uFF0C\u8BE6\u89C1<code>Promises/A+</code>\u6807\u51C6\u3002</p><p>\u56E0\u6B64\uFF0C\u5F53\u65B0\u5BF9\u8C61\u4FDD\u6301\u201C<code>pending</code>\u201D\u72B6\u6001\u65F6\uFF0C\u539F<code>Promise</code>\u94FE\u5C06\u4F1A\u4E2D\u6B62\u6267\u884C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;then 1&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;then 2&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;then 3&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u4E2D\u65AD<code>Promise</code></li></ul><p>\u6CE8\u610F\u8FD9\u91CC\u662F\u4E2D\u65AD\u800C\u4E0D\u662F\u7EC8\u6B62\uFF0C\u56E0\u4E3A <code>Promise</code> \u65E0\u6CD5\u7EC8\u6B62\uFF0C\u8FD9\u4E2A\u4E2D\u65AD\u7684\u610F\u601D\u662F\uFF1A\u5728\u5408\u9002\u7684\u65F6\u5019\uFF0C\u628A <code>pending</code> \u72B6\u6001\u7684 <code>promise</code> \u7ED9 <code>reject</code> \u6389\u3002\u4F8B\u5982\u4E00\u4E2A\u5E38\u89C1\u7684\u5E94\u7528\u573A\u666F\u5C31\u662F\u5E0C\u671B\u7ED9\u7F51\u7EDC\u8BF7\u6C42\u8BBE\u7F6E\u8D85\u65F6\u65F6\u95F4\uFF0C\u4E00\u65E6\u8D85\u65F6\u5C31\u5C31\u4E2D\u65AD\uFF0C\u6211\u4EEC\u8FD9\u91CC\u7528\u5B9A\u65F6\u5668\u6A21\u62DF\u4E00\u4E2A\u7F51\u7EDC\u8BF7\u6C42\uFF0C\u968F\u673A 3 \u79D2\u4E4B\u5185\u8FD4\u56DE\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">timeoutWrapper</span><span class="token punctuation">(</span><span class="token parameter">p<span class="token punctuation">,</span> timeout <span class="token operator">=</span> <span class="token number">2000</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> wait <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&#39;\u8BF7\u6C42\u8D85\u65F6&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> timeout<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">race</span><span class="token punctuation">(</span><span class="token punctuation">[</span>p<span class="token punctuation">,</span> wait<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,15),e=[o];function c(u,i){return s(),a("div",null,e)}var r=n(p,[["render",c],["__file","163.html.vue"]]);export{r as default};
