(window.webpackJsonp=window.webpackJsonp||[]).push([[477],{908:function(t,s,a){"use strict";a.r(s);var e=a(1),v=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"前端缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端缓存"}},[t._v("#")]),t._v(" 前端缓存")]),t._v(" "),a("h2",{attrs:{id:"dns缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dns缓存"}},[t._v("#")]),t._v(" DNS缓存")]),t._v(" "),a("p",[t._v("进入页面的时候会进行DNS查询，找到域名对应的服务器的IP地址，再发送请求")]),t._v(" "),a("p",[t._v("DNS域名查找先在客户端进行"),a("code",[t._v("递归查询")]),t._v("，如图")]),t._v(" "),a("p",[a("img",{attrs:{src:"/notes/assets/performance/base/4b5d1b4cc92047b78ba93ebe4662e268_tplv-k3u1fbpfcp-watermark.awebp",alt:""}})]),t._v(" "),a("p",[t._v("在任何一步找到就会结束查找流程，而整个过程客户端只发出一次查询请求")]),t._v(" "),a("p",[t._v("如果都没有找到，就会走DNS服务器设置的转发器，如果没设置转发模式，则向"),a("code",[t._v("13")]),t._v("根发起解析请求，这里就是"),a("code",[t._v("迭代查询")]),t._v("，如图")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("13根：\n全球共有13个根域服务器IP地址，不是13台服务器！\n因为借助任播技术，可以在全球设立这些IP的镜像站点，所以访问的不是唯一的那台主机\n")])])]),a("p",[a("img",{attrs:{src:"/notes/assets/performance/base/b56c61d000a1432da72e58910b9e1518_tplv-k3u1fbpfcp-watermark.awebp",alt:""}})]),t._v(" "),a("p",[t._v("很明显，整个过程会发出多次查询请求")]),t._v(" "),a("p",[t._v("在第一次进入页面后就会把DNS解析的地址记录缓存在客户端，之后再进的话至少不需要发起后面的迭代查询了，从而速度更快")]),t._v(" "),a("h2",{attrs:{id:"http缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http缓存"}},[t._v("#")]),t._v(" HTTP缓存")]),t._v(" "),a("p",[t._v("就是将http请求获取的页面资源存储在本地，之后再加载直接从缓存中获取而不用请求服务器，从而响应更快。先看图：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/notes/assets/performance/base/8f52c3b4505144098cf98ffa11096379_tplv-k3u1fbpfcp-watermark.awebp",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"强缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#强缓存"}},[t._v("#")]),t._v(" 强缓存")]),t._v(" "),a("p",[t._v("第一次请求时，服务器把资源的过期时间通过响应头中的"),a("code",[t._v("Expires")]),t._v("和"),a("code",[t._v("Cache-Control")]),t._v("两个字段告诉浏览器，之后再请求这个资源的话，会判断有没有过期，没有过期就直接拿来用，不向服务器发起请求，这就是强缓存")]),t._v(" "),a("h4",{attrs:{id:"expires"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#expires"}},[t._v("#")]),t._v(" Expires")]),t._v(" "),a("p",[t._v("用来指定资源到期绝对时间，服务器响应时，添加在响应头中。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("expires"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Wed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v(" Nov "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("08")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("41")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("00")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GMT")]),t._v("\n")])])]),a("p",[t._v("注意：如果服务器和浏览器端时间不一致的话可能导致失败。比如现在时间是8月1，expires过期时间是8月2，客户端把电脑时间改成了8月3，那就用不了这个缓存")]),t._v(" "),a("h4",{attrs:{id:"cache-control"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cache-control"}},[t._v("#")]),t._v(" Cache-Control")]),t._v(" "),a("p",[t._v("指定资源过期时间秒，如下，表示在这个请求正确返回后的300秒内，资源可以使用，否则过期")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("cache"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("control"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("max"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),t._v("\n")])])]),a("h4",{attrs:{id:"为什么指定缓存过期时间需要两个字段呢"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么指定缓存过期时间需要两个字段呢"}},[t._v("#")]),t._v(" 为什么指定缓存过期时间需要两个字段呢？")]),t._v(" "),a("p",[t._v("因为有的浏览器只认识 Cache-Control，有的浏览器不认识，不认识的情况下再找 Expires")]),t._v(" "),a("h4",{attrs:{id:"expires-和-cache-control-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#expires-和-cache-control-的区别"}},[t._v("#")]),t._v(" Expires 和 Cache-Control 的区别")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Expires 是"),a("code",[t._v("HTTP/1.0")]),t._v("中的，Cache-Control 是"),a("code",[t._v("HTTP/1.1")]),t._v("中的;")])]),t._v(" "),a("li",[a("p",[t._v("Expires 是为了兼容，在不支持 "),a("code",[t._v("HTTP/1.1")]),t._v(" 的情况下才会发生作用")])]),t._v(" "),a("li",[a("p",[t._v("两者同时存在的话 Cache-Control 优先级高于 Expires;")])])]),t._v(" "),a("h4",{attrs:{id:"cache-control请求头常见属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cache-control请求头常见属性"}},[t._v("#")]),t._v(" Cache-Control请求头常见属性")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("字段(单位秒)")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("max-age=300")]),t._v(" "),a("td",[t._v("拒绝接受长于300秒的资源，为0时表示获取最新资源")])]),t._v(" "),a("tr",[a("td",[t._v("max-stale=100")]),t._v(" "),a("td",[t._v("缓存过期之后的100秒内，依然拿来用")])]),t._v(" "),a("tr",[a("td",[t._v("min-fresh=50")]),t._v(" "),a("td",[t._v("缓存到期时间还剩余50秒开始，就不给拿了，不新鲜了")])]),t._v(" "),a("tr",[a("td",[t._v("no-cache")]),t._v(" "),a("td",[t._v("协商缓存验证")])]),t._v(" "),a("tr",[a("td",[t._v("no-store")]),t._v(" "),a("td",[t._v("不使用缓存")])]),t._v(" "),a("tr",[a("td",[t._v("only-if-chached")]),t._v(" "),a("td",[t._v("只使用缓存，没有就报504错误")])]),t._v(" "),a("tr",[a("td",[t._v("no-transform")]),t._v(" "),a("td",[t._v("不得对资源进行转换或转变。Content-Encoding, Content-Range,Content-Type等HTTP头不能由代理修改。然并卵")])])])]),t._v(" "),a("p",[a("strong",[t._v("多少秒是自定义的，我这里写死是方便理解")])]),t._v(" "),a("h4",{attrs:{id:"cache-control响应头常见属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cache-control响应头常见属性"}},[t._v("#")]),t._v(" Cache-Control响应头常见属性")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("字段(单位秒)")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("max-age=300")]),t._v(" "),a("td",[t._v("缓存有效期300秒")])]),t._v(" "),a("tr",[a("td",[t._v("s-maxage=500")]),t._v(" "),a("td",[t._v("有效期500秒，优先级高于max-age，适用于共享缓存(如CDN)")])]),t._v(" "),a("tr",[a("td",[t._v("public")]),t._v(" "),a("td",[t._v("可以被任何终端缓存，包括代理服务器、CDN等")])]),t._v(" "),a("tr",[a("td",[t._v("private")]),t._v(" "),a("td",[t._v("只能被用户的浏览器终端缓存(私有缓存)")])]),t._v(" "),a("tr",[a("td",[t._v("no-cache")]),t._v(" "),a("td",[t._v("先和服务端确认资源是否发生变化，没有就使用")])]),t._v(" "),a("tr",[a("td",[t._v("no-store")]),t._v(" "),a("td",[t._v("不缓存")])]),t._v(" "),a("tr",[a("td",[t._v("no-transform")]),t._v(" "),a("td",[t._v("与上面请求指令中的一样")])]),t._v(" "),a("tr",[a("td",[t._v("must-revalidate")]),t._v(" "),a("td",[t._v("客户端缓存过期了就向源服务器验证")])]),t._v(" "),a("tr",[a("td",[t._v("proxy-revalidate")]),t._v(" "),a("td",[t._v("代理缓存过期了就去源服务器重新获取")])])])]),t._v(" "),a("h3",{attrs:{id:"强缓存的缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#强缓存的缺点"}},[t._v("#")]),t._v(" 强缓存的缺点")]),t._v(" "),a("p",[a("strong",[t._v("就是缓存过期之后，不管资源有没有变化，都会重新发起请求，重新获取资源")])]),t._v(" "),a("p",[t._v("而我们希望的是在资源文件没有更新的情况下，即使过期了也不重新获取资源，继续使用旧资源")]),t._v(" "),a("p",[t._v("所以协商缓存它来了，在强缓存过期的情况下，再走协商缓存的流程，判断文件有没有更新")]),t._v(" "),a("h3",{attrs:{id:"协商缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存"}},[t._v("#")]),t._v(" 协商缓存")]),t._v(" "),a("p",[t._v("第一次请求资源时，服务器除了会返回给浏览器上面说的过期时间，还会在响应头添加 "),a("code",[t._v("Last-Modified")]),t._v(" 字段，告诉浏览器该资源的最后修改时间")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("last"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("modified"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fri"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("27")]),t._v(" Oct "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("08")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("35")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("57")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GMT")]),t._v("\n")])])]),a("p",[t._v("然后浏览器再次请求的时候就把这个时间再通过另一个字段"),a("code",[t._v("If-Modified-Since")]),t._v("，发送给服务器")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("modified"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("since"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fri"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("27")]),t._v(" Oct "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("08")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("35")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("57")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GMT")]),t._v("\n")])])]),a("p",[t._v("服务器再把这两个字段的时间对比，如果是一样的，就说明文件没有被更新过，就返回状态码304和空响应体给浏览器，浏览器直接拿过期了的资源继续使用即可；如果对比不一样说明资源有更新，就返回状态码200和新的资源，如图")]),t._v(" "),a("p",[a("img",{attrs:{src:"/notes/assets/performance/base/570f039c27024ef7a3333779247bebfb_tplv-k3u1fbpfcp-watermark.awebp",alt:""}})]),t._v(" "),a("p",[t._v("所以说"),a("code",[t._v("Last-Modified")]),t._v("/"),a("code",[t._v("If-Modified-Since")]),t._v("它俩是成对的，是为了对比文件修改时间")]),t._v(" "),a("h4",{attrs:{id:"缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缺点"}},[t._v("#")]),t._v(" 缺点")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("如果本地打开了缓存文件，即使没有对文件进行修改，但还是会造成"),a("code",[t._v("Last-Modified")]),t._v("被修改，服务器端不能命中缓存导致发送相同资源")])]),t._v(" "),a("li",[a("p",[t._v("因为"),a("code",[t._v("Last-Modified")]),t._v("只能以秒计时，如果在不可感知的时间内修改了文件，服务器端会认为还是命中了，无法返回正确的资源")])]),t._v(" "),a("li",[a("p",[t._v("如果资源有周期性变化，如资源修改后，在一个周期内又改回了原来的样子，我们认为这个周期前的缓存是可以使用的，但是"),a("code",[t._v("Last-Modified")]),t._v("不这样认为")])])]),t._v(" "),a("p",[t._v("因为这些缺点，所以便有了另外一对 "),a("code",[t._v("ETag")]),t._v("/"),a("code",[t._v("If-None-Match")]),t._v("，用来对比文件内容")]),t._v(" "),a("p",[a("strong",[a("code",[t._v("ETag")]),t._v("/"),a("code",[t._v("If-None-Match")])])]),t._v(" "),a("p",[t._v("第一次请求资源时，服务器除了会在响应头上返回"),a("code",[t._v("Expires")]),t._v("、"),a("code",[t._v("Cache-Control")]),t._v("、"),a("code",[t._v("Last-Modified")]),t._v("，还在返回"),a("code",[t._v("Etag")]),t._v("字段，表示当前资源文件的一个唯一标识。这个标识符由服务器基于文件内容编码生成，能精准感知文件的变化，只要文件内容不同，"),a("code",[t._v("ETag")]),t._v("就会重新生成")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("etag"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("W")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"132489-1627839023000"')]),t._v("\n")])])]),a("p",[t._v("然后浏览器再次请求的时候就把这个文件标识 再通过另一个字段 "),a("code",[t._v("If-None-Match")]),t._v("，发送给服务器")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("match"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("W")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"132489-1627839023000"')]),t._v("\n")])])]),a("p",[t._v("服务器再把这两个字段的时间对比，如果发现是一样的，就说明文件没有被更新过，就返回状态码304和空响应体给浏览器，浏览器直接拿过期了的资源继续使用；如果对比不一样说明资源有更新，就返回状态码200和新的资源")]),t._v(" "),a("p",[a("strong",[a("code",[t._v("Last-Modified")]),t._v(" 和 "),a("code",[t._v("ETag")]),t._v(" 的区别")])]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("Etag")]),t._v(" 感知文件精准度要高于 "),a("code",[t._v("Last-Modified")])])]),t._v(" "),a("li",[a("p",[t._v("同时使用时，服务器校验优先级 "),a("code",[t._v("Etag")]),t._v("/"),a("code",[t._v("If-None-Match")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Last-Modified")]),t._v(" 性能上要优于 "),a("code",[t._v("Etag")]),t._v("，因为 "),a("code",[t._v("Etag")]),t._v(" 生成过程中需要服务器付出额外开销，会影响服务器端的性能，所以它并不能完全替代 "),a("code",[t._v("Last-Modified")]),t._v("，只能作为补充和强化")])])]),t._v(" "),a("h3",{attrs:{id:"强缓存与协商缓存的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#强缓存与协商缓存的区别"}},[t._v("#")]),t._v(" 强缓存与协商缓存的区别")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("优先查找强缓存，没有命中再查找协商缓存")])]),t._v(" "),a("li",[a("p",[t._v("强缓存不发请求到服务器，所以有时候资源更新了浏览器还不知道，但是协商缓存会发请求到服务器，资源是否有更新，服务器肯定知道")])]),t._v(" "),a("li",[a("p",[t._v("目前项目大多数使用缓存文案")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("协商缓存一般存储："),a("code",[t._v("HTML")])])]),t._v(" "),a("li",[a("p",[t._v("强缓存一般存储："),a("code",[t._v("css")]),t._v(", "),a("code",[t._v("image")]),t._v(", "),a("code",[t._v("js")]),t._v("，文件名带上 "),a("code",[t._v("hash")])])])])])]),t._v(" "),a("h3",{attrs:{id:"启发式缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#启发式缓存"}},[t._v("#")]),t._v(" 启发式缓存")]),t._v(" "),a("p",[t._v("就是响应中没有"),a("code",[t._v("Expires")]),t._v("，"),a("code",[t._v("Cache-Control：max-age")]),t._v("或"),a("code",[t._v("Cache-Control:s-maxage")]),t._v("，并且响应中不包含其他有关缓存的限制，缓存可以使用启发式方法计算缓存有效期")]),t._v(" "),a("p",[t._v("通常会根据响应头中的"),a("code",[t._v("Date")]),t._v("字段(报文创建时间)减去"),a("code",[t._v("Last-Modified")]),t._v("值的10%作为缓存时间")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("（Date "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" Last"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Modified"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n")])])]),a("h3",{attrs:{id:"缓存实际使用策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓存实际使用策略"}},[t._v("#")]),t._v(" 缓存实际使用策略")]),t._v(" "),a("p",[a("strong",[t._v("对于频繁变动的资源")]),t._v("：")]),t._v(" "),a("p",[t._v("使用"),a("code",[t._v("Cache-Control：no-cache")]),t._v("，使浏览器每次都请求数据，然后配合"),a("code",[t._v("Etag")]),t._v("或"),a("code",[t._v("Last-Modified")]),t._v("来验证资源是否有效，这样虽然不能节省请求数量，但能显著减少响应数据大小")]),t._v(" "),a("p",[a("strong",[t._v("对于不常变化的资源")]),t._v("：")]),t._v(" "),a("p",[t._v("可以给它们的"),a("code",[t._v("Cache-Control")]),t._v("配置一个很大的"),a("code",[t._v("max-age=31536000")]),t._v("(一年)，这样浏览器之后请求相同的URL会命中强缓存，而为了解决更新问题，就需要在文件名(或者路径)中添加"),a("code",[t._v("hash")]),t._v("，版本号等动态字符，之后更改动态字符，从而达到更改引用URL的目的，让之前的强缓存失效(其实并未立即失效，只是不再使用了而已)")]),t._v(" "),a("h2",{attrs:{id:"缓存存放位置-和读取的优先级"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓存存放位置-和读取的优先级"}},[t._v("#")]),t._v(" 缓存存放位置，和读取的优先级")]),t._v(" "),a("p",[t._v("优先级就是按下面顺序")]),t._v(" "),a("ol",[a("li",[a("p",[a("strong",[a("code",[t._v("Service Worker")])])])]),t._v(" "),a("li",[a("p",[a("strong",[a("code",[t._v("Memory Cache(内存)")])])])])]),t._v(" "),a("p",[t._v("就是将资源存储在内存中，下次访问直接从内存中读取。例如刷新页面时，很多数据都是来自于内存缓存。一般存储脚本、字体、图片。")]),t._v(" "),a("p",[t._v("优点是读取速度快；缺点由于一旦关闭Tab标签页，内存中的缓存也就释放了，所以容量和存储时效上差些")]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[a("strong",[a("code",[t._v("Disk Cache(硬盘)")])])])]),t._v(" "),a("p",[t._v("就是将资源存储在硬盘中，下次访问时直接从硬盘中读取。它会根据请求头中的字段判断哪些资源需要缓存，哪些资源可以不请求直接使用，哪些资源已经过期需要重新请求。并且即使是跨域站点的情况下，相同地址的资源一旦被硬盘缓存下来，就不会再次请求。")]),t._v(" "),a("p",[t._v("优点是缓存在硬盘中，容量大，并且存储时效性更长；缺点是读取速度慢些")]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[a("strong",[a("code",[t._v("Push Cache")])])])]),t._v(" "),a("p",[t._v("这个是推送缓存，是"),a("code",[t._v("HTTP/2")]),t._v("中的内容，当上面三种缓存都没有命中时才会，被使用。它只会存在于"),a("code",[t._v("Session")]),t._v("中，一旦会话结束就会释放，所以缓存时间很短，而且Push Cache中的缓存只能被使用一次")]),t._v(" "),a("h2",{attrs:{id:"cdn缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cdn缓存"}},[t._v("#")]),t._v(" CDN缓存")]),t._v(" "),a("p",[t._v("当我们发送一个请求时，浏览器本地缓存失效的情况下，CDN会帮我们去计算哪得到这些内容的路径短而且快。")]),t._v(" "),a("p",[t._v("比如在广州请求广州的服务器就比请求新疆的服务器响应速度快得多，然后向最近的CDN节点请求数据")]),t._v(" "),a("p",[t._v("CDN会判断缓存数据是否过期，如果没有过期，则直接将缓存数据返回给客户端，从而加快了响应速度。如果CDN判断缓存过期，就会向服务器发出回源请求，从服务器拉取最新数据，更新本地缓存，并将最新数据返回给客户端。")]),t._v(" "),a("p",[t._v("CDN不仅解决了跨运营商和跨地域访问的问题，大大降低访问延时的同时，还起到了分流的作用，减轻了源服务器的负载")]),t._v(" "),a("h2",{attrs:{id:"几种刷新和回车的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#几种刷新和回车的区别"}},[t._v("#")]),t._v(" 几种刷新和回车的区别")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("使用 "),a("code",[t._v("Ctrl+F5")]),t._v(" 强制刷新页面时，会对本地缓存文件直接过期，然后跳过强缓存和协商缓存，直接请求服务器")])]),t._v(" "),a("li",[a("p",[t._v("点击刷新或 "),a("code",[t._v("F5")]),t._v(" 刷新页面时，对本地缓存文件过期，然后带"),a("code",[t._v("If-Modifed-Since")]),t._v("和"),a("code",[t._v("If-None-Match")]),t._v("发起协商缓存验证新鲜度")])]),t._v(" "),a("li",[a("p",[t._v("浏览器输入"),a("code",[t._v("URL")]),t._v("回车，浏览器查找 "),a("code",[t._v("Disk Cache")]),t._v("，有则使用，没有则发送网络请求")])])]),t._v(" "),a("h2",{attrs:{id:"本地存储"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#本地存储"}},[t._v("#")]),t._v(" 本地存储")]),t._v(" "),a("h3",{attrs:{id:"cookie"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cookie"}},[t._v("#")]),t._v(" Cookie")]),t._v(" "),a("p",[t._v("最早被提出来的本地存储方式，在每一次 http 请求携带 Cookie，可以判断多个请求是不是同一个用户发起的，特点是：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("有安全问题，如果被拦截，就可以获得 Session 所有信息，然后将 Cookie 转发就能达到目的。(关于攻击和防范本可以看我另一篇文章 "),a("a",{attrs:{href:"https://juejin.cn/post/6991888178890145828",target:"_blank",rel:"noopener noreferrer"}},[t._v("吃透浏览器安全（同源限制/XSS/CSRF/中间人攻击）"),a("OutboundLink")],1),t._v(")")])]),t._v(" "),a("li",[a("p",[t._v("每个域名下的Cookie不能超过20个，大小不能超过4kb")])]),t._v(" "),a("li",[a("p",[t._v("Cookie在请求新页面的时候都会被发送过去")])]),t._v(" "),a("li",[a("p",[t._v("Cookie创建成功名称就不能修改")])]),t._v(" "),a("li",[a("p",[t._v("跨域名不能共享Cookie")])])]),t._v(" "),a("p",[a("strong",[t._v("如果要跨域名共享Cookie有两个方法")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("用 Nginx 反向代理")])]),t._v(" "),a("li",[a("p",[t._v("在一个站点登录之后，往其他网站写 Cookie。服务端的 Session 存储到一个节点，Cookie 存储 SessionId")])])]),t._v(" "),a("p",[a("strong",[t._v("Cookie的使用场景")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("最常见的就是 Cookie 和 Session 结合使用，将 SessionId 存储到 Cookie 中，每次请求都会带上这个 SessionId 这样服务端就知道是谁发起的请求")])]),t._v(" "),a("li",[a("p",[t._v("可以用来统计页面的点击次数")])])]),t._v(" "),a("p",[a("strong",[t._v("Cookie都有哪些字段")])]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("Name")]),t._v("、"),a("code",[t._v("Size")]),t._v(" 故名思意")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Value")]),t._v("：保存用户登录状态，应该将该值加密，不能使用明文")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Path")]),t._v("：可以访问此 Cookie 的路径。比如 juejin.cn/editor ，path是/editor，只有/editor这个路径下的才可以读取 Cookie")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("httpOnly")]),t._v("：表示禁止通过 JS 访问 Cookie，减少 XSS 攻击。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Secure")]),t._v("：只能在 https 请求中携带")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("SameSite")]),t._v("：规定浏览器不能在跨域请求中携带 Cookie 减少 CSRF 攻击，详细说明看这里")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Domain")]),t._v("：域名，跨域或者 Cookie 的白名单，允许一个子域获取或操作父域的 Cookie，实现单点登录的话会非常有用")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Expires")]),t._v("/"),a("code",[t._v("Max-size")]),t._v("：指定时间或秒数的过期时间，没设置的话就和 Session 一样关闭浏览器就失效")])])]),t._v(" "),a("h3",{attrs:{id:"locastorage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#locastorage"}},[t._v("#")]),t._v(" LocaStorage")]),t._v(" "),a("p",[t._v("是H5的新特性，是将信息存储到本地，它的存储大小比 Cookie 大得多，有5M，而且是永久存储，除非主动清理，不然会一直存在")]),t._v(" "),a("p",[t._v("受到同源策略限制，就是端口、协议、主机地址有任何一样不同都不能访问，还有在浏览器设为隐私模式下，也不能读取 LocalStorage")]),t._v(" "),a("p",[t._v("它的使用场景就很多了，比如存储网站主题、存储用户信息、等等，存数数据量多或者不怎么改变的数据都可以用它")]),t._v(" "),a("h3",{attrs:{id:"sessionstorage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sessionstorage"}},[t._v("#")]),t._v(" SessionStorage")]),t._v(" "),a("p",[t._v("SessionStorage 也是H5新特性，主要用于临时保存同一窗口或标签页的数据，刷新页面时不会删除，但是关闭窗口或标签页之后就会删除这些数据")]),t._v(" "),a("p",[t._v("SessionStorage 和 LocalStorage 一样是在本地存储，而且都不能被爬虫爬取，并且都有同源策略的限制，只不过 SessionStorage 更加严格，只有在同一浏览器的同一窗口下才能共享")]),t._v(" "),a("p",[t._v("它的 API 和 LocalStorage 也一样 getItem、setItem、removeItem、clear、key")]),t._v(" "),a("p",[t._v("它的使用场景一般是具有时效性的，比如存储一些网站的游客登录信息，还有临时的浏览记录等")]),t._v(" "),a("h3",{attrs:{id:"indexdb"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#indexdb"}},[t._v("#")]),t._v(" indexDB")]),t._v(" "),a("p",[t._v("是浏览器本地数据库，有以下特点")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("键值对储存")]),t._v("：内部用对象仓库存放数据，所有类型的数据都可以直接存入，包括js对象，以键值对的形式保存，每条数据都有对应的主键，主键是唯一的")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("异步")]),t._v("：indexDB操作时用户依然可能进行其他操作，异步设计是为了防止大量数据的读写，拖慢网页的表现")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("支持事务")]),t._v("：比如说修改整个表的数据，修改了一半的时候报了个错，这时候会全部恢复到没修改之关的状态，不存在修改一半成功的情况")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("同源限制")]),t._v("：每一个数据库应创建它对应的域名，网页只能访问自身域名下的数据库")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("存储空间大")]),t._v("：一般来说不少于250MB，甚至没有上限")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("支持二进制存储")]),t._v("：比如ArrayBuffer对象和Blob对象")])])]),t._v(" "),a("p",[t._v("前端存储方式除了上面四个，还有WebSQL，类似于SQLite，是真正意义上的关系型数据库，可以使用sql进行操作，只是用js时要进行转换，比较麻烦")]),t._v(" "),a("h3",{attrs:{id:"上面四个的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#上面四个的区别"}},[t._v("#")]),t._v(" 上面四个的区别")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th"),t._v(" "),a("th",[t._v("Cookie")]),t._v(" "),a("th",[t._v("SessionStorage")]),t._v(" "),a("th",[t._v("LocalStorage")]),t._v(" "),a("th",[t._v("indexDB")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("存储大小")]),t._v(" "),a("td",[t._v("4k")]),t._v(" "),a("td",[t._v("5M或更大")]),t._v(" "),a("td",[t._v("5M或更大")]),t._v(" "),a("td",[t._v("无限")])]),t._v(" "),a("tr",[a("td",[t._v("存储时间")]),t._v(" "),a("td",[t._v("可指定时间,没指定关闭窗口就失效")]),t._v(" "),a("td",[t._v("浏览器窗口关闭就失效")]),t._v(" "),a("td",[t._v("永久有效")]),t._v(" "),a("td",[t._v("永久有效")])]),t._v(" "),a("tr",[a("td",[t._v("作用域")]),t._v(" "),a("td",[t._v("同浏览器，所有同源标签页")]),t._v(" "),a("td",[t._v("当前标签页")]),t._v(" "),a("td",[t._v("同浏览器，所有同源标签页")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("存在于")]),t._v(" "),a("td",[t._v("请求中来回传递")]),t._v(" "),a("td",[t._v("客户端本地")]),t._v(" "),a("td",[t._v("客户端本地")]),t._v(" "),a("td",[t._v("客户端本地")])]),t._v(" "),a("tr",[a("td",[t._v("同源策略")]),t._v(" "),a("td",[t._v("同浏览器，只能被同源同路径页面访问共享")]),t._v(" "),a("td",[t._v("自己用")]),t._v(" "),a("td",[t._v("同浏览器，只能被同源页面访问共享")]),t._v(" "),a("td")])])]),t._v(" "),a("h2",{attrs:{id:"离线存储"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#离线存储"}},[t._v("#")]),t._v(" 离线存储")]),t._v(" "),a("h3",{attrs:{id:"service-worker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#service-worker"}},[t._v("#")]),t._v(" Service Worker")]),t._v(" "),a("p",[a("code",[t._v("Service Worker")]),t._v("是运行js主线程之外的，在浏览器背后的独立线程，自然也"),a("strong",[t._v("无法访问DOM")]),t._v("，它相当于一个代理服务器，"),a("strong",[t._v("可以拦截用户发出的请求，修改请求或者直接向用户发出回应，不用联系服务器")]),t._v("。比如加载JS和图片，这就让我们可以在离线的情况下使用网络应用")]),t._v(" "),a("p",[t._v("一般用于"),a("code",[t._v("离线缓存")]),t._v("(提高首屏加载速度)、"),a("code",[t._v("消息推送")]),t._v("、"),a("code",[t._v("网络代理")]),t._v("等功能。使用Service Worker的话必须使用https协议，因为Service Worker中涉及到请求拦截，需要https保障安全")]),t._v(" "),a("p",[t._v("用Service Worker来实现缓存分三步：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("一是注册")])]),t._v(" "),a("li",[a("p",[t._v("然后监听install事件后就可以缓存文件")])]),t._v(" "),a("li",[a("p",[t._v("下次再访问的时候就可以通过拦截请求的方式直接返回缓存的数据")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// index.js 注册")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("navigator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("serviceWorker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    navigator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("serviceWorker "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("register")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sw.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("registration")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'service worker 注册成功'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("catch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'servcie worker 注册失败'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// sw.js  监听 `install` 事件，回调中缓存所需文件 ")]),t._v("\nself"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'install'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 打开指定的缓存文件名")]),t._v("\n    e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("waitUntil")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("caches"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'my-cache'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("cache")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 添加需要缓存的文件")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" cache"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addAll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./index.html'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./index.css'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 拦截所有请求事件 缓存中有请求的数据就直接用缓存，否则去请求数据 ")]),t._v("\nself"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fetch'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 查找request中被缓存命中的response")]),t._v("\n    e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("respondWith")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("caches"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("response")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" response\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fetch source'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=v.exports}}]);