(window.webpackJsonp=window.webpackJsonp||[]).push([[319],{828:function(t,s,e){"use strict";e.r(s);var n=e(1),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:""}},[e("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")])]),t._v(" "),e("h1",{attrs:{id:"suspense"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#suspense"}},[t._v("#")]),t._v(" suspense")]),t._v(" "),e("p",[t._v("React 中的"),e("code",[t._v("suspendedTime")]),t._v("用来记录的是还没有被提交但是已经被更新的任务，在这里首先要讲解一个概念，那就是"),e("code",[t._v("finishedWork")]),t._v("。一开始以为"),e("code",[t._v("finishedWork")]),t._v("存储的是"),e("code",[t._v("workInProgress")]),t._v("，也就是"),e("code",[t._v("current")]),t._v("的引用，那存的不就是自己么，但是后来弄清楚了。试想从"),e("code",[t._v("renderRoot")]),t._v("开始做的事情都是在"),e("code",[t._v("workInProgress")]),t._v("上操作的，这个对象通过调用")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("nextUnitOfWork "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("createWorkInProgress")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  nextRoot"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("current"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  nextRenderExpirationTime"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("createWorkInProgress")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("current"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  pendingProps"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  expirationTime"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ExpirationTime"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" workInProgress "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" current"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("alternate\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("workInProgress "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    workInProgress "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("createFiber")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      current"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tag"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      pendingProps"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      current"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      current"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    workInProgress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("elementType "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" current"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("elementType\n    workInProgress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" current"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type\n    workInProgress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stateNode "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" current"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stateNode\n\n    workInProgress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("alternate "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" current\n    current"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("alternate "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" workInProgress\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    workInProgress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pendingProps "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pendingProps\n\n    workInProgress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("effectTag "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" NoEffect\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The effect list is no longer valid.")]),t._v("\n    workInProgress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nextEffect "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n    workInProgress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstEffect "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n    workInProgress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastEffect "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  workInProgress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("childExpirationTime "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" current"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("childExpirationTime\n  workInProgress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("expirationTime "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" current"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("expirationTime\n\n  workInProgress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("child "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" current"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("child\n  workInProgress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("memoizedProps "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" current"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("memoizedProps\n  workInProgress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("memoizedState "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" current"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("memoizedState\n  workInProgress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("updateQueue "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" current"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("updateQueue\n  workInProgress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstContextDependency "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" current"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstContextDependency\n\n  workInProgress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sibling "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" current"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sibling\n  workInProgress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("index "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" current"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("index\n  workInProgress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ref "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" current"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ref\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" workInProgress\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("blockquote",[e("p",[e("strong",[t._v("注意")]),t._v(": 这里返回的是一个新的对象，在更新的过程中对于需要更新的节点都会创建这么一个对象，并对其拷贝属性。对于原始类型的数据那么是值拷贝，对于引用类型是否是引用拷贝呢？答案是：对于在更新过程中需要改变的对象，会创建一个新的对象，这也是创建"),e("code",[t._v("workInProgress")]),t._v("的原因，这里尤其需要注意的是"),e("code",[t._v("updateQueue")]),t._v("，在调用"),e("code",[t._v("processUpdateQueue")]),t._v("的时候，需要调用一个方法")])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" ensureWorkInProgressQueueIsAClone"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("State"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  workInProgress"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  queue"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" UpdateQueue"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("State"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" UpdateQueue"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("State"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" current "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" workInProgress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("alternate\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("queue "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" current"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("updateQueue"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      queue "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" workInProgress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("updateQueue "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cloneUpdateQueue")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("queue"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" queue\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("也就是说"),e("code",[t._v("updateQueue")]),t._v("也是一个新的对象，所以在更新过程中改变的"),e("code",[t._v("Update")]),t._v("的顺序关系，并不会影响到"),e("code",[t._v("current")]),t._v("上的顺序，需要注意的是新创建的"),e("code",[t._v("update")]),t._v("调用"),e("code",[t._v("enqueueUpdate")]),t._v("会往"),e("code",[t._v("current")]),t._v("和"),e("code",[t._v("workInProgress")]),t._v("都插入。")]),t._v(" "),e("p",[t._v("说了这么多到底要说什么呢？"),e("strong",[t._v("答案就是被挂起的"),e("code",[t._v("work")]),t._v("其实就是不把"),e("code",[t._v("workInProgress")]),t._v("的整棵树进入"),e("code",[t._v("commit")]),t._v("阶段的操作，挂起是专指"),e("code",[t._v("commit")]),t._v("的，只有"),e("code",[t._v("commit")]),t._v("阶段可以被挂起。而被挂起的提交，除了"),e("code",[t._v("timeout")]),t._v("的情况，都可以认为这次更新被抛弃了。")])]),t._v(" "),e("h1",{attrs:{id:"ontimeout"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ontimeout"}},[t._v("#")]),t._v(" onTimeout")]),t._v(" "),e("p",[e("code",[t._v("root.timeoutHandler")]),t._v("用来记录子树中需要"),e("code",[t._v("timeout")]),t._v("执行的任务，这类任务被挂起的原因一般是因为抛出了"),e("code",[t._v("promise")]),t._v("，并且自上次提交经过了"),e("code",[t._v("maxDruation")]),t._v("时间的任务，"),e("code",[t._v("nextLatestAbsoluteTimeoutMs")]),t._v("就是用来记录子树中优先级最高的需要提交的被挂起的任务的。被挂起代表了任务已经更新完成，但是因为一些原因不需要立马提交，比如：")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("有错误出现，并且有低优先级的更新，那么可以跟低优先级的更新一起被提交")])]),t._v(" "),e("li",[e("p",[t._v("有错误但是没有低优先级的任务，发起一次同步的更新，再次执行被挂起的优先级的任务")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("Suspense")]),t._v("组件接收到异常的情况，根据情况挂起一些时间，最长为优先级最高的任务的过期时间，如果超时会执行"),e("code",[t._v("flushRoot")]),t._v("强制提交")])])]),t._v(" "),e("p",[t._v("需要注意的是，被挂起的任务只有"),e("code",[t._v("Suspense")]),t._v("的情况是设置了"),e("code",[t._v("timeout")]),t._v("的，但是不代表他一定要等到"),e("code",[t._v("timeout")]),t._v("才会被提交，以下情况都会提早提交：")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("有任务的"),e("code",[t._v("expirationTime")]),t._v("小于"),e("code",[t._v("timeout")]),t._v("的时长")])]),t._v(" "),e("li",[e("p",[t._v("在"),e("code",[t._v("timeout")]),t._v("期间同一子树产生了新的更新，连同"),e("code",[t._v("Suspense")]),t._v("组件一起更新了")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("Promise")]),t._v("状态改变，调度了新的更新")])])]),t._v(" "),e("p",[t._v("设置了"),e("code",[t._v("timeoutHandler")]),t._v("之后，在下一次开始更新之前会清除"),e("code",[t._v("handler")]),t._v("，如果新的更新改变了"),e("code",[t._v("isExpire")]),t._v("或者"),e("code",[t._v("nextLatestAbsoluteTimeoutMs")]),t._v("，那么会导致"),e("code",[t._v("timeoutHandler")]),t._v("变化，甚至不需要"),e("code",[t._v("timeout")])]),t._v(" "),e("h1",{attrs:{id:"retry"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#retry"}},[t._v("#")]),t._v(" retry")]),t._v(" "),e("p",[e("code",[t._v("retry")]),t._v("只是简单地发起一次新的调度，所以并不关心新的渲染是否还需要这个"),e("code",[t._v("promise")]),t._v("返回的数据。")]),t._v(" "),e("p",[t._v("在"),e("code",[t._v("retry")]),t._v("的时候，如果他处于"),e("code",[t._v("ConcurrentMode")]),t._v("，那么只需要重新设置节点的"),e("code",[t._v("expirationTime")]),t._v("为"),e("code",[t._v("retryTime")]),t._v("即可")]),t._v(" "),e("p",[e("strong",[t._v("这里注意，因为同步模式下"),e("code",[t._v("Suspense")]),t._v("组件直接渲染"),e("code",[t._v("null")]),t._v("，不会像异步模式下一样操作，所以同步模式下他已经没有更新了，所以需要创建新的更新")])]),t._v(" "),e("h1",{attrs:{id:"error"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#error"}},[t._v("#")]),t._v(" error")]),t._v(" "),e("p",[t._v("注意重新发起一次同步请求的条件是比较苛刻的，就是要符合"),e("code",[t._v("!root.didError")]),t._v("和"),e("code",[t._v("!isExpire")]),t._v("，也就是同步任务是不会进入这个分支的，只会直接提交。")])])}),[],!1,null,null,null);s.default=r.exports}}]);