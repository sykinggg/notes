(window.webpackJsonp=window.webpackJsonp||[]).push([[532],{923:function(t,e,a){"use strict";a.r(e);var s=a(1),v=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"深入源码剖析componentwillxxx为什么unsafe"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#深入源码剖析componentwillxxx为什么unsafe"}},[t._v("#")]),t._v(" 深入源码剖析componentWillXXX为什么UNSAFE")]),t._v(" "),a("p",[t._v("从"),a("code",[t._v("v16.3.0")]),t._v("开始如下三个生命周期钩子被标记为"),a("code",[t._v("UNSAFE")]),t._v("。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("componentWillMount")])]),t._v(" "),a("li",[a("p",[t._v("componentWillRecieveProps")])]),t._v(" "),a("li",[a("p",[t._v("componentWillUpdate")])])]),t._v(" "),a("p",[t._v("究其原因，有如下两点：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("这三个钩子经常被错误使用，并且现在出现了更好的替代方案（这里指新增的"),a("code",[t._v("getDerivedStateFromProps")]),t._v("与"),a("code",[t._v("getSnapshotBeforeUpdate")]),t._v("）。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("React")]),t._v("从"),a("code",[t._v("Legacy")]),t._v("模式迁移到"),a("code",[t._v("Concurrent")]),t._v("模式后，这些钩子的表现会和之前不一致。")])])]),t._v(" "),a("h2",{attrs:{id:"被误用的钩子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#被误用的钩子"}},[t._v("#")]),t._v(" 被误用的钩子")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("先来探讨第一点，这里以"),a("code",[t._v("componentWillRecieveProps")]),t._v("举例。")]),t._v(" "),a("p",[t._v("经常在"),a("code",[t._v("componentWillRecieveProps")]),t._v("内处理"),a("code",[t._v("props")]),t._v("改变带来的影响。有些同学认为这个钩子会在每次"),a("code",[t._v("props")]),t._v("变化后触发。")]),t._v(" "),a("p",[t._v("真的是这样么？让看看源码。")]),t._v(" "),a("p",[t._v("这段代码出自"),a("code",[t._v("updateClassInstance")]),t._v("方法：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  unresolvedOldProps "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" unresolvedNewProps "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("\n  oldContext "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" nextContext\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("callComponentWillReceiveProps")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    workInProgress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    instance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    newProps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    nextContext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("你可以从"),a("a",{attrs:{href:"https://github.com/facebook/react/blob/master/packages/react-reconciler/src/ReactFiberClassComponent.new.js#L1034",target:"_blank",rel:"noopener noreferrer"}},[t._v("这里"),a("OutboundLink")],1),t._v("看到这段源码")])]),t._v(" "),a("p",[t._v("其中"),a("code",[t._v("callComponentWillReceiveProps")]),t._v("方法会调用"),a("code",[t._v("componentWillRecieveProps")]),t._v("。")]),t._v(" "),a("p",[t._v("可以看到，是否调用的关键是比较"),a("code",[t._v("unresolvedOldProps")]),t._v("与 "),a("code",[t._v("unresolvedNewProps")]),t._v("是否全等，以及"),a("code",[t._v("context")]),t._v("是否变化。")]),t._v(" "),a("p",[t._v("其中"),a("code",[t._v("unresolvedOldProps")]),t._v("为组件上次更新时的"),a("code",[t._v("props")]),t._v("，而"),a("code",[t._v("unresolvedNewProps")]),t._v("则来自"),a("code",[t._v("ClassComponent")]),t._v("调用"),a("code",[t._v("this.render")]),t._v("返回的"),a("code",[t._v("JSX")]),t._v("中的"),a("code",[t._v("props")]),t._v("参数。")]),t._v(" "),a("p",[t._v("可见他们的"),a("code",[t._v("引用")]),t._v("是不同的。所以他们"),a("code",[t._v("全等比较")]),t._v("为"),a("code",[t._v("false")]),t._v("。")]),t._v(" "),a("p",[t._v("基于此原因，"),a("strong",[t._v("每次父组件更新都会触发当前组件的"),a("code",[t._v("componentWillRecieveProps")]),t._v("。")])]),t._v(" "),a("p",[t._v("想想你是否也曾误用过？")]),t._v(" "),a("h2",{attrs:{id:"模式迁移"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模式迁移"}},[t._v("#")]),t._v(" 模式迁移")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("让再看第二个原因：")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("React")]),t._v("从"),a("code",[t._v("Legacy")]),t._v("模式迁移到"),a("code",[t._v("Concurrent")]),t._v("模式后，这些钩子的表现会和之前不一致。")])]),t._v(" "),a("p",[t._v("先了解下什么是模式？不同模式有什么区别？")]),t._v(" "),a("h3",{attrs:{id:"从legacy到concurrent"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#从legacy到concurrent"}},[t._v("#")]),t._v(" 从Legacy到Concurrent")]),t._v(" "),a("p",[t._v("从"),a("code",[t._v("React15")]),t._v("升级为"),a("code",[t._v("React16")]),t._v("后，源码改动如此之大，说"),a("code",[t._v("React")]),t._v("被重构可能更贴切些。")]),t._v(" "),a("p",[t._v("正是由于变动如此之大，使得一些特性在新旧版本"),a("code",[t._v("React")]),t._v("中表现不一致，这里就包括上文谈到的三个生命周期钩子。")]),t._v(" "),a("p",[t._v("为了让开发者能平稳从旧版本迁移到新版本，"),a("code",[t._v("React")]),t._v("推出了三个模式：")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("legacy模式")]),t._v(" -- 通过"),a("code",[t._v("ReactDOM.render")]),t._v("创建的应用会开启该模式。这是当前"),a("code",[t._v("React")]),t._v("使用的方式。这个模式可能不支持一些新功能。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("blocking模式")]),t._v(" -- 通过"),a("code",[t._v("ReactDOM.createBlockingRoot")]),t._v("创建的应用会开启该模式。开启部分"),a("code",[t._v("concurrent")]),t._v("模式特性，作为迁移到"),a("code",[t._v("concurrent")]),t._v("模式的第一步。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("concurrent模式")]),t._v(" -- 通过"),a("code",[t._v("ReactDOM.createRoot")]),t._v("创建的应用会开启该模式。面向未来的开发模式。")])])]),t._v(" "),a("blockquote",[a("p",[t._v("你可以从"),a("a",{attrs:{href:"https://zh-hans.reactjs.org/docs/concurrent-mode-adoption.html#why-so-many-modes",target:"_blank",rel:"noopener noreferrer"}},[t._v("这里"),a("OutboundLink")],1),t._v("看到不同模式的特性支持情况")])]),t._v(" "),a("p",[a("code",[t._v("concurrent模式")]),t._v("相较当前使用的"),a("code",[t._v("legacy模式")]),t._v("最主要的区别是"),a("strong",[t._v("将同步的更新机制重构为异步可中断的更新。")])]),t._v(" "),a("p",[t._v("接下来来探讨"),a("code",[t._v("React")]),t._v("如何实现"),a("code",[t._v("异步更新")]),t._v("，以及为什么"),a("code",[t._v("异步更新")]),t._v("情况下钩子的表现和"),a("code",[t._v("同步更新")]),t._v("不同。")]),t._v(" "),a("h2",{attrs:{id:"同步更新"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#同步更新"}},[t._v("#")]),t._v(" 同步更新")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("可以用"),a("code",[t._v("代码版本控制")]),t._v("类比"),a("code",[t._v("更新机制")]),t._v("。")]),t._v(" "),a("p",[t._v("在没有"),a("code",[t._v("代码版本控制")]),t._v("前，在代码中逐步叠加功能。一切看起来井然有序，直到遇到了一个紧急线上bug（红色节点）。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/notes/assets/react/1733205a461f6f92.png",alt:"demo"}})]),t._v(" "),a("p",[t._v("为了修复这个bug，需要首先将之前的代码提交。")]),t._v(" "),a("p",[t._v("在"),a("code",[t._v("Reac")]),t._v("t中，所有通过"),a("code",[t._v("ReactDOM.render")]),t._v("创建的应用都是通过类似的方式更新状态。")]),t._v(" "),a("p",[t._v("即所有"),a("code",[t._v("更新")]),t._v("同步执行，没有"),a("code",[t._v("优先级")]),t._v("概念，新来的"),a("code",[t._v("高优更新")]),t._v("（红色节点）也需要排在其他"),a("code",[t._v("更新")]),t._v("后面执行。")]),t._v(" "),a("h1",{attrs:{id:"异步更新"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#异步更新"}},[t._v("#")]),t._v(" 异步更新")]),t._v(" "),a("p",[t._v("当有了"),a("code",[t._v("代码版本控制")]),t._v("，有紧急线上bug需要修复时，暂存当前分支的修改，在"),a("code",[t._v("master分支")]),t._v("修复bug并紧急上线。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/notes/assets/react/173320743bcd3794.png",alt:"demo"}})]),t._v(" "),a("p",[t._v("bug修复上线后通过"),a("code",[t._v("git rebase")]),t._v("命令和"),a("code",[t._v("开发分支")]),t._v("连接上。"),a("code",[t._v("开发分支")]),t._v("基于修复bug的版本继续开发。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/notes/assets/react/1733207d00f2307e.png",alt:"demo"}})]),t._v(" "),a("p",[t._v("在"),a("code",[t._v("React")]),t._v("中，通过"),a("code",[t._v("ReactDOM.createBlockingRoot")]),t._v("和"),a("code",[t._v("ReactDOM.createRoot")]),t._v("创建的应用在任务未过期情况下会采用异步的方式更新状态。")]),t._v(" "),a("p",[a("code",[t._v("高优更新")]),t._v("（红色节点）中断正在进行中的"),a("code",[t._v("低优更新")]),t._v("（蓝色节点），先完成渲染流程。")]),t._v(" "),a("p",[t._v("待"),a("code",[t._v("高优更新")]),t._v("完成后，"),a("code",[t._v("低优更新")]),t._v("基于"),a("code",[t._v("高优更新")]),t._v("的"),a("code",[t._v("部分")]),t._v("或者"),a("code",[t._v("完整")]),t._v("结果重新更新。")]),t._v(" "),a("h2",{attrs:{id:"深入源码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#深入源码"}},[t._v("#")]),t._v(" 深入源码")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("在"),a("code",[t._v("React")]),t._v("源码中，每次发起"),a("code",[t._v("更新")]),t._v("都会创建一个"),a("code",[t._v("Update")]),t._v("对象，同一组件的多个"),a("code",[t._v("Update")]),t._v("（如上图所示的A -> B -> C）会以"),a("code",[t._v("链表")]),t._v("的形式保存在"),a("code",[t._v("updateQueue")]),t._v("中。")]),t._v(" "),a("p",[t._v("首先了解下他们的"),a("code",[t._v("数据结构")]),t._v("。")]),t._v(" "),a("p",[a("code",[t._v("Update")]),t._v("有很多字段，当前关注如下三个字段：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" update"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Update"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...省略当前不需要关注的字段")]),t._v("\n    lane"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    payload"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    next"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("blockquote",[a("p",[a("code",[t._v("Update")]),t._v("由"),a("code",[t._v("createUpdate")]),t._v("方法返回，你可以从"),a("a",{attrs:{href:"https://github.com/facebook/react/blob/master/packages/react-reconciler/src/ReactUpdateQueue.old.js#L189",target:"_blank",rel:"noopener noreferrer"}},[t._v("这里"),a("OutboundLink")],1),t._v("看到"),a("code",[t._v("createUpdate")]),t._v("的源码")])]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("lane")]),t._v("：代表优先级。即图中"),a("code",[t._v("红色")]),t._v("节点与"),a("code",[t._v("蓝色")]),t._v("节点的区别。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("payload")]),t._v("：更新挂载的数据。对于"),a("code",[t._v("this.setState")]),t._v("创建的"),a("code",[t._v("更新")]),t._v("，"),a("code",[t._v("payload")]),t._v("为"),a("code",[t._v("this.setState")]),t._v("的传参。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("next")]),t._v("：与其他"),a("code",[t._v("Update")]),t._v("连接形成链表。")])])]),t._v(" "),a("p",[a("code",[t._v("updateQueue")]),t._v("结构如下：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" queue"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" UpdateQueue"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("State"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    baseState"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" fiber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("memoizedState"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    firstBaseUpdate"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    lastBaseUpdate"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    shared"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      pending"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 其他参数省略...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("blockquote",[a("p",[a("code",[t._v("UpdateQueue")]),t._v("由"),a("code",[t._v("initializeUpdateQueue")]),t._v("方法返回，你可以从"),a("a",{attrs:{href:"https://github.com/facebook/react/blob/master/packages/react-reconciler/src/ReactUpdateQueue.new.js#L157",target:"_blank",rel:"noopener noreferrer"}},[t._v("这里"),a("OutboundLink")],1),t._v("看到"),a("code",[t._v("initializeUpdateQueue")]),t._v("的源码")])]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("baseState")]),t._v("："),a("code",[t._v("更新")]),t._v("基于哪个"),a("code",[t._v("state")]),t._v("开始。上图中"),a("code",[t._v("版本控制")]),t._v("的例子中，高优bug修复后提交"),a("code",[t._v("master")]),t._v("，其他"),a("code",[t._v("commit")]),t._v("基于"),a("code",[t._v("master")]),t._v("分支继续开发。这里的"),a("code",[t._v("master")]),t._v("分支就是"),a("code",[t._v("baseState")]),t._v("。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("firstBaseUpdate")]),t._v("与"),a("code",[t._v("lastBaseUpdate")]),t._v("："),a("code",[t._v("更新")]),t._v("基于哪个"),a("code",[t._v("Update")]),t._v("开始，由"),a("code",[t._v("firstBaseUpdate")]),t._v("开始到"),a("code",[t._v("lastBaseUpdate")]),t._v("结束形成链表。这些"),a("code",[t._v("Update")]),t._v("是在上次"),a("code",[t._v("更新")]),t._v("中由于"),a("code",[t._v("优先级")]),t._v("不够被留下的，如图中"),a("code",[t._v("A B C")]),t._v("。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("shared.pending")]),t._v("：本次更新的单或多个"),a("code",[t._v("Update")]),t._v("形成的链表。")])])]),t._v(" "),a("p",[t._v("其中"),a("code",[t._v("baseUpdate")]),t._v(" + "),a("code",[t._v("shared.pending")]),t._v("会作为本次更新需要执行的"),a("code",[t._v("Update")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"例子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#例子"}},[t._v("#")]),t._v(" 例子")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("了解了"),a("code",[t._v("数据结构")]),t._v("，接下来模拟一次"),a("code",[t._v("异步中断更新")]),t._v("，来揭示本文探寻的秘密 —— "),a("code",[t._v("componentWillXXX")]),t._v("为什么"),a("code",[t._v("UNSAFE")]),t._v("。")]),t._v(" "),a("p",[t._v("在某个组件"),a("code",[t._v("updateQueue")]),t._v("中存在四个"),a("code",[t._v("Update")]),t._v("，其中"),a("code",[t._v("字母")]),t._v("代表该"),a("code",[t._v("Update")]),t._v("要更新的字母，"),a("code",[t._v("数字")]),t._v("代表该"),a("code",[t._v("Update")]),t._v("的优先级，数字越小"),a("code",[t._v("优先级")]),t._v("越高。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("baseState "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("B2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("C1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("D2")]),t._v("\n")])])]),a("p",[t._v("首次渲染时，"),a("code",[t._v("优先级")]),t._v("1。"),a("code",[t._v("B D")]),t._v("优先级不够被跳过。")]),t._v(" "),a("p",[t._v("为了保证"),a("code",[t._v("更新")]),t._v("的连贯性，第一个被跳过的"),a("code",[t._v("Update")]),t._v("（"),a("code",[t._v("B")]),t._v("）及其后面所有"),a("code",[t._v("Update")]),t._v("会作为第二次渲染的"),a("code",[t._v("baseUpdate")]),t._v("，无论他们的"),a("code",[t._v("优先级")]),t._v("高低，这里为"),a("code",[t._v("B C D")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("baseState"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v("\nUpdates"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("C1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nResult state"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'AC'")]),t._v("\n")])])]),a("p",[t._v("接着第二次渲染，"),a("code",[t._v("优先级")]),t._v("2。")]),t._v(" "),a("p",[t._v("由于"),a("code",[t._v("B")]),t._v("在第一次渲染时被跳过，所以在他之后的"),a("code",[t._v("C")]),t._v("造成的渲染结果不会体现在第二次渲染的"),a("code",[t._v("baseState")]),t._v("中。所以"),a("code",[t._v("baseState")]),t._v("为"),a("code",[t._v("A")]),t._v("而不是上次渲染的"),a("code",[t._v("Result state AC")]),t._v("。这也是为了保证"),a("code",[t._v("更新")]),t._v("的连贯性。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("baseState"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'A'")]),t._v("          \nUpdates"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("B2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("C1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("D2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  \nResult state"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ABCD'")]),t._v("\n")])])]),a("p",[t._v("发现，"),a("code",[t._v("C")]),t._v("同时出现在两次渲染的"),a("code",[t._v("Updates")]),t._v("中，他代表的"),a("code",[t._v("状态")]),t._v("会被更新两次。")]),t._v(" "),a("p",[t._v("如果有类似的代码：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("componentWillReceiveProps")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("nextProps")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("props"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("includes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'C'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" nextProps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("includes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'C'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...do something")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("则很有可能被调用两次，这与"),a("code",[t._v("同步更新")]),t._v("的"),a("code",[t._v("React")]),t._v("表现不一致！")]),t._v(" "),a("p",[t._v("基于以上原因，"),a("code",[t._v("componentWillXXX")]),t._v("被标记为"),a("code",[t._v("UNSAFE")]),t._v("。")])])}),[],!1,null,null,null);e.default=v.exports}}]);