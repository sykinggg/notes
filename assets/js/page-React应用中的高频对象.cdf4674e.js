(window.webpackJsonp=window.webpackJsonp||[]).push([[238],{922:function(t,e,a){"use strict";a.r(e);var s=a(1),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"react-应用中的高频对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react-应用中的高频对象"}},[t._v("#")]),t._v(" React 应用中的高频对象")]),t._v(" "),a("p",[t._v("在 React 应用中, 有很多特定的对象或数据结构. 了解这些内部的设计, 可以更容易理解 react 运行原理. 本章主要列举从 react 启动到渲染过程出现频率较高, 影响范围较大的对象, 它们贯穿整个 react 运行时.")]),t._v(" "),a("p",[t._v("其他过程的重要对象:")]),t._v(" "),a("ul",[a("li",[t._v("如"),a("code",[t._v("事件对象")]),t._v("(位于"),a("code",[t._v("react-dom/events")]),t._v("保障 react 应用能够响应 ui 交互), 在事件机制章节中详细解读.")]),t._v(" "),a("li",[t._v("如"),a("code",[t._v("ReactContext, ReactProvider, ReactConsumer")]),t._v("对象, 在 context 机制章节中详细解读.")])]),t._v(" "),a("h2",{attrs:{id:"react-包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react-包"}},[t._v("#")]),t._v(" react 包")]),t._v(" "),a("p",[t._v("在"),a("RouterLink",{attrs:{to:"/react-illustration-series/main/macro-structure.html"}},[t._v("React 应用的宏观包结构")]),t._v("中介绍过, 此包定义 react 组件("),a("code",[t._v("ReactElement")]),t._v(")的必要函数, 提供一些操作"),a("code",[t._v("ReactElement")]),t._v("对象的 api.")],1),t._v(" "),a("p",[t._v("所以这个包的核心需要理解"),a("code",[t._v("ReactElement")]),t._v("对象, 假设有如下入口函数:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 入口函数")]),t._v("\nReactDOM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("App "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'root'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("可以简单的认为, 包括"),a("code",[t._v("<App/>")]),t._v("及其所有子节点都是"),a("code",[t._v("ReactElement")]),t._v("对象(在 render 之后才会生成子节点, 后文详细解读), 每个"),a("code",[t._v("ReactElement")]),t._v("对象的区别在于 type 不同.")]),t._v(" "),a("h3",{attrs:{id:"reactelement-对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reactelement-对象"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://github.com/facebook/react/blob/v17.0.2/packages/react/src/ReactElement.js#L126-L146",target:"_blank",rel:"noopener noreferrer"}},[t._v("ReactElement 对象"),a("OutboundLink")],1)]),t._v(" "),a("blockquote",[a("p",[t._v("其 type 定义在"),a("a",{attrs:{href:"https://github.com/facebook/react/blob/v17.0.2/packages/shared/ReactElementType.js#L15",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("shared")]),t._v("包中"),a("OutboundLink")],1),t._v(".")])]),t._v(" "),a("p",[t._v("所有采用"),a("code",[t._v("jsx")]),t._v("语法书写的节点, 都会被编译器转换, 最终会以"),a("code",[t._v("React.createElement(...)")]),t._v("的方式, 创建出来一个与之对应的"),a("code",[t._v("ReactElement")]),t._v("对象.")]),t._v(" "),a("p",[a("code",[t._v("ReactElement")]),t._v("对象的数据结构如下:")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ReactElement")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用于辨别ReactElement对象")]),t._v("\n  $$"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 内部属性")]),t._v("\n  type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 表明其种类")]),t._v("\n  key"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  ref"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  props"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ReactFiber 记录创建本对象的Fiber节点, 还未与Fiber树关联之前, 该属性为null")]),t._v("\n  _owner"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// __DEV__ dev环境下的一些额外信息, 如文件路径, 文件名, 行列信息等")]),t._v("\n  _store"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("validated"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  _self"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" React$Element"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  _shadowChildren"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  _source"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),a("p",[t._v("需要特别注意 2 个属性:")]),t._v(" "),a("ol",[a("li",[a("p",[a("code",[t._v("key")]),t._v("属性在"),a("code",[t._v("reconciler")]),t._v("阶段会用到, 目前只需要知道所有的"),a("code",[t._v("ReactElement")]),t._v("对象都有 key 属性(且"),a("a",{attrs:{href:"https://github.com/facebook/react/blob/v17.0.2/packages/react/src/ReactElement.js#L348-L357",target:"_blank",rel:"noopener noreferrer"}},[t._v("其默认值是 null"),a("OutboundLink")],1),t._v(", 这点十分重要, 在 diff 算法中会使用到).")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("type")]),t._v("属性决定了节点的种类:")])])]),t._v(" "),a("ul",[a("li",[t._v("它的值可以是字符串(代表"),a("code",[t._v("div,span")]),t._v("等 dom 节点), 函数(代表"),a("code",[t._v("fuction, class")]),t._v("等节点), 或者 react 内部定义的节点类型("),a("code",[t._v("portal,context,fragment")]),t._v("等)")]),t._v(" "),a("li",[t._v("在"),a("code",[t._v("reconciler")]),t._v("阶段, 会根据 type 执行不同的逻辑(在 fiber 构建阶段详细解读).\n"),a("ul",[a("li",[t._v("如 type 是一个字符串类型, 则直接使用.")]),t._v(" "),a("li",[t._v("如 type 是一个"),a("code",[t._v("ReactComponent")]),t._v("类型, 则会调用其 render 方法获取子节点.")]),t._v(" "),a("li",[t._v("如 type 是一个"),a("code",[t._v("function")]),t._v("类型,则会调用该方法获取子节点")]),t._v(" "),a("li",[t._v("...")])])])]),t._v(" "),a("p",[t._v("在"),a("code",[t._v("v17.0.2")]),t._v("中, "),a("a",{attrs:{href:"https://github.com/facebook/react/blob/v17.0.2/packages/shared/ReactSymbols.js#L16-L37",target:"_blank",rel:"noopener noreferrer"}},[t._v("定义了 20 种"),a("OutboundLink")],1),t._v("内部节点类型. 根据运行时环境不同, 分别采用 16 进制的字面量和"),a("code",[t._v("Symbol")]),t._v("进行表示.")]),t._v(" "),a("h3",{attrs:{id:"reactcomponent对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reactcomponent对象"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://github.com/facebook/react/blob/v17.0.2/packages/react/src/ReactBaseClasses.js#L20-L30",target:"_blank",rel:"noopener noreferrer"}},[t._v("ReactComponent"),a("OutboundLink")],1),t._v("对象")]),t._v(" "),a("p",[t._v("对于"),a("code",[t._v("ReactElement")]),t._v("来讲, "),a("code",[t._v("ReactComponent")]),t._v("仅仅是诸多"),a("code",[t._v("type")]),t._v("类型中的一种.")]),t._v(" "),a("p",[t._v("对于开发者来讲, "),a("code",[t._v("ReactComponent")]),t._v("使用非常高频(在状态组件章节中详细解读), 在本节只是先证明它只是一种特殊的"),a("code",[t._v("ReactElement")]),t._v(".")]),t._v(" "),a("p",[t._v("这里用一个简单的示例, 通过查看编译后的代码来说明")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("App")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Component")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div className"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"app"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("header"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("header"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("header"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Content "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("footer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("footer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("footer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Content")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Component")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("React"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Fragment"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("p"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("p"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("p"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("p"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("p"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("p"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("React"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Fragment"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" App"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("编译之后的代码(此处只编译了 jsx 语法, 并没有将 class 语法编译成 es5 中的 fuction), 可以更直观的看出调用逻辑.")]),t._v(" "),a("p",[a("code",[t._v("createElement")]),t._v("函数的第一个参数将作为创建"),a("code",[t._v("ReactElement")]),t._v("的"),a("code",[t._v("type")]),t._v(". 可以看到"),a("code",[t._v("Content")]),t._v("这个变量被编译器命名为"),a("code",[t._v("App_Content")]),t._v(", 并作为第一个参数(引用传递), 传入了"),a("code",[t._v("createElement")]),t._v(".")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("App_App")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("react_default"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Component")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*#__PURE__*/")]),t._v(" react_default"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'div'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        className"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'app'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*#__PURE__*/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      react_default"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'header'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'header'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*#__PURE__*/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 此处直接将Content传入, 是一个指针传递")]),t._v("\n      react_default"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("App_Content"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*#__PURE__*/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      react_default"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'footer'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'footer'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("App_Content")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("react_default"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Component")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*#__PURE__*/")]),t._v(" react_default"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      react_default"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Fragment"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*#__PURE__*/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      react_default"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'p'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*#__PURE__*/")]),t._v("\n\n      react_default"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'p'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*#__PURE__*/")]),t._v("\n\n      react_default"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'p'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("上述示例演示了"),a("code",[t._v("ReactComponent")]),t._v("是诸多"),a("code",[t._v("ReactElement")]),t._v("种类中的一种情况, 但是由于"),a("code",[t._v("ReactComponent")]),t._v("是 class 类型, 自有它的特殊性(可"),a("a",{attrs:{href:"https://github.com/facebook/react/blob/v17.0.2/packages/react/src/ReactBaseClasses.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("对照源码"),a("OutboundLink")],1),t._v(", 更容易理解).")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("ReactComponent")]),t._v("是 class 类型, 继承父类"),a("code",[t._v("Component")]),t._v(", 拥有特殊的方法("),a("code",[t._v("setState")]),t._v(","),a("code",[t._v("forceUpdate")]),t._v(")和特殊的属性("),a("code",[t._v("context")]),t._v(","),a("code",[t._v("updater")]),t._v("等).")]),t._v(" "),a("li",[t._v("在"),a("code",[t._v("reconciler")]),t._v("阶段, 会依据"),a("code",[t._v("ReactElement")]),t._v("对象的特征, 生成对应的 fiber 节点. 当识别到"),a("code",[t._v("ReactElement")]),t._v("对象是 class 类型的时候, 会触发"),a("code",[t._v("ReactComponent")]),t._v("对象的生命周期, 并调用其 "),a("code",[t._v("render")]),t._v("方法, 生成"),a("code",[t._v("ReactElement")]),t._v("子节点.")])]),t._v(" "),a("h3",{attrs:{id:"其他reactelement"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他reactelement"}},[t._v("#")]),t._v(" 其他"),a("code",[t._v("ReactElement")])]),t._v(" "),a("p",[t._v("上文介绍了第一种特殊的"),a("code",[t._v("ReactElement")]),t._v("("),a("code",[t._v("class")]),t._v("类型的组件), 除此之外"),a("code",[t._v("function")]),t._v("类型的组件也需要深入了解, 因为"),a("code",[t._v("Hook")]),t._v("只能在"),a("code",[t._v("function")]),t._v("类型的组件中使用.")]),t._v(" "),a("p",[t._v("如果在"),a("code",[t._v("function")]),t._v("类型的组件中没有使用"),a("code",[t._v("Hook")]),t._v("(如: "),a("code",[t._v("useState")]),t._v(", "),a("code",[t._v("useEffect")]),t._v("等), 在"),a("code",[t._v("reconciler")]),t._v("阶段所有有关"),a("code",[t._v("Hook")]),t._v("的处理都会略过, 最后调用该"),a("code",[t._v("function")]),t._v("拿到子节点"),a("code",[t._v("ReactElement")]),t._v(".")]),t._v(" "),a("p",[t._v("如果使用了"),a("code",[t._v("Hook")]),t._v(", 逻辑就相对复杂, 涉及到"),a("code",[t._v("Hook")]),t._v("创建和状态保存(有关 Hook 的原理部分, 在 Hook 原理章节中详细解读). 此处只需要了解"),a("code",[t._v("function")]),t._v("类型的组件和"),a("code",[t._v("class")]),t._v("类型的组件一样, 是诸多"),a("code",[t._v("ReactElement")]),t._v("形式中的一种.")]),t._v(" "),a("h3",{attrs:{id:"reactelement内存结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reactelement内存结构"}},[t._v("#")]),t._v(" "),a("code",[t._v("ReactElement")]),t._v("内存结构")]),t._v(" "),a("p",[t._v("通过前文对"),a("code",[t._v("ReactElement")]),t._v("的介绍, 可以比较容易的画出"),a("code",[t._v("<App/>")]),t._v("这个"),a("code",[t._v("ReactElement")]),t._v("对象在内存中的结构("),a("code",[t._v("reconciler")]),t._v("阶段完成之后才会形成完整的结构).")]),t._v(" "),a("p",[a("img",{attrs:{src:"/notes/assets/react-illustration-series/reactelement-tree.png",alt:""}})]),t._v(" "),a("p",[t._v("注意:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("class")]),t._v("和"),a("code",[t._v("function")]),t._v("类型的组件,其子节点是在 render 之后("),a("code",[t._v("reconciler")]),t._v("阶段)才生成的. 此处只是单独表示"),a("code",[t._v("ReactElement")]),t._v("的数据结构.")]),t._v(" "),a("li",[t._v("父级对象和子级对象之间是通过"),a("code",[t._v("props.children")]),t._v("属性进行关联的(与 fiber 树不同).")]),t._v(" "),a("li",[a("code",[t._v("ReactElement")]),t._v("虽然不能算是一个严格的树, 也不能算是一个严格的链表. 它的生成过程是至顶向下的, 是所有组件节点的总和.")]),t._v(" "),a("li",[a("code",[t._v("ReactElement")]),t._v("树(暂且用树来表述)和"),a("code",[t._v("fiber")]),t._v("树是以"),a("code",[t._v("props.children")]),t._v("为单位"),a("code",[t._v("先后交替")]),t._v("生成的(在 fiber 树构建章节详细解读), 当"),a("code",[t._v("ReactElement")]),t._v("树构造完毕, fiber 树也随后构造完毕.")]),t._v(" "),a("li",[a("code",[t._v("reconciler")]),t._v("阶段会根据"),a("code",[t._v("ReactElement")]),t._v("的类型生成对应的"),a("code",[t._v("fiber")]),t._v("节点(不是一一对应, 比如"),a("code",[t._v("Fragment")]),t._v("类型的组件在生成"),a("code",[t._v("fiber")]),t._v("节点的时候会略过).")])]),t._v(" "),a("h2",{attrs:{id:"react-reconciler-包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react-reconciler-包"}},[t._v("#")]),t._v(" "),a("code",[t._v("react-reconciler")]),t._v(" 包")]),t._v(" "),a("p",[t._v("在"),a("RouterLink",{attrs:{to:"/react-illustration-series/main/macro-structure.html"}},[t._v("宏观结构")]),t._v("中介绍过, "),a("code",[t._v("react-reconciler")]),t._v("包是"),a("code",[t._v("react")]),t._v("应用的中枢, 连接渲染器("),a("code",[t._v("react-dom")]),t._v(")和调度中心("),a("code",[t._v("scheduler")]),t._v("), 同时自身也负责 fiber 树的构造.")],1),t._v(" "),a("p",[t._v("对于此包的深入分析, 放在"),a("code",[t._v("fiber 树构建")]),t._v(", "),a("code",[t._v("reconciler 工作空间")]),t._v("等章节中.")]),t._v(" "),a("p",[t._v("此处先要知道"),a("code",[t._v("fiber")]),t._v("是核心, react 体系的渲染和更新都要以 fiber 作为数据模型, 如果不能理解 fiber, 也无法深入理解 react.")]),t._v(" "),a("p",[t._v("本章先预览一下此包中与"),a("code",[t._v("fiber")]),t._v("对象关联度较高的对象.")]),t._v(" "),a("h3",{attrs:{id:"fiber-对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fiber-对象"}},[t._v("#")]),t._v(" Fiber 对象")]),t._v(" "),a("p",[t._v("先看数据结构, 其 type 类型的定义在"),a("a",{attrs:{href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactInternalTypes.js#L47-L174",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("ReactInternalTypes.js")]),a("OutboundLink")],1),t._v("中:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 一个Fiber对象代表一个即将渲染或者已经渲染的组件(ReactElement), 一个组件可能对应两个fiber(current和WorkInProgress)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 单个属性的解释在后文(在注释中无法添加超链接)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" type Fiber "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n  tag"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" WorkTag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  key"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  elementType"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  stateNode"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  child"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  sibling"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  index"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  ref"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("handle"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" mixed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" _stringRef"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" RefObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  pendingProps"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 从`ReactElement`对象传入的 props. 用于和`fiber.memoizedProps`比较可以得出属性是否变动")]),t._v("\n  memoizedProps"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 上一次生成子节点时用到的属性, 生成子节点之后保持在内存中")]),t._v("\n  updateQueue"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" mixed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 存储state更新的队列, 当前节点的state改动之后, 都会创建一个update对象添加到这个队列中.")]),t._v("\n  memoizedState"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用于输出的state, 最终渲染所使用的state")]),t._v("\n  dependencies"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Dependencies "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 该fiber节点所依赖的(contexts, events)等")]),t._v("\n  mode"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" TypeOfMode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 二进制位Bitfield,继承至父节点,影响本fiber节点及其子树中所有节点. 与react应用的运行模式有关(有ConcurrentMode, BlockingMode, NoMode等选项).")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Effect 副作用相关")]),t._v("\n  flags"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Flags"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 标志位")]),t._v("\n  subtreeFlags"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Flags"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//替代16.x版本中的 firstEffect, nextEffect. 当设置了 enableNewReconciler=true才会启用")]),t._v("\n  deletions"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Array"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Fiber"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 存储将要被删除的子节点. 当设置了 enableNewReconciler=true才会启用")]),t._v("\n\n  nextEffect"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 单向链表, 指向下一个有副作用的fiber节点")]),t._v("\n  firstEffect"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指向副作用链表中的第一个fiber节点")]),t._v("\n  lastEffect"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指向副作用链表中的最后一个fiber节点")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 优先级相关")]),t._v("\n  lanes"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Lanes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 本fiber节点的优先级")]),t._v("\n  childLanes"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Lanes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 子节点的优先级")]),t._v("\n  alternate"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指向内存中的另一个fiber, 每个被更新过fiber节点在内存中都是成对出现(current和workInProgress)")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 性能统计相关(开启enableProfilerTimer后才会统计)")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// react-dev-tool会根据这些时间统计来评估性能")]),t._v("\n  actualDuration"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 本次更新过程, 本节点以及子树所消耗的总时间")]),t._v("\n  actualStartTime"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 标记本fiber节点开始构建的时间")]),t._v("\n  selfBaseDuration"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用于最近一次生成本fiber节点所消耗的实现")]),t._v("\n  treeBaseDuration"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 生成子树所消耗的时间的总和")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("属性解释:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("fiber.tag")]),t._v(": 表示 fiber 类型, 根据"),a("code",[t._v("ReactElement")]),t._v("组件的 type 进行生成, 在 react 内部共定义了"),a("a",{attrs:{href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactWorkTags.js#L10-L35",target:"_blank",rel:"noopener noreferrer"}},[t._v("25 种 tag"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("fiber.key")]),t._v(": 和"),a("code",[t._v("ReactElement")]),t._v("组件的 key 一致.")]),t._v(" "),a("li",[a("code",[t._v("fiber.elementType")]),t._v(": 一般来讲和"),a("code",[t._v("ReactElement")]),t._v("组件的 type 一致")]),t._v(" "),a("li",[a("code",[t._v("fiber.type")]),t._v(": 一般来讲和"),a("code",[t._v("fiber.elementType")]),t._v("一致. 一些特殊情形下, 比如在开发环境下为了兼容热更新("),a("code",[t._v("HotReloading")]),t._v("), 会对"),a("code",[t._v("function, class, ForwardRef")]),t._v("类型的"),a("code",[t._v("ReactElement")]),t._v("做一定的处理, 这种情况会区别于"),a("code",[t._v("fiber.elementType")]),t._v(", 具体赋值关系可以查看"),a("a",{attrs:{href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiber.old.js#L571-L574",target:"_blank",rel:"noopener noreferrer"}},[t._v("源文件"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("fiber.stateNode")]),t._v(": 与"),a("code",[t._v("fiber")]),t._v("关联的局部状态节点(比如: "),a("code",[t._v("HostComponent")]),t._v("类型指向与"),a("code",[t._v("fiber")]),t._v("节点对应的 dom 节点; 根节点"),a("code",[t._v("fiber.stateNode")]),t._v("指向的是"),a("code",[t._v("FiberRoot")]),t._v("; class 类型节点其"),a("code",[t._v("stateNode")]),t._v("指向的是 class 实例).")]),t._v(" "),a("li",[a("code",[t._v("fiber.return")]),t._v(": 指向父节点.")]),t._v(" "),a("li",[a("code",[t._v("fiber.child")]),t._v(": 指向第一个子节点.")]),t._v(" "),a("li",[a("code",[t._v("fiber.sibling")]),t._v(": 指向下一个兄弟节点.")]),t._v(" "),a("li",[a("code",[t._v("fiber.index")]),t._v(": fiber 在兄弟节点中的索引, 如果是单节点默认为 0.")]),t._v(" "),a("li",[a("code",[t._v("fiber.ref")]),t._v(": 指向在"),a("code",[t._v("ReactElement")]),t._v("组件上设置的 ref("),a("code",[t._v("string")]),t._v("类型的"),a("code",[t._v("ref")]),t._v("除外, 这种类型的"),a("code",[t._v("ref")]),t._v("已经不推荐使用, "),a("code",[t._v("reconciler")]),t._v("阶段会"),a("code",[t._v("将string")]),t._v("类型的"),a("code",[t._v("ref")]),t._v("转换成一个"),a("code",[t._v("function")]),t._v("类型).")]),t._v(" "),a("li",[a("code",[t._v("fiber.pendingProps")]),t._v(": 输入属性, 从"),a("code",[t._v("ReactElement")]),t._v("对象传入的 props. 用于和"),a("code",[t._v("fiber.memoizedProps")]),t._v("比较可以得出属性是否变动.")]),t._v(" "),a("li",[a("code",[t._v("fiber.memoizedProps")]),t._v(": 上一次生成子节点时用到的属性, 生成子节点之后保持在内存中. 向下生成子节点之前叫做"),a("code",[t._v("pendingProps")]),t._v(", 生成子节点之后会把"),a("code",[t._v("pendingProps")]),t._v("赋值给"),a("code",[t._v("memoizedProps")]),t._v("用于下一次比较."),a("code",[t._v("pendingProps")]),t._v("和"),a("code",[t._v("memoizedProps")]),t._v("比较可以得出属性是否变动.")]),t._v(" "),a("li",[a("code",[t._v("fiber.updateQueue")]),t._v(": 存储"),a("code",[t._v("update更新对象")]),t._v("的队列, 每一次发起更新, 都需要在该队列上创建一个"),a("code",[t._v("update对象")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("fiber.memoizedState")]),t._v(": 上一次生成子节点之后保持在内存中的局部状态.")]),t._v(" "),a("li",[a("code",[t._v("fiber.dependencies")]),t._v(": 该 fiber 节点所依赖的(contexts, events)等, 在"),a("code",[t._v("context")]),t._v("机制章节详细说明.")]),t._v(" "),a("li",[a("code",[t._v("fiber.mode")]),t._v(": 二进制位 Bitfield,继承至父节点,影响本 fiber 节点及其子树中所有节点. 与 react 应用的运行模式有关(有 ConcurrentMode, BlockingMode, NoMode 等选项).")]),t._v(" "),a("li",[a("code",[t._v("fiber.flags")]),t._v(": 标志位, 副作用标记(在 16.x 版本中叫做"),a("code",[t._v("effectTag")]),t._v(", 相应"),a("a",{attrs:{href:"https://github.com/facebook/react/pull/19755",target:"_blank",rel:"noopener noreferrer"}},[t._v("pr"),a("OutboundLink")],1),t._v("), 在"),a("a",{attrs:{href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberFlags.js#L10-L41",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("ReactFiberFlags.js")]),a("OutboundLink")],1),t._v("中定义了所有的标志位. "),a("code",[t._v("reconciler")]),t._v("阶段会将所有拥有"),a("code",[t._v("flags")]),t._v("标记的节点添加到副作用链表中, 等待 commit 阶段的处理.")]),t._v(" "),a("li",[a("code",[t._v("fiber.subtreeFlags")]),t._v(": 替代 16.x 版本中的 firstEffect, nextEffect. 默认未开启, 当设置了"),a("a",{attrs:{href:"https://github.com/facebook/react/blob/v17.0.2/packages/shared/ReactFeatureFlags.js#L93",target:"_blank",rel:"noopener noreferrer"}},[t._v("enableNewReconciler=true"),a("OutboundLink")],1),t._v(" 才会启用, 本系列只跟踪稳定版的代码, 未来版本不会深入解读, "),a("a",{attrs:{href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberCompleteWork.new.js#L690-L714",target:"_blank",rel:"noopener noreferrer"}},[t._v("使用示例见源码"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("fiber.deletions")]),t._v(": 存储将要被删除的子节点. 默认未开启, 当设置了"),a("a",{attrs:{href:"https://github.com/facebook/react/blob/v17.0.2/packages/shared/ReactFeatureFlags.js#L93",target:"_blank",rel:"noopener noreferrer"}},[t._v("enableNewReconciler=true"),a("OutboundLink")],1),t._v(" 才会启用, 本系列只跟踪稳定版的代码, 未来版本不会深入解读, "),a("a",{attrs:{href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactChildFiber.new.js#L275-L287",target:"_blank",rel:"noopener noreferrer"}},[t._v("使用示例见源码"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("fiber.nextEffect")]),t._v(": 单向链表, 指向下一个有副作用的 fiber 节点.")]),t._v(" "),a("li",[a("code",[t._v("fiber.firstEffect")]),t._v(": 指向副作用链表中的第一个 fiber 节点.")]),t._v(" "),a("li",[a("code",[t._v("fiber.lastEffect")]),t._v(": 指向副作用链表中的最后一个 fiber 节点.")]),t._v(" "),a("li",[a("code",[t._v("fiber.lanes")]),t._v(": 本 fiber 节点所属的优先级, 创建 fiber 的时候设置.")]),t._v(" "),a("li",[a("code",[t._v("fiber.childLanes")]),t._v(": 子节点所属的优先级.")]),t._v(" "),a("li",[a("code",[t._v("fiber.alternate")]),t._v(": 指向内存中的另一个 fiber, 每个被更新过 fiber 节点在内存中都是成对出现(current 和 workInProgress)")])]),t._v(" "),a("p",[t._v("通过以上 25 个属性的解释, 对"),a("code",[t._v("fiber")]),t._v("对象有一个初步的认识.")]),t._v(" "),a("p",[t._v("最后绘制一颗 fiber 树与上文中的"),a("code",[t._v("ReactElement")]),t._v("树对照起来:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[a("code",[t._v("ReactElement")]),t._v("树")]),t._v(" "),a("th",[a("code",[t._v("fiber")]),t._v("树")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("img",{attrs:{src:"/notes/assets/react-illustration-series/reactelement-tree.png",alt:"reactelement"}})]),t._v(" "),a("td",[a("img",{attrs:{src:"/notes/assets/react-illustration-series/fiber-tree.png",alt:"fiber"}})])])])]),t._v(" "),a("p",[t._v("注意:")]),t._v(" "),a("ul",[a("li",[t._v("这里的"),a("code",[t._v("fiber")]),t._v("树只是为了和上文中的"),a("code",[t._v("ReactElement")]),t._v("树对照, 所以只用观察红色虚线框内的节点. 根节点"),a("code",[t._v("HostRootFiber")]),t._v("在"),a("RouterLink",{attrs:{to:"/react-illustration-series/main/bootstrap.html"}},[t._v("react 应用的启动模式章节中")]),t._v("详细解读.")],1),t._v(" "),a("li",[t._v("其中"),a("code",[t._v("<App/>")]),t._v(","),a("code",[t._v("<Content/>")]),t._v("为"),a("code",[t._v("ClassComponent")]),t._v("类型的"),a("code",[t._v("fiber")]),t._v("节点, 其余节点都是普通"),a("code",[t._v("HostComponent")]),t._v("类型节点.")]),t._v(" "),a("li",[a("code",[t._v("<Content/>")]),t._v("的子节点在"),a("code",[t._v("ReactElement")]),t._v("树中是"),a("code",[t._v("React.Fragment")]),t._v(", 但是在"),a("code",[t._v("fiber")]),t._v("树中"),a("code",[t._v("React.Fragment")]),t._v("并没有与之对应的"),a("code",[t._v("fiber")]),t._v("节点("),a("code",[t._v("reconciler")]),t._v("阶段对此类型节点做了单独处理, 所以"),a("code",[t._v("ReactElement")]),t._v("节点和"),a("code",[t._v("fiber")]),t._v("节点不是一对一匹配).")])]),t._v(" "),a("h3",{attrs:{id:"update-与-updatequeue-对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#update-与-updatequeue-对象"}},[t._v("#")]),t._v(" Update 与 UpdateQueue 对象")]),t._v(" "),a("p",[t._v("在"),a("code",[t._v("fiber")]),t._v("对象中有一个属性"),a("code",[t._v("fiber.updateQueue")]),t._v(", 是一个链式队列(即使用链表实现的队列存储结构), 后文会根据场景表述成链表或队列.")]),t._v(" "),a("p",[t._v("首先观察"),a("code",[t._v("Update")]),t._v("对象的数据结构("),a("a",{attrs:{href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactUpdateQueue.old.js#L106-L129",target:"_blank",rel:"noopener noreferrer"}},[t._v("对照源码"),a("OutboundLink")],1),t._v("):")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" type Update"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("State"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n  eventTime"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 发起update事件的时间(17.0.2中作为临时字段, 即将移出)")]),t._v("\n  lane"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Lane"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// update所属的优先级")]),t._v("\n\n  tag"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n  payload"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 载荷, 根据场景可以设置成一个回调函数或者对象")]),t._v("\n  callback"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" mixed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 回调函数")]),t._v("\n\n  next"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Update"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("State"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指向链表中的下一个, 由于UpdateQueue是一个环形链表, 最后一个update.next指向第一个update对象")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// =============== UpdateQueue ==============")]),t._v("\ntype SharedQueue"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("State"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n  pending"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Update"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("State"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" type UpdateQueue"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("State"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n  baseState"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" State"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  firstBaseUpdate"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Update"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("State"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  lastBaseUpdate"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Update"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("State"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  shared"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" SharedQueue"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("State"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  effects"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Array"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Update"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("State"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("属性解释:")]),t._v(" "),a("ol",[a("li",[a("p",[a("code",[t._v("UpdateQueue")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("baseState")]),t._v(": 表示此队列的基础 state")]),t._v(" "),a("li",[a("code",[t._v("firstBaseUpdate")]),t._v(": 指向基础队列的队首")]),t._v(" "),a("li",[a("code",[t._v("lastBaseUpdate")]),t._v(": 指向基础队列的队尾")]),t._v(" "),a("li",[a("code",[t._v("shared")]),t._v(": 共享队列")]),t._v(" "),a("li",[a("code",[t._v("effects")]),t._v(": 用于保存有"),a("code",[t._v("callback")]),t._v("回调函数的 update 对象, 在"),a("code",[t._v("commit")]),t._v("之后, 会依次调用这里的回调函数.")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("SharedQueue")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("pending")]),t._v(": 指向即将输入的"),a("code",[t._v("update")]),t._v("队列. 在"),a("code",[t._v("class")]),t._v("组件中调用"),a("code",[t._v("setState()")]),t._v("之后, 会将新的 update 对象添加到这个队列中来.")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Update")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("eventTime")]),t._v(": 发起"),a("code",[t._v("update")]),t._v("事件的时间(17.0.2 中作为临时字段, 即将移出)")]),t._v(" "),a("li",[a("code",[t._v("lane")]),t._v(": "),a("code",[t._v("update")]),t._v("所属的优先级")]),t._v(" "),a("li",[a("code",[t._v("tag")]),t._v(": 表示"),a("code",[t._v("update")]),t._v("种类, 共 4 种. "),a("a",{attrs:{href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactUpdateQueue.old.js#L131-L134",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("UpdateState,ReplaceState,ForceUpdate,CaptureUpdate")]),a("OutboundLink")],1)]),t._v(" "),a("li",[a("code",[t._v("payload")]),t._v(": 载荷, "),a("code",[t._v("update")]),t._v("对象真正需要更新的数据, 可以设置成一个回调函数或者对象.")]),t._v(" "),a("li",[a("code",[t._v("callback")]),t._v(": 回调函数. "),a("code",[t._v("commit")]),t._v("完成之后会调用.")]),t._v(" "),a("li",[a("code",[t._v("next")]),t._v(": 指向链表中的下一个, 由于"),a("code",[t._v("UpdateQueue")]),t._v("是一个环形链表, 最后一个"),a("code",[t._v("update.next")]),t._v("指向第一个"),a("code",[t._v("update")]),t._v("对象.")])])])]),t._v(" "),a("p",[a("code",[t._v("updateQueue")]),t._v("是"),a("code",[t._v("fiber")]),t._v("对象的一个属性, 所以不能脱离"),a("code",[t._v("fiber")]),t._v("存在. 它们之间数据结构和引用关系如下:")]),t._v(" "),a("p",[a("img",{attrs:{src:"/notes/assets/react-illustration-series/updatequeue.png",alt:""}})]),t._v(" "),a("p",[t._v("注意:")]),t._v(" "),a("ul",[a("li",[t._v("此处只是展示数据结构和引用关系.对于"),a("code",[t._v("updateQueue")]),t._v("在更新阶段的实际作用和运行逻辑, 会在状态组件(class 与 function)章节中详细解读.")])]),t._v(" "),a("h3",{attrs:{id:"hook-对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hook-对象"}},[t._v("#")]),t._v(" Hook 对象")]),t._v(" "),a("p",[a("code",[t._v("Hook")]),t._v("用于"),a("code",[t._v("function")]),t._v("组件中, 能够保持"),a("code",[t._v("function")]),t._v("组件的状态(与"),a("code",[t._v("class")]),t._v("组件中的"),a("code",[t._v("state")]),t._v("在性质上是相同的, 都是为了保持组件的状态).在"),a("code",[t._v("react@16.8")]),t._v("以后, 官方开始推荐使用"),a("code",[t._v("Hook")]),t._v("语法, 常用的 api 有"),a("code",[t._v("useState")]),t._v(","),a("code",[t._v("useEffect")]),t._v(","),a("code",[t._v("useCallback")]),t._v("等, 官方一共定义了"),a("a",{attrs:{href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberHooks.old.js#L111-L125",target:"_blank",rel:"noopener noreferrer"}},[t._v("14 种"),a("code",[t._v("Hook")]),t._v("类型"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("p",[t._v("这些 api 背后都会创建一个"),a("code",[t._v("Hook")]),t._v("对象, 先观察"),a("a",{attrs:{href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberHooks.old.js#L134-L140",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("Hook")]),t._v("对象的数据结构"),a("OutboundLink")],1),t._v(":")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" type Hook "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n  memoizedState"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  baseState"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  baseQueue"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Update"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("any"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" any"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  queue"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" UpdateQueue"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("any"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" any"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  next"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Hook "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ntype Update"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("S")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n  lane"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Lane"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  action"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  eagerReducer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("S")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("S")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  eagerState"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("S")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  next"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Update"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("S")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  priority"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ReactPriorityLevel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ntype UpdateQueue"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("S")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n  pending"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Update"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("S")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  dispatch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" mixed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  lastRenderedReducer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("S")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("S")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  lastRenderedState"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("S")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("属性解释:")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("Hook")])])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("memoizedState")]),t._v(": 内存状态, 用于输出成最终的"),a("code",[t._v("fiber")]),t._v("树")]),t._v(" "),a("li",[a("code",[t._v("baseState")]),t._v(": 基础状态, 当"),a("code",[t._v("Hook.queue")]),t._v("更新过后, "),a("code",[t._v("baseState")]),t._v("也会更新.")]),t._v(" "),a("li",[a("code",[t._v("baseQueue")]),t._v(": 基础状态队列, 在"),a("code",[t._v("reconciler")]),t._v("阶段会辅助状态合并.")]),t._v(" "),a("li",[a("code",[t._v("queue")]),t._v(": 指向一个"),a("code",[t._v("Update")]),t._v("队列")]),t._v(" "),a("li",[a("code",[t._v("next")]),t._v(": 指向该"),a("code",[t._v("function")]),t._v("组件的下一个"),a("code",[t._v("Hook")]),t._v("对象, 使得多个"),a("code",[t._v("Hook")]),t._v("之间也构成了一个链表.")])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[a("code",[t._v("Hook.queue")]),t._v("和 "),a("code",[t._v("Hook.baseQueue")]),t._v("(即"),a("code",[t._v("UpdateQueue")]),t._v("和"),a("code",[t._v("Update")]),t._v("）是为了保证"),a("code",[t._v("Hook")]),t._v("对象能够顺利更新, 与上文"),a("code",[t._v("fiber.updateQueue")]),t._v("中的"),a("code",[t._v("UpdateQueue和Update")]),t._v("是不一样的(且它们在不同的文件), 其逻辑会在状态组件(class 与 function)章节中详细解读.")])]),t._v(" "),a("p",[a("code",[t._v("Hook")]),t._v("与"),a("code",[t._v("fiber")]),t._v("的关系:")]),t._v(" "),a("p",[t._v("在"),a("code",[t._v("fiber")]),t._v("对象中有一个属性"),a("code",[t._v("fiber.memoizedState")]),t._v("指向"),a("code",[t._v("fiber")]),t._v("节点的内存状态. 在"),a("code",[t._v("function")]),t._v("类型的组件中, "),a("code",[t._v("fiber.memoizedState")]),t._v("就指向"),a("code",[t._v("Hook")]),t._v("队列("),a("code",[t._v("Hook")]),t._v("队列保存了"),a("code",[t._v("function")]),t._v("类型的组件状态).")]),t._v(" "),a("p",[t._v("所以"),a("code",[t._v("Hook")]),t._v("也不能脱离"),a("code",[t._v("fiber")]),t._v("而存在, 它们之间的引用关系如下:")]),t._v(" "),a("p",[a("img",{attrs:{src:"/notes/assets/react-illustration-series/fiber-hook.png",alt:""}})]),t._v(" "),a("p",[t._v("注意:")]),t._v(" "),a("ul",[a("li",[t._v("此处只是展示数据结构和引用关系.对于"),a("code",[t._v("Hook")]),t._v("在运行时的实际作用和逻辑, 会在状态组件(class 与 function)章节中详细解读.")])]),t._v(" "),a("h2",{attrs:{id:"scheduler-包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scheduler-包"}},[t._v("#")]),t._v(" scheduler 包")]),t._v(" "),a("p",[t._v("如"),a("RouterLink",{attrs:{to:"/react-illustration-series/main/macro-structure.html"}},[t._v("宏观结构")]),t._v("中所介绍, "),a("code",[t._v("scheduler")]),t._v("包负责调度, 在内部维护一个任务队列("),a("a",{attrs:{href:"https://github.com/facebook/react/blob/v17.0.2/packages/scheduler/src/Scheduler.js#L63",target:"_blank",rel:"noopener noreferrer"}},[t._v("taskQueue"),a("OutboundLink")],1),t._v("). 这个队列是一个最小堆数组(详见"),a("RouterLink",{attrs:{to:"/react-illustration-series/algorithm/heapsort.html"}},[t._v("React 算法之堆排序")]),t._v("), 其中存储了 task 对象.")],1),t._v(" "),a("h3",{attrs:{id:"task-对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#task-对象"}},[t._v("#")]),t._v(" Task 对象")]),t._v(" "),a("p",[a("code",[t._v("scheduler")]),t._v("包中, 没有为 task 对象定义 type, 其"),a("a",{attrs:{href:"https://github.com/facebook/react/blob/v17.0.2/packages/scheduler/src/Scheduler.js#L316-L323",target:"_blank",rel:"noopener noreferrer"}},[t._v("定义是直接在 js 代码"),a("OutboundLink")],1),t._v("中:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" newTask "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" taskIdCounter"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  callback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  priorityLevel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  startTime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  expirationTime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  sortIndex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("属性解释:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("id")]),t._v(": 位移标识")]),t._v(" "),a("li",[a("code",[t._v("callback")]),t._v(": task 最核心的字段, 指向"),a("code",[t._v("react-reconciler")]),t._v("包所提供的回调函数.")]),t._v(" "),a("li",[a("code",[t._v("priorityLevel")]),t._v(": 优先级")]),t._v(" "),a("li",[a("code",[t._v("startTime")]),t._v(": 一个时间戳,代表 task 的开始时间(创建时间 + 延时时间).")]),t._v(" "),a("li",[a("code",[t._v("expirationTime")]),t._v(": 过期时间.")]),t._v(" "),a("li",[a("code",[t._v("sortIndex")]),t._v(": 控制 task 在队列中的次序, 值越小的越靠前.")])]),t._v(" "),a("p",[t._v("注意"),a("code",[t._v("task")]),t._v("中没有"),a("code",[t._v("next")]),t._v("属性, 它不是一个链表, 其顺序是通过堆排序来实现的(小顶堆数组, 始终保证数组中的第一个"),a("code",[t._v("task")]),t._v("对象优先级最高).")]),t._v(" "),a("p",[a("img",{attrs:{src:"/notes/assets/react-illustration-series/taskqueue.png",alt:""}})])])}),[],!1,null,null,null);e.default=n.exports}}]);