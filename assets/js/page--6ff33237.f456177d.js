(window.webpackJsonp=window.webpackJsonp||[]).push([[116],{945:function(t,a,s){"use strict";s.r(a);var e=s(1),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"描述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#描述"}},[t._v("#")]),t._v(" 描述")]),t._v(" "),s("p",[s("code",[t._v("React")]),t._v(" 是 React 库的入口。如果通过使用 "),s("code",[t._v("<script>")]),t._v(" 标签的方式来加载 React，则可以通过 "),s("code",[t._v("React")]),t._v(" 全局变量对象来获得 React 的顶层 API。当使用 ES6 与 npm 时，可以通过编写 "),s("code",[t._v("import React from 'react'")]),t._v(" 来引入它们。当使用 ES5 与 npm 时，则可以通过编写 "),s("code",[t._v("var React = require('react')")]),t._v(" 来引入它们。")]),t._v(" "),s("h1",{attrs:{id:"概览"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概览"}},[t._v("#")]),t._v(" 概览")]),t._v(" "),s("h2",{attrs:{id:"组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组件"}},[t._v("#")]),t._v(" 组件")]),t._v(" "),s("p",[t._v("使用 React 组件可以将 UI 拆分为独立且复用的代码片段，每部分都可独立维护。可以通过子类 "),s("code",[t._v("React.Component")]),t._v(" 或 "),s("code",[t._v("React.PureComponent")]),t._v(" 来定义 React 组件。")]),t._v(" "),s("ul",[s("li",[s("p",[s("a",{attrs:{href:""}},[t._v("React.Component")])])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:""}},[t._v("React.PureComponent")])])])]),t._v(" "),s("p",[t._v("如果不使用 ES6 的 class，则可以使用 create-react-class 模块来替代")]),t._v(" "),s("p",[t._v("React 组件也可以被定义为可被包装的函数：")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:""}},[t._v("React.memo")])])]),t._v(" "),s("h2",{attrs:{id:"创建-react-元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建-react-元素"}},[t._v("#")]),t._v(" 创建 React 元素")]),t._v(" "),s("p",[t._v("建议使用 JSX 来编写的 UI 组件。每个 JSX 元素都是调用 "),s("code",[t._v("React.createElement()")]),t._v(" 的语法糖。一般来说，如果使用了 JSX，就不再需要调用以下方法。")]),t._v(" "),s("ul",[s("li",[s("p",[s("a",{attrs:{href:""}},[t._v("createElement()")])])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:""}},[t._v("createFactory()")])])])]),t._v(" "),s("h2",{attrs:{id:"转换元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#转换元素"}},[t._v("#")]),t._v(" 转换元素")]),t._v(" "),s("p",[s("code",[t._v("React")]),t._v(" 提供了几个用于操作元素的 API：")]),t._v(" "),s("ul",[s("li",[s("p",[s("a",{attrs:{href:""}},[t._v("cloneElement()")])])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:""}},[t._v("isValidElement()")])])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:""}},[t._v("React.Children")])])])]),t._v(" "),s("h2",{attrs:{id:"fragments"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fragments"}},[t._v("#")]),t._v(" Fragments")]),t._v(" "),s("p",[s("code",[t._v("React")]),t._v(" 还提供了用于减少不必要嵌套的组件。")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:""}},[t._v("React.Fragment")])])]),t._v(" "),s("h2",{attrs:{id:"refs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#refs"}},[t._v("#")]),t._v(" Refs")]),t._v(" "),s("ul",[s("li",[s("p",[s("a",{attrs:{href:""}},[t._v("React.createRef")])])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:""}},[t._v("React.forwardRef")])])])]),t._v(" "),s("h2",{attrs:{id:"suspense"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#suspense"}},[t._v("#")]),t._v(" Suspense")]),t._v(" "),s("p",[s("code",[t._v("Suspense")]),t._v(" 使得组件可以“等待”某些操作结束后，再进行渲染。目前，"),s("code",[t._v("Suspense")]),t._v(" 仅支持的使用场景是：通过 "),s("code",[t._v("React.lazy")]),t._v(" 动态加载组件。")]),t._v(" "),s("ul",[s("li",[s("p",[s("a",{attrs:{href:""}},[t._v("React.lazy")])])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:""}},[t._v("React.Suspense")])])])]),t._v(" "),s("h2",{attrs:{id:"hook"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hook"}},[t._v("#")]),t._v(" Hook")]),t._v(" "),s("p",[t._v("Hook 是 React 16.8 的新增特性。它可以让在不编写 class 的情况下使用 "),s("code",[t._v("state")]),t._v(" 以及其他的 "),s("code",[t._v("React")]),t._v(" 特性。Hook 拥有专属文档章节和单独的 API 参考文档：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("基础 Hook")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("useState")])]),t._v(" "),s("li",[s("p",[t._v("useEffect")])]),t._v(" "),s("li",[s("p",[t._v("useContext")])])])]),t._v(" "),s("li",[s("p",[t._v("额外的 Hook")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("useReducer")])]),t._v(" "),s("li",[s("p",[t._v("useCallback")])]),t._v(" "),s("li",[s("p",[t._v("useMemo")])]),t._v(" "),s("li",[s("p",[t._v("useRef")])]),t._v(" "),s("li",[s("p",[t._v("useImperativeHandle")])]),t._v(" "),s("li",[s("p",[t._v("useLayoutEffect")])]),t._v(" "),s("li",[s("p",[t._v("useDebugValue")])])])])]),t._v(" "),s("h1",{attrs:{id:"参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),s("h2",{attrs:{id:"react-component"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-component"}},[t._v("#")]),t._v(" React.Component")]),t._v(" "),s("p",[s("code",[t._v("React.Component")]),t._v(" 是使用 ES6 classes 方式定义 React 组件的基类：")]),t._v(" "),s("div",{staticClass:"language-jsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Greeting")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Component")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("Hello, ")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"react-purecomponent"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-purecomponent"}},[t._v("#")]),t._v(" React.PureComponent")]),t._v(" "),s("p",[s("code",[t._v("React.PureComponent")]),t._v(" 与 "),s("code",[t._v("React.Component")]),t._v(" 很相似。两者的区别在于 "),s("code",[t._v("React.Component")]),t._v(" 并未实现 "),s("code",[t._v("shouldComponentUpdate()")]),t._v("，而 "),s("code",[t._v("React.PureComponent")]),t._v(" 中以浅层对比 prop 和 state 的方式来实现了该函数。")]),t._v(" "),s("p",[t._v("如果赋予 React 组件相同的 props 和 state，"),s("code",[t._v("render()")]),t._v(" 函数会渲染相同的内容，那么在某些情况下使用 "),s("code",[t._v("React.PureComponent")]),t._v(" 可提高性能。")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("注意")])]),t._v(" "),s("p",[s("code",[t._v("React.PureComponent")]),t._v(" 中的 "),s("code",[t._v("shouldComponentUpdate()")]),t._v(" 仅作对象的浅层比较。如果对象中包含复杂的数据结构，则有可能因为无法检查深层的差别，产生错误的比对结果。仅在的 props 和 state 较为简单时，才使用 "),s("code",[t._v("React.PureComponent")]),t._v("，或者在深层数据结构发生变化时调用 "),s("code",[t._v("forceUpdate()")]),t._v(" 来确保组件被正确地更新。也可以考虑使用 "),s("code",[t._v("immutable")]),t._v(" 对象加速嵌套数据的比较。")]),t._v(" "),s("p",[t._v("此外，"),s("code",[t._v("React.PureComponent")]),t._v(" 中的 "),s("code",[t._v("shouldComponentUpdate()")]),t._v(" 将跳过所有子组件树的 prop 更新。因此，请确保所有子组件也都是“纯”的组件。")])]),t._v(" "),s("h2",{attrs:{id:"react-memo"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-memo"}},[t._v("#")]),t._v(" React.memo")]),t._v(" "),s("div",{staticClass:"language-jsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" MyComponent "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" React"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("memo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("MyComponent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("props")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 使用 props 渲染 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("code",[t._v("React.memo")]),t._v(" 为高阶组件。")]),t._v(" "),s("p",[t._v("如果的组件在相同 props 的情况下渲染相同的结果，那么可以通过将其包装在 "),s("code",[t._v("React.memo")]),t._v(" 中调用，以此通过记忆组件渲染结果的方式来提高组件的性能表现。这意味着在这种情况下，React 将跳过渲染组件的操作并直接复用最近一次渲染的结果。")]),t._v(" "),s("p",[s("code",[t._v("React.memo")]),t._v(" 仅检查 props 变更。如果函数组件被 "),s("code",[t._v("React.memo")]),t._v(" 包裹，且其实现中拥有 "),s("code",[t._v("useState")]),t._v(" 或 "),s("code",[t._v("useContext")]),t._v(" 的 Hook，当 context 发生变化时，它仍会重新渲染。")]),t._v(" "),s("p",[t._v("默认情况下其只会对复杂对象做浅层对比，如果想要控制对比过程，那么请将自定义的比较函数通过第二个参数传入来实现。")]),t._v(" "),s("div",{staticClass:"language-jsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("MyComponent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("props")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 使用 props 渲染 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("areEqual")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("prevProps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nextProps")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n  如果把 nextProps 传入 render 方法的返回结果与\n  将 prevProps 传入 render 方法的返回结果一致则返回 true，\n  否则返回 false\n  */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" React"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("memo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MyComponent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" areEqual"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("此方法仅作为"),s("strong",[t._v("性能优化")]),t._v("的方式而存在。但请不要依赖它来“阻止”渲染，因为这会产生 bug。")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("注意")])]),t._v(" "),s("p",[t._v("与 class 组件中 "),s("code",[t._v("shouldComponentUpdate()")]),t._v(" 方法不同的是，如果 props 相等，"),s("code",[t._v("areEqual")]),t._v(" 会返回 "),s("code",[t._v("true")]),t._v("；如果 props 不相等，则返回 "),s("code",[t._v("false")]),t._v("。这与 "),s("code",[t._v("shouldComponentUpdate")]),t._v(" 方法的返回值相反。")])]),t._v(" "),s("h2",{attrs:{id:"createelement"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#createelement"}},[t._v("#")]),t._v(" createElement()")]),t._v(" "),s("div",{staticClass:"language-jsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[t._v("React"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("children"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("创建并返回指定类型的新 "),s("code",[t._v("React 元素")]),t._v("。其中的类型参数既可以是标签名字符串（如 "),s("code",[t._v("'div'")]),t._v(" 或 "),s("code",[t._v("'span'")]),t._v("），也可以是 "),s("code",[t._v("React 组件")]),t._v(" 类型 （class 组件或函数组件），或是 "),s("code",[t._v("React fragment")]),t._v(" 类型。")]),t._v(" "),s("p",[t._v("使用 "),s("code",[t._v("JSX")]),t._v(" 编写的代码将会被转换成使用 "),s("code",[t._v("React.createElement()")]),t._v(" 的形式。如果使用了 JSX 方式，那么一般来说就不需要直接调用 "),s("code",[t._v("React.createElement()")]),t._v("。请查阅不使用 JSX 章节获得更多信息。")]),t._v(" "),s("h2",{attrs:{id:"cloneelement"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cloneelement"}},[t._v("#")]),t._v(" cloneElement()")]),t._v(" "),s("div",{staticClass:"language-jsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[t._v("React"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cloneElement")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  element"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("children"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("以 "),s("code",[t._v("element")]),t._v(" 元素为样板克隆并返回新的 React 元素。返回元素的 props 是将新的 props 与原始元素的 props 浅层合并后的结果。新的子元素将取代现有的子元素，而来自原始元素的 "),s("code",[t._v("key")]),t._v(" 和 "),s("code",[t._v("ref")]),t._v(" 将被保留。")]),t._v(" "),s("p",[s("code",[t._v("React.cloneElement()")]),t._v(" 几乎等同于：")]),t._v(" "),s("div",{staticClass:"language-jsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("element.type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token spread"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("element"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token spread"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("children"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("element.type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("但是，这也保留了组件的 "),s("code",[t._v("ref")]),t._v("。这意味着当通过 "),s("code",[t._v("ref")]),t._v(" 获取子节点时，将不会意外地从祖先节点上窃取它。相同的 "),s("code",[t._v("ref")]),t._v(" 将添加到克隆后的新元素中。")]),t._v(" "),s("p",[t._v("引入此 API 是为了替换已弃用的 "),s("code",[t._v("React.addons.cloneWithProps()")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"createfactory"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#createfactory"}},[t._v("#")]),t._v(" createFactory()")]),t._v(" "),s("div",{staticClass:"language-jsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[t._v("React"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createFactory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("返回用于生成指定类型 React 元素的函数。与 "),s("code",[t._v("React.createElement()")]),t._v(" 相似的是，类型参数既可以是标签名字符串（像是 "),s("code",[t._v("'div'")]),t._v(" 或 "),s("code",[t._v("'span'")]),t._v("），也可以是 "),s("code",[t._v("React 组件")]),t._v(" 类型 （class 组件或函数组件），或是 "),s("code",[t._v("React fragment")]),t._v(" 类型。")]),t._v(" "),s("p",[t._v("此辅助函数已废弃，建议使用 JSX 或直接调用 "),s("code",[t._v("React.createElement()")]),t._v(" 来替代它。")]),t._v(" "),s("p",[t._v("如果使用 JSX，通常不会直接调用 "),s("code",[t._v("React.createFactory()")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"isvalidelement"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#isvalidelement"}},[t._v("#")]),t._v(" isValidElement()")]),t._v(" "),s("div",{staticClass:"language-jsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[t._v("React"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isValidElement")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("验证对象是否为 React 元素，返回值为 "),s("code",[t._v("true")]),t._v(" 或 "),s("code",[t._v("false")])]),t._v(" "),s("h2",{attrs:{id:"react-children"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-children"}},[t._v("#")]),t._v(" React.Children")]),t._v(" "),s("p",[s("code",[t._v("React.Children")]),t._v(" 提供了用于处理 "),s("code",[t._v("this.props.children")]),t._v(" 不透明数据结构的实用方法。")]),t._v(" "),s("p",[s("em",[s("strong",[t._v("React.Children.map")])])]),t._v(" "),s("div",{staticClass:"language-jsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[t._v("React"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Children"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("children"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("thisArg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("在 "),s("code",[t._v("children")]),t._v(" 里的每个直接子节点上调用一个函数，并将 "),s("code",[t._v("this")]),t._v(" 设置为 "),s("code",[t._v("thisArg")]),t._v("。如果 "),s("code",[t._v("children")]),t._v(" 是一个数组，它将被遍历并为数组中的每个子节点调用该函数。如果子节点为 "),s("code",[t._v("null")]),t._v(" 或是 "),s("code",[t._v("undefined")]),t._v("，则此方法将返回 "),s("code",[t._v("null")]),t._v(" 或是 "),s("code",[t._v("undefined")]),t._v("，而不会返回数组。")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("注意")])]),t._v(" "),s("p",[t._v("如果 "),s("code",[t._v("children")]),t._v(" 是一个 "),s("code",[t._v("Fragment")]),t._v(" 对象，它将被视为单一子节点的情况处理，而不会被遍历。")])]),t._v(" "),s("p",[s("em",[s("strong",[t._v("React.Children.forEach")])])]),t._v(" "),s("div",{staticClass:"language-jsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[t._v("React"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Children"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("children"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("thisArg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("与 "),s("code",[t._v("React.Children.map()")]),t._v(" 类似，但它不会返回一个数组。")]),t._v(" "),s("p",[s("em",[s("strong",[t._v("React.Children.count")])])]),t._v(" "),s("div",{staticClass:"language-jsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[t._v("React"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Children"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("children"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("返回 "),s("code",[t._v("children")]),t._v(" 中的组件总数量，等同于通过 "),s("code",[t._v("map")]),t._v(" 或 "),s("code",[t._v("forEach")]),t._v(" 调用回调函数的次数。")]),t._v(" "),s("p",[s("em",[s("strong",[t._v("React.Children.only")])])]),t._v(" "),s("div",{staticClass:"language-jsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[t._v("React"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Children"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("only")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("children"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("验证 "),s("code",[t._v("children")]),t._v(" 是否只有一个子节点（一个 React 元素），如果有则返回它，否则此方法会抛出错误。")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("注意")]),t._v("：")]),t._v(" "),s("p",[s("code",[t._v("React.Children.only()")]),t._v(" 不接受 "),s("code",[t._v("React.Children.map()")]),t._v(" 的返回值，因为它是一个数组而并不是 React 元素。")])]),t._v(" "),s("p",[s("em",[s("strong",[t._v("React.Children.toArray")])])]),t._v(" "),s("div",{staticClass:"language-jsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[t._v("React"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Children"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toArray")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("children"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("将 "),s("code",[t._v("children")]),t._v(" 这个复杂的数据结构以数组的方式扁平展开并返回，并为每个子节点分配一个 key。当想要在渲染函数中操作子节点的集合时，它会非常实用，特别是当想要在向下传递 "),s("code",[t._v("this.props.children")]),t._v(" 之前对内容重新排序或获取子集时。")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("注意")]),t._v("：")]),t._v(" "),s("p",[s("code",[t._v("React.Children.toArray()")]),t._v(" 在拉平展开子节点列表时，更改 key 值以保留嵌套数组的语义。也就是说，"),s("code",[t._v("toArray")]),t._v(" 会为返回数组中的每个 key 添加前缀，以使得每个元素 key 的范围都限定在此函数入参数组的对象内。")])]),t._v(" "),s("h2",{attrs:{id:"react-fragment"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-fragment"}},[t._v("#")]),t._v(" React.Fragment")]),t._v(" "),s("p",[s("code",[t._v("React.Fragment")]),t._v(" 组件能够在不额外创建 DOM 元素的情况下，让 "),s("code",[t._v("render()")]),t._v(" 方法中返回多个元素。")]),t._v(" "),s("div",{staticClass:"language-jsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React.Fragment")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n      Some text.\n      ")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("A heading")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n    ")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React.Fragment")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("也可以使用其简写语法 <></>")]),t._v(" "),s("h2",{attrs:{id:"react-createref"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-createref"}},[t._v("#")]),t._v(" React.createRef")]),t._v(" "),s("p",[s("code",[t._v("React.createRef")]),t._v(" 创建一个能够通过 ref 属性附加到 React 元素的 "),s("code",[t._v("ref")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-jsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyComponent")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Component")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("props")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("inputRef "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" React"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createRef")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("ref")]),s("span",{pre:!0,attrs:{class:"token script language-javascript"}},[s("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("inputRef"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("componentDidMount")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("inputRef"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("current"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("focus")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"react-forwardref"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-forwardref"}},[t._v("#")]),t._v(" React.forwardRef")]),t._v(" "),s("p",[s("code",[t._v("React.forwardRef")]),t._v(" 会创建一个React组件，这个组件能够将其接受的 "),s("code",[t._v("ref")]),t._v(" 属性转发到其组件树下的另一个组件中。这种技术并不常见，但在以下两种场景中特别有用：")]),t._v(" "),s("ul",[s("li",[s("p",[s("a",{attrs:{href:""}},[t._v("转发 refs 到 DOM 组件")])])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:""}},[t._v("在高阶组件中转发 refs")])])])]),t._v(" "),s("p",[s("code",[t._v("React.forwardRef")]),t._v(" 接受渲染函数作为参数。React 将使用 "),s("code",[t._v("props")]),t._v(" 和 "),s("code",[t._v("ref")]),t._v(" 作为参数来调用此函数。此函数应返回 React 节点。")]),t._v(" "),s("div",{staticClass:"language-jsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" FancyButton "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" React"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("forwardRef")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ref")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("button")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("ref")]),s("span",{pre:!0,attrs:{class:"token script language-javascript"}},[s("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("ref"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("className")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("FancyButton"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n    ")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("children"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n  ")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("button")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// You can now get a ref directly to the DOM button:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ref "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" React"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createRef")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FancyButton")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("ref")]),s("span",{pre:!0,attrs:{class:"token script language-javascript"}},[s("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("ref"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("Click me!")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FancyButton")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("在上述的示例中，React 会将 "),s("code",[t._v("<FancyButton ref={ref}>")]),t._v(" 元素的 "),s("code",[t._v("ref")]),t._v(" 作为第二个参数传递给 "),s("code",[t._v("React.forwardRef")]),t._v(" 函数中的渲染函数。该渲染函数会将 "),s("code",[t._v("ref")]),t._v(" 传递给 "),s("code",[t._v("<button ref={ref}>")]),t._v(" 元素。")]),t._v(" "),s("p",[t._v("因此，当 React 附加了 ref 属性之后，"),s("code",[t._v("ref.current")]),t._v(" 将直接指向 "),s("code",[t._v("<button>")]),t._v(" DOM 元素实例。")]),t._v(" "),s("h2",{attrs:{id:"react-lazy"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-lazy"}},[t._v("#")]),t._v(" React.lazy")]),t._v(" "),s("p",[s("code",[t._v("React.lazy()")]),t._v(" 允许定义一个动态加载的组件。这有助于缩减 bundle 的体积，并延迟加载在初次渲染时未用到的组件。")]),t._v(" "),s("div",{staticClass:"language-jsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这个组件是动态加载的")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" SomeComponent "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" React"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lazy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./SomeComponent'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("请注意，渲染 "),s("code",[t._v("lazy")]),t._v(" 组件依赖该组件渲染树上层的 "),s("code",[t._v("<React.Suspense>")]),t._v(" 组件。这是指定加载指示器（loading indicator）的方式。")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("注意")])]),t._v(" "),s("p",[t._v("使用 "),s("code",[t._v("React.lazy")]),t._v(" 的动态引入特性需要 JS 环境支持 "),s("code",[t._v("Promise")]),t._v("。在 IE11 及以下版本的浏览器中需要通过引入 polyfill 来使用该特性。")])]),t._v(" "),s("h2",{attrs:{id:"react-suspense"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-suspense"}},[t._v("#")]),t._v(" React.Suspense")]),t._v(" "),s("p",[s("code",[t._v("React.Suspense")]),t._v(" 可以指定加载指示器（loading indicator），以防其组件树中的某些子组件尚未具备渲染条件。目前，懒加载组件是 "),s("code",[t._v("<React.Suspense>")]),t._v(" 支持的"),s("strong",[t._v("唯一")]),t._v("用例：")]),t._v(" "),s("div",{staticClass:"language-jsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 该组件是动态加载的")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" OtherComponent "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" React"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lazy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./OtherComponent'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("MyComponent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 显示 <Spinner> 组件直至 OtherComponent 加载完成")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React.Suspense")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("fallback")]),s("span",{pre:!0,attrs:{class:"token script language-javascript"}},[s("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Spinner")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n      ")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n        ")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OtherComponent")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n      ")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n    ")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React.Suspense")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("请注意，"),s("code",[t._v("lazy")]),t._v(" 组件可以位于 "),s("code",[t._v("Suspense")]),t._v(" 组件树的深处——它不必包装树中的每一个延迟加载组件。最佳实践是将 "),s("code",[t._v("<Suspense>")]),t._v(" 置于想展示加载指示器（loading indicator）的位置，而 "),s("code",[t._v("lazy()")]),t._v(" 则可被放置于任何想要做代码分割的地方。")]),t._v(" "),s("p",[t._v("虽然目前尚未支持其它特性，但未来计划让 "),s("code",[t._v("Suspense")]),t._v(" 支持包括数据获取在内的更多场景。")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("注意")]),t._v(":")]),t._v(" "),s("p",[s("code",[t._v("React.lazy()")]),t._v(" 和 "),s("code",[t._v("<React.Suspense>")]),t._v(" 尚未在 "),s("code",[t._v("ReactDOMServer")]),t._v(" 中支持。")])])])}),[],!1,null,null,null);a.default=n.exports}}]);