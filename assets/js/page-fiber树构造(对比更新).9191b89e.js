(window.webpackJsonp=window.webpackJsonp||[]).push([[310],{915:function(t,s,a){"use strict";a.r(s);var n=a(1),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"fiber-树构造-对比更新"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fiber-树构造-对比更新"}},[t._v("#")]),t._v(" fiber 树构造(对比更新)")]),t._v(" "),a("p",[t._v("在前文"),a("RouterLink",{attrs:{to:"/react-illustration-series/main/fibertree-create.html"}},[t._v("fiber 树构造(初次创建)")]),t._v("一文的介绍中, 演示了"),a("code",[t._v("fiber树构造循环")]),t._v("中逐步构造"),a("code",[t._v("fiber树")]),t._v("的过程. 由于是初次创建, 所以在构造过程中, 所有节点都是新建, 并没有复用旧节点.")],1),t._v(" "),a("p",[t._v("本节讨论"),a("code",[t._v("对比更新")]),t._v("这种情况(在"),a("code",[t._v("Legacy")]),t._v("模式下进行分析). 在阅读本节之前, 最好对"),a("RouterLink",{attrs:{to:"/react-illustration-series/main/fibertree-create.html"}},[t._v("fiber 树构造(初次创建)")]),t._v("有一些了解, 其中有很多相似逻辑不再重复叙述, 本节重点突出"),a("code",[t._v("对比更新")]),t._v("与"),a("code",[t._v("初次创建")]),t._v("的不同之处.")],1),t._v(" "),a("p",[t._v("本节示例代码如下("),a("a",{attrs:{href:"https://codesandbox.io/s/angry-williams-l1mze?file=/src/App.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("codesandbox 地址"),a("OutboundLink")],1),t._v("):")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" React "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("App")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Component")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  state "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    list"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'A'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'B'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'C'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onChange")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" list"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'C'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'A'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'X'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("componentDidMount")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("App Mount")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Header "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("button onClick"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("onChange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("change"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("button"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div className"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"content"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("item")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("p key"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("p"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Header")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PureComponent")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("h1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("title"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("h1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("h2"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("title2"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("h2"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" App"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("在"),a("code",[t._v("初次渲染")]),t._v("完成之后, 与"),a("code",[t._v("fiber树")]),t._v("相关的内存结构如下(后文以此图为基础, 演示"),a("code",[t._v("对比更新")]),t._v("过程):")]),t._v(" "),a("p",[a("img",{attrs:{src:"/notes/assets/react-illustration-series/beforeupdate.png",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"更新入口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#更新入口"}},[t._v("#")]),t._v(" 更新入口")]),t._v(" "),a("p",[t._v("前文"),a("RouterLink",{attrs:{to:"/react-illustration-series/main/reconciler-workflow.html#输入"}},[t._v("reconciler 运作流程")]),t._v("中总结的 4 个阶段(从输入到输出), 其中承接输入的函数只有"),a("code",[t._v("scheduleUpdateOnFiber")]),t._v("("),a("a",{attrs:{href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberWorkLoop.old.js#L517-L619",target:"_blank",rel:"noopener noreferrer"}},[t._v("源码地址"),a("OutboundLink")],1),t._v(").在"),a("code",[t._v("react-reconciler")]),t._v("对外暴露的 api 函数中, 只要涉及到需要改变 fiber 的操作(无论是"),a("code",[t._v("首次渲染")]),t._v("或"),a("code",[t._v("对比更新")]),t._v("), 最后都会间接调用"),a("code",[t._v("scheduleUpdateOnFiber")]),t._v(", "),a("code",[t._v("scheduleUpdateOnFiber")]),t._v("函数是输入链路中的"),a("code",[t._v("必经之路")]),t._v(".")],1),t._v(" "),a("h3",{attrs:{id:"_3-种更新方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-种更新方式"}},[t._v("#")]),t._v(" 3 种更新方式")]),t._v(" "),a("p",[t._v("如要主动发起更新, 有 3 种常见方式:")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("Class")]),t._v("组件中调用"),a("code",[t._v("setState")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("Function")]),t._v("组件中调用"),a("code",[t._v("hook")]),t._v("对象暴露出的"),a("code",[t._v("dispatchAction")]),t._v(".")]),t._v(" "),a("li",[t._v("在"),a("code",[t._v("container")]),t._v("节点上重复调用"),a("code",[t._v("render")]),t._v("("),a("a",{attrs:{href:"https://reactjs.org/docs/rendering-elements.html#react-only-updates-whats-necessary",target:"_blank",rel:"noopener noreferrer"}},[t._v("官网示例"),a("OutboundLink")],1),t._v(")")])]),t._v(" "),a("p",[t._v("下面列出这 3 种更新方式的源码:")]),t._v(" "),a("h4",{attrs:{id:"setstate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#setstate"}},[t._v("#")]),t._v(" setState")]),t._v(" "),a("p",[t._v("在"),a("code",[t._v("Component")]),t._v("对象的原型上挂载有"),a("code",[t._v("setState")]),t._v("("),a("a",{attrs:{href:"https://github.com/facebook/react/blob/v17.0.2/packages/react/src/ReactBaseClasses.js#L57-L66",target:"_blank",rel:"noopener noreferrer"}},[t._v("源码链接"),a("OutboundLink")],1),t._v("):")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Component")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("setState")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("partialState"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("updater"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("enqueueSetState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" partialState"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'setState'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("在"),a("RouterLink",{attrs:{to:"/react-illustration-series/main/fibertree-create.html"}},[t._v("fiber 树构造(初次创建)")]),t._v("中的"),a("code",[t._v("beginWork")]),t._v("阶段, class 类型的组件初始化完成之后, "),a("code",[t._v("this.updater")]),t._v("对象如下("),a("a",{attrs:{href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberClassComponent.old.js#L193-L225",target:"_blank",rel:"noopener noreferrer"}},[t._v("源码链接"),a("OutboundLink")],1),t._v("):")],1),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" classComponentUpdater "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  isMounted"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("enqueueSetState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("inst"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" payload"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 获取class实例对应的fiber节点")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fiber "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("inst"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 创建update对象")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" eventTime "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("requestEventTime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" lane "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("requestUpdateLane")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fiber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 确定当前update对象的优先级")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" update "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createUpdate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("eventTime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lane"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    update"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("payload "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" payload"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("callback "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" callback "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      update"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("callback "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" callback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3. 将update对象添加到当前Fiber节点的updateQueue队列当中")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("enqueueUpdate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fiber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" update"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4. 进入reconcier运作流程中的`输入`环节")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("scheduleUpdateOnFiber")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fiber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lane"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" eventTime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 传入的lane是update优先级")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"dispatchaction"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dispatchaction"}},[t._v("#")]),t._v(" dispatchAction")]),t._v(" "),a("blockquote",[a("p",[t._v("此处只是为了对比"),a("code",[t._v("dispatchAction")]),t._v("和"),a("code",[t._v("setState")]),t._v(". 有关"),a("code",[t._v("hook")]),t._v("原理的深入分析, 在"),a("code",[t._v("hook 原理")]),t._v("章节中详细讨论.")])]),t._v(" "),a("p",[t._v("在"),a("code",[t._v("function类型")]),t._v("组件中, 如果使用"),a("code",[t._v("hook(useState)")]),t._v(", 则可以通过"),a("code",[t._v("hook api")]),t._v("暴露出的"),a("code",[t._v("dispatchAction")]),t._v("("),a("a",{attrs:{href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberHooks.old.js#L1645-L1753",target:"_blank",rel:"noopener noreferrer"}},[t._v("源码链接"),a("OutboundLink")],1),t._v(")来更新")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" dispatchAction"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("S")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  fiber"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  queue"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" UpdateQueue"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("S")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  action"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 创建update对象")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" eventTime "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("requestEventTime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" lane "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("requestUpdateLane")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fiber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 确定当前update对象的优先级")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" update"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Update"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("S")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    lane"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    action"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    eagerReducer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    eagerState"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    next"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 将update对象添加到当前Hook对象的updateQueue队列当中")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" pending "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" queue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pending"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pending "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    update"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" update"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    update"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pending"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    pending"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" update"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  queue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pending "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" update"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3. 请求调度, 进入reconcier运作流程中的`输入`环节.")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("scheduleUpdateOnFiber")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fiber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lane"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" eventTime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 传入的lane是update优先级")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"重复调用-render"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重复调用-render"}},[t._v("#")]),t._v(" 重复调用 render")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" ReactDOM "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react-dom'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tick")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" element "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("h1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("Hello"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" world"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("h1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("h2"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("It is "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toLocaleTimeString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("h2"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  ReactDOM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("element"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'root'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setInterval")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tick"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("对于重复"),a("code",[t._v("render")]),t._v(", 在"),a("RouterLink",{attrs:{to:"/react-illustration-series/main/bootstrap.html"}},[t._v("React 应用的启动过程")]),t._v("中已有说明, 调用路径包含"),a("code",[t._v("updateContainer--\x3escheduleUpdateOnFiber")])],1),t._v(" "),a("blockquote",[a("p",[t._v("故无论从哪个入口进行更新, 最终都会进入"),a("code",[t._v("scheduleUpdateOnFiber")]),t._v(", 再次证明"),a("code",[t._v("scheduleUpdateOnFiber")]),t._v("是"),a("code",[t._v("输入")]),t._v("阶段的必经函数(参考"),a("RouterLink",{attrs:{to:"/react-illustration-series/main/reconciler-workflow.html"}},[t._v("reconciler 运作流程")]),t._v(").")],1)]),t._v(" "),a("h2",{attrs:{id:"构造阶段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构造阶段"}},[t._v("#")]),t._v(" 构造阶段")]),t._v(" "),a("p",[t._v("逻辑来到"),a("a",{attrs:{href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberWorkLoop.old.js#L517-L619",target:"_blank",rel:"noopener noreferrer"}},[t._v("scheduleUpdateOnFiber"),a("OutboundLink")],1),t._v("函数:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...省略部分代码")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("scheduleUpdateOnFiber")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  fiber"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// fiber表示被更新的节点")]),t._v("\n  lane"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Lane"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// lane表示update优先级")]),t._v("\n  eventTime"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" root "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("markUpdateLaneFromFiberToRoot")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fiber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lane"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lane "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" SyncLane"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("executionContext "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" LegacyUnbatchedContext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" NoContext "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("executionContext "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("RenderContext "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" CommitContext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" NoContext\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初次渲染")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("performSyncWorkOnRoot")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("root"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对比更新")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ensureRootIsScheduled")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("root"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" eventTime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  mostRecentlyUpdatedRoot "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" root"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("code",[t._v("对比更新")]),t._v("与"),a("code",[t._v("初次渲染")]),t._v("的不同点:")]),t._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberWorkLoop.old.js#L625-L667",target:"_blank",rel:"noopener noreferrer"}},[t._v("markUpdateLaneFromFiberToRoot"),a("OutboundLink")],1),t._v("函数, 只在"),a("code",[t._v("对比更新")]),t._v("阶段才发挥出它的作用, 它找出了"),a("code",[t._v("fiber树")]),t._v("中受到本次"),a("code",[t._v("update")]),t._v("影响的所有节点, 并设置这些节点的"),a("code",[t._v("fiber.lanes")]),t._v("或"),a("code",[t._v("fiber.childLanes")]),t._v("(在"),a("code",[t._v("legacy")]),t._v("模式下为"),a("code",[t._v("SyncLane")]),t._v(")以备"),a("code",[t._v("fiber树构造")]),t._v("阶段使用.")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("markUpdateLaneFromFiberToRoot")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  sourceFiber"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// sourceFiber表示被更新的节点")]),t._v("\n  lane"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Lane"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// lane表示update优先级")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" FiberRoot "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 将update优先级设置到sourceFiber.lanes")]),t._v("\n  sourceFiber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lanes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mergeLanes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sourceFiber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lanes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lane"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" alternate "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sourceFiber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("alternate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("alternate "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 同时设置sourceFiber.alternate的优先级")]),t._v("\n    alternate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lanes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mergeLanes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("alternate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lanes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lane"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 从sourceFiber开始, 向上遍历所有节点, 直到HostRoot. 设置沿途所有节点(包括alternate)的childLanes")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" node "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sourceFiber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" parent "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sourceFiber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("return"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("parent "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    parent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("childLanes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mergeLanes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("parent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("childLanes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lane"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    alternate "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" parent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("alternate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("alternate "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      alternate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("childLanes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mergeLanes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("alternate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("childLanes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lane"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    node "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" parent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    parent "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" parent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("return"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tag "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" HostRoot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" root"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" FiberRoot "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stateNode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" root"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"markupdatelanefromfibertoroot"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#markupdatelanefromfibertoroot"}},[t._v("#")]),t._v(" markUpdateLaneFromFiberToRoot")]),t._v(" "),a("p",[t._v("下图表示了"),a("code",[t._v("markUpdateLaneFromFiberToRoot")]),t._v("的具体作用:")]),t._v(" "),a("ul",[a("li",[t._v("以"),a("code",[t._v("sourceFiber")]),t._v("为起点, 设置起点的"),a("code",[t._v("fiber.lanes")])]),t._v(" "),a("li",[t._v("从起点开始, 直到"),a("code",[t._v("HostRootFiber")]),t._v(", 设置父路径上所有节点(也包括"),a("code",[t._v("fiber.alternate")]),t._v(")的"),a("code",[t._v("fiber.childLanes")]),t._v(".")]),t._v(" "),a("li",[t._v("通过设置"),a("code",[t._v("fiber.lanes")]),t._v("和"),a("code",[t._v("fiber.childLanes")]),t._v("就可以辅助判断子树是否需要更新(在下文"),a("code",[t._v("循环构造")]),t._v("中详细说明).")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/notes/assets/react-illustration-series/markupdatelane.png",alt:""}})]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[a("code",[t._v("对比更新")]),t._v("没有直接调用"),a("code",[t._v("performSyncWorkOnRoot")]),t._v(", 而是通过调度中心来处理, 由于本示例是在"),a("code",[t._v("Legacy")]),t._v("模式下进行, 最后会同步执行"),a("code",[t._v("performSyncWorkOnRoot")]),t._v(".(详细原理可以参考"),a("RouterLink",{attrs:{to:"/react-illustration-series/main/scheduler.html"}},[t._v("React 调度原理(scheduler)")]),t._v("). 所以其调用链路"),a("code",[t._v("performSyncWorkOnRoot---\x3erenderRootSync---\x3eworkLoopSync")]),t._v("与"),a("code",[t._v("初次构造")]),t._v("中的一致.")],1)]),t._v(" "),a("p",[t._v("在"),a("a",{attrs:{href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberWorkLoop.old.js#L1490-L1553",target:"_blank",rel:"noopener noreferrer"}},[t._v("renderRootSync"),a("OutboundLink")],1),t._v("中:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("renderRootSync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("root"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" FiberRoot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lanes"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Lanes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" prevExecutionContext "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" executionContext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  executionContext "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|=")]),t._v(" RenderContext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果fiberRoot变动, 或者update.lane变动, 都会刷新栈帧, 丢弃上一次渲染进度")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("workInProgressRoot "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" root "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" workInProgressRootRenderLanes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" lanes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 刷新栈帧, legacy模式下都会进入")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("prepareFreshStack")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("root"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lanes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("workLoopSync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("thrownValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleError")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("root"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" thrownValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  executionContext "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" prevExecutionContext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重置全局变量, 表明render结束")]),t._v("\n  workInProgressRoot "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  workInProgressRootRenderLanes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" NoLanes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" workInProgressRootExitStatus"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("进入循环构造("),a("code",[t._v("workLoopSync")]),t._v(")前, 会刷新栈帧(调用"),a("code",[t._v("prepareFreshStack")]),t._v(")(参考"),a("RouterLink",{attrs:{to:"/react-illustration-series/main/fibertree-prepare.html#栈帧管理"}},[t._v("fiber 树构造(基础准备)")]),t._v("中"),a("code",[t._v("栈帧管理")]),t._v(").")],1),t._v(" "),a("p",[t._v("此时的内存结构如下:")]),t._v(" "),a("p",[a("img",{attrs:{src:"/notes/assets/react-illustration-series/status-refreshstack.png",alt:""}})]),t._v(" "),a("p",[t._v("注意:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("fiberRoot.current")]),t._v("指向与当前页面对应的"),a("code",[t._v("fiber树")]),t._v(", "),a("code",[t._v("workInProgress")]),t._v("指向正在构造的"),a("code",[t._v("fiber树")]),t._v(".")]),t._v(" "),a("li",[t._v("刷新栈帧会调用"),a("code",[t._v("createWorkInProgress()")]),t._v(", 使得"),a("code",[t._v("workInProgress.flags和workInProgress.effects")]),t._v("都已经被重置. 且"),a("code",[t._v("workInProgress.child = current.child")]),t._v(". 所以在进入"),a("code",[t._v("循环构造")]),t._v("之前, "),a("code",[t._v("HostRootFiber")]),t._v("与"),a("code",[t._v("HostRootFiber.alternate")]),t._v("共用一个"),a("code",[t._v("child")]),t._v("(这里是"),a("code",[t._v("fiber(<App/>)")]),t._v(").")])]),t._v(" "),a("h3",{attrs:{id:"循环构造"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#循环构造"}},[t._v("#")]),t._v(" 循环构造")]),t._v(" "),a("p",[t._v("回顾一下"),a("RouterLink",{attrs:{to:"/react-illustration-series/main/fibertree-create.html"}},[t._v("fiber 树构造(初次创建)")]),t._v("中的介绍. 整个"),a("code",[t._v("fiber树构造")]),t._v("是一个深度优先遍历(可参考"),a("RouterLink",{attrs:{to:"/react-illustration-series/algorithm/dfs.html"}},[t._v("React 算法之深度优先遍历")]),t._v("), 其中有 2 个重要的变量"),a("code",[t._v("workInProgress")]),t._v("和"),a("code",[t._v("current")]),t._v("(可参考"),a("RouterLink",{attrs:{to:"/react-illustration-series/main/fibertree-prepare.html#双缓冲技术"}},[t._v("fiber 树构造(基础准备)")]),t._v("中介绍的"),a("code",[t._v("双缓冲技术")]),t._v("):")],1),t._v(" "),a("ul",[a("li",[a("code",[t._v("workInProgress")]),t._v("和"),a("code",[t._v("current")]),t._v("都视为指针")]),t._v(" "),a("li",[a("code",[t._v("workInProgress")]),t._v("指向当前正在构造的"),a("code",[t._v("fiber")]),t._v("节点")]),t._v(" "),a("li",[a("code",[t._v("current = workInProgress.alternate")]),t._v("(即"),a("code",[t._v("fiber.alternate")]),t._v("), 指向当前页面正在使用的"),a("code",[t._v("fiber")]),t._v("节点.")])]),t._v(" "),a("p",[t._v("在深度优先遍历中, 每个"),a("code",[t._v("fiber")]),t._v("节点都会经历 2 个阶段:")]),t._v(" "),a("ol",[a("li",[t._v("探寻阶段 "),a("code",[t._v("beginWork")])]),t._v(" "),a("li",[t._v("回溯阶段 "),a("code",[t._v("completeWork")])])]),t._v(" "),a("p",[t._v("这 2 个阶段共同完成了每一个"),a("code",[t._v("fiber")]),t._v("节点的创建(或更新), 所有"),a("code",[t._v("fiber")]),t._v("节点则构成了"),a("code",[t._v("fiber树")]),t._v(".")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("workLoopSync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("workInProgress "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("performUnitOfWork")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("workInProgress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ... 省略部分无关代码")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("performUnitOfWork")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("unitOfWork"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// unitOfWork就是被传入的workInProgress")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" current "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" unitOfWork"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("alternate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" next"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  next "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("beginWork")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" unitOfWork"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" subtreeRenderLanes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  unitOfWork"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("memoizedProps "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" unitOfWork"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pendingProps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("next "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果没有派生出新的节点, 则进入completeWork阶段, 传入的是当前unitOfWork")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("completeUnitOfWork")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("unitOfWork"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    workInProgress "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" next"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("注意: 在"),a("code",[t._v("对比更新")]),t._v("过程中"),a("code",[t._v("current = unitOfWork.alternate;")]),t._v("不为"),a("code",[t._v("null")]),t._v(", 后续的调用逻辑中会大量使用此处传入的"),a("code",[t._v("current")]),t._v(".")]),t._v(" "),a("h3",{attrs:{id:"探寻阶段-beginwork"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#探寻阶段-beginwork"}},[t._v("#")]),t._v(" 探寻阶段 beginWork")]),t._v(" "),a("p",[a("code",[t._v("beginWork(current, unitOfWork, subtreeRenderLanes)")]),t._v("("),a("a",{attrs:{href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberBeginWork.old.js#L3083-L3494",target:"_blank",rel:"noopener noreferrer"}},[t._v("源码地址"),a("OutboundLink")],1),t._v(").")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("beginWork")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("current"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  workInProgress"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  renderLanes"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Lanes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" updateLanes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" workInProgress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lanes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 进入对比")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" oldProps "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" current"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("memoizedProps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" newProps "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" workInProgress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pendingProps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      oldProps "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" newProps "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasLegacyContextChanged")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__DEV__ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" workInProgress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" current"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      didReceiveUpdate "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("includesSomeLane")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("renderLanes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" updateLanes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当前渲染优先级renderLanes不包括fiber.lanes, 表明当前fiber节点无需更新")]),t._v("\n      didReceiveUpdate "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        workInProgress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tag\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// switch 语句中包括 context相关逻辑, 本节暂不讨论(不影响分析fiber树构造)")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当前fiber节点无需更新, 调用bailoutOnAlreadyFinishedWork循环检测子节点是否需要更新")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bailoutOnAlreadyFinishedWork")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" workInProgress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" renderLanes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 余下逻辑与初次创建共用")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 设置workInProgress优先级为NoLanes(最高优先级)")]),t._v("\n  workInProgress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lanes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" NoLanes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 根据workInProgress节点的类型, 用不同的方法派生出子节点")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    workInProgress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tag "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 只列出部分case")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" ClassComponent"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Component "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" workInProgress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" unresolvedProps "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" workInProgress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pendingProps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" resolvedProps "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n        workInProgress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("elementType "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" Component\n          "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" unresolvedProps\n          "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolveDefaultProps")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Component"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" unresolvedProps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateClassComponent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        current"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        workInProgress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        Component"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        resolvedProps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        renderLanes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" HostRoot"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateHostRoot")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" workInProgress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" renderLanes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" HostComponent"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateHostComponent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" workInProgress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" renderLanes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" HostText"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateHostText")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" workInProgress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" Fragment"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateFragment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" workInProgress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" renderLanes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"bailout逻辑-bailout"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bailout逻辑-bailout"}},[t._v("#")]),t._v(" "),a("code",[t._v("bailout")]),t._v("逻辑 {#bailout}")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("bail out")]),t._v("英文短语翻译为"),a("code",[t._v("解救, 纾困")]),t._v(", 在源码中, "),a("code",[t._v("bailout")]),t._v("用于判断子树节点是否完全复用, 如果可以复用, 则会略过 fiber 树构造.")])]),t._v(" "),a("p",[t._v("与"),a("code",[t._v("初次创建")]),t._v("不同, 在"),a("code",[t._v("对比更新")]),t._v("过程中, 如果是"),a("code",[t._v("老节点")]),t._v(", 那么"),a("code",[t._v("current !== null")]),t._v(", 需要进行对比, 然后决定是否复用老节点及其子树(即"),a("code",[t._v("bailout")]),t._v("逻辑).")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("!includesSomeLane(renderLanes, updateLanes)")]),t._v("这个判断分支, 包含了"),a("code",[t._v("渲染优先级")]),t._v("和"),a("code",[t._v("update优先级")]),t._v("的比较(详情可以回顾"),a("RouterLink",{attrs:{to:"/react-illustration-series/main/fibertree-prepare.html#优先级"}},[t._v("fiber 树构造(基础准备)")]),t._v("中"),a("code",[t._v("优先级")]),t._v("相关解读), 如果当前节点无需更新, 则会进入"),a("code",[t._v("bailout")]),t._v("逻辑.")],1),t._v(" "),a("li",[t._v("最后会调用"),a("code",[t._v("bailoutOnAlreadyFinishedWork")]),t._v(":\n"),a("ul",[a("li",[t._v("如果同时满足"),a("code",[t._v("!includesSomeLane(renderLanes, workInProgress.childLanes)")]),t._v(", 表明该 fiber 节点及其子树都无需更新, 可直接进入回溯阶段("),a("code",[t._v("completeUnitofWork")]),t._v(")")]),t._v(" "),a("li",[t._v("如果不满足"),a("code",[t._v("!includesSomeLane(renderLanes, workInProgress.childLanes)")]),t._v(", 意味着子节点需要更新, "),a("code",[t._v("clone")]),t._v("并返回子节点.")])])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 省略部分无关代码")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bailoutOnAlreadyFinishedWork")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("current"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  workInProgress"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  renderLanes"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Lanes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("includesSomeLane")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("renderLanes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" workInProgress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("childLanes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 渲染优先级不包括 workInProgress.childLanes, 表明子节点也无需更新. 返回null, 直接进入回溯阶段.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 本fiber虽然不用更新, 但是子节点需要更新. clone并返回子节点")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cloneChildFibers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" workInProgress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" workInProgress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("child"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("注意: "),a("code",[t._v("cloneChildFibers")]),t._v("内部调用"),a("code",[t._v("createWorkInProgress")]),t._v(", 在构造"),a("code",[t._v("fiber")]),t._v("节点时会优先复用"),a("code",[t._v("workInProgress.alternate")]),t._v("(不开辟新的内存空间), 否则才会创建新的"),a("code",[t._v("fiber")]),t._v("对象.")]),t._v(" "),a("h4",{attrs:{id:"updatexxx函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#updatexxx函数"}},[t._v("#")]),t._v(" "),a("code",[t._v("updateXXX")]),t._v("函数")]),t._v(" "),a("p",[a("code",[t._v("updateXXX")]),t._v("函数(如: updateHostRoot, updateClassComponent 等)的主干逻辑与"),a("code",[t._v("初次构造")]),t._v("过程完全一致, 总的目的是为了向下生成子节点, 并在这个过程中调用"),a("code",[t._v("reconcileChildren")]),t._v("调和函数, 只要"),a("code",[t._v("fiber")]),t._v("节点有副作用, 就会把特殊操作设置到"),a("code",[t._v("fiber.flags")]),t._v("(如:"),a("code",[t._v("节点ref")]),t._v(","),a("code",[t._v("class组件的生命周期")]),t._v(","),a("code",[t._v("function组件的hook")]),t._v(","),a("code",[t._v("节点删除")]),t._v("等).")]),t._v(" "),a("p",[a("code",[t._v("对比更新")]),t._v("过程的不同之处:")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("bailoutOnAlreadyFinishedWork")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("对比更新")]),t._v("时如果遇到当前节点无需更新(如: "),a("code",[t._v("class")]),t._v("类型的节点且"),a("code",[t._v("shouldComponentUpdate")]),t._v("返回"),a("code",[t._v("false")]),t._v("), 会再次进入"),a("code",[t._v("bailout")]),t._v("逻辑.")])])]),t._v(" "),a("li",[a("code",[t._v("reconcileChildren")]),t._v("调和函数\n"),a("ul",[a("li",[t._v("调和函数是"),a("code",[t._v("updateXXX")]),t._v("函数中的一项重要逻辑, 它的作用是向下生成子节点, 并设置"),a("code",[t._v("fiber.flags")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("初次创建")]),t._v("时"),a("code",[t._v("fiber")]),t._v("节点没有比较对象, 所以在向下生成子节点的时候没有任何多余的逻辑, 只管创建就行.")]),t._v(" "),a("li",[a("code",[t._v("对比更新")]),t._v("时需要把"),a("code",[t._v("ReactElement")]),t._v("对象与"),a("code",[t._v("旧fiber")]),t._v("对象进行比较, 来判断是否需要复用"),a("code",[t._v("旧fiber")]),t._v("对象.")])])])]),t._v(" "),a("p",[t._v("注: 本节的重点是"),a("code",[t._v("fiber树构造")]),t._v(", 在"),a("code",[t._v("对比更新")]),t._v("过程中"),a("code",[t._v("reconcileChildren()函数")]),t._v("实现的"),a("code",[t._v("diff")]),t._v("算法十分重要, 但是它只是处于算法层面, 对于"),a("code",[t._v("diff")]),t._v("算法的实现,在"),a("RouterLink",{attrs:{to:"/react-illustration-series/algorithm/diff.html"}},[t._v("React 算法之调和算法")]),t._v("中单独分析.")],1),t._v(" "),a("p",[t._v("本节只需要先了解调和函数目的:")]),t._v(" "),a("ol",[a("li",[t._v("给新增,移动,和删除节点设置"),a("code",[t._v("fiber.falgs")]),t._v("(新增,移动: "),a("code",[t._v("Placement")]),t._v(", 删除: "),a("code",[t._v("Deletion")]),t._v(")")]),t._v(" "),a("li",[t._v("如果是需要删除的"),a("code",[t._v("fiber")]),t._v(", "),a("a",{attrs:{href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactChildFiber.old.js#L275-L294",target:"_blank",rel:"noopener noreferrer"}},[t._v("除了自身打上"),a("code",[t._v("Deletion")]),t._v("之外, 还要将其添加到父节点的"),a("code",[t._v("effects")]),t._v("链表中"),a("OutboundLink")],1),t._v("(正常副作用队列的处理是在"),a("code",[t._v("completeWork")]),t._v("函数, 但是该节点(被删除)会脱离"),a("code",[t._v("fiber")]),t._v("树, 不会再进入"),a("code",[t._v("completeWork")]),t._v("阶段, 所以在"),a("code",[t._v("beginWork")]),t._v("阶段提前加入副作用队列).")])]),t._v(" "),a("h3",{attrs:{id:"回溯阶段-completework"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#回溯阶段-completework"}},[t._v("#")]),t._v(" 回溯阶段 completeWork")]),t._v(" "),a("p",[a("code",[t._v("completeUnitOfWork(unitOfWork)函数")]),t._v("("),a("a",{attrs:{href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberWorkLoop.old.js#L1670-L1802",target:"_blank",rel:"noopener noreferrer"}},[t._v("源码地址"),a("OutboundLink")],1),t._v(")在"),a("code",[t._v("初次创建")]),t._v("和"),a("code",[t._v("对比更新")]),t._v("逻辑一致, 都是处理"),a("code",[t._v("beginWork")]),t._v(" 阶段已经创建出来的 "),a("code",[t._v("fiber")]),t._v(" 节点, 最后创建(更新)DOM 对象, 并上移副作用队列.")]),t._v(" "),a("p",[t._v("在这里我们重点关注"),a("code",[t._v("completeWork")]),t._v("函数中, "),a("code",[t._v("current !== null")]),t._v("的情况:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...省略无关代码")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("completeWork")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("current"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  workInProgress"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  renderLanes"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Lanes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" newProps "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" workInProgress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pendingProps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("workInProgress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" HostComponent"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 非文本节点")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("popHostContext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("workInProgress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" rootContainerInstance "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getRootHostContainer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" type "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" workInProgress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" workInProgress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stateNode "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 处理改动")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateHostComponent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n          current"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          workInProgress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          newProps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          rootContainerInstance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ref "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" workInProgress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ref"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("markRef")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("workInProgress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...省略无关代码")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" HostText"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 文本节点")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" newText "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" newProps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" workInProgress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stateNode "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" oldText "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" current"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("memoizedProps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 处理改动")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateHostText")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" workInProgress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" oldText"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" newText"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...省略无关代码")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("updateHostComponent")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("current"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  workInProgress"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  newProps"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Props"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  rootContainerInstance"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Container"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" oldProps "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" current"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("memoizedProps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldProps "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" newProps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" instance"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Instance "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" workInProgress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stateNode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" currentHostContext "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getHostContext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" updatePayload "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("prepareUpdate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    instance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    oldProps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    newProps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    rootContainerInstance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    currentHostContext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  workInProgress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("updateQueue "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("updatePayload"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果有属性变动, 设置fiber.flags |= Update, 等待`commit`阶段的处理")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("updatePayload"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("markUpdate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("workInProgress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("updateHostText")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("current"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  workInProgress"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  oldText"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  newText"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果有属性变动, 设置fiber.flags |= Update, 等待`commit`阶段的处理")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldText "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" newText"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("markUpdate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("workInProgress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("可以看到在更新过程中, 如果 DOM 属性有变化, 不会再次新建 DOM 对象, 而是设置"),a("code",[t._v("fiber.flags |= Update")]),t._v(", 等待"),a("code",[t._v("commit")]),t._v("阶段处理("),a("a",{attrs:{href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberCompleteWork.old.js#L197-L248",target:"_blank",rel:"noopener noreferrer"}},[t._v("源码链接"),a("OutboundLink")],1),t._v(").")]),t._v(" "),a("h3",{attrs:{id:"过程图解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#过程图解"}},[t._v("#")]),t._v(" 过程图解")]),t._v(" "),a("p",[t._v("针对本节的示例代码, 将整个"),a("code",[t._v("fiber")]),t._v("树构造过程表示出来:")]),t._v(" "),a("p",[t._v("构造前:")]),t._v(" "),a("p",[t._v("在上文已经说明, 进入循环构造前会调用"),a("code",[t._v("prepareFreshStack")]),t._v("刷新栈帧, 在进入"),a("code",[t._v("fiber树构造")]),t._v("循环之前, 保持这这个初始化状态:")]),t._v(" "),a("p",[a("img",{attrs:{src:"/notes/assets/react-illustration-series/unitofwork0(1).png",alt:""}})]),t._v(" "),a("p",[a("code",[t._v("performUnitOfWork")]),t._v("第 1 次调用(只执行"),a("code",[t._v("beginWork")]),t._v("):")]),t._v(" "),a("ul",[a("li",[t._v("执行前: "),a("code",[t._v("workInProgress")]),t._v("指向"),a("code",[t._v("HostRootFiber.alternate")]),t._v("对象, 此时"),a("code",[t._v("current = workInProgress.alternate")]),t._v("指向当前页面对应的"),a("code",[t._v("fiber")]),t._v("树.")]),t._v(" "),a("li",[t._v("执行过程:\n"),a("ul",[a("li",[t._v("因为"),a("code",[t._v("current !== null")]),t._v("且当前节点"),a("code",[t._v("fiber.lanes")]),t._v("不在"),a("code",[t._v("渲染优先级")]),t._v("范围内, 故进入"),a("code",[t._v("bailoutOnAlreadyFinishedWork")]),t._v("逻辑")]),t._v(" "),a("li",[t._v("又因为"),a("code",[t._v("fiber.childLanes")]),t._v("处于"),a("code",[t._v("渲染优先级")]),t._v("范围内, 证明"),a("code",[t._v("child")]),t._v("节点需要更新, 克隆"),a("code",[t._v("workInProgress.child")]),t._v("节点.")]),t._v(" "),a("li",[a("code",[t._v("clone")]),t._v("之后, "),a("code",[t._v("新fiber")]),t._v("节点会丢弃"),a("code",[t._v("旧fiber")]),t._v("上的标志位("),a("code",[t._v("flags")]),t._v(")和副作用("),a("code",[t._v("effects")]),t._v("), 其他属性会继续保留.")])])]),t._v(" "),a("li",[t._v("执行后: 返回被"),a("code",[t._v("clone")]),t._v("的下级节点"),a("code",[t._v("fiber(<App/>)")]),t._v(", 移动"),a("code",[t._v("workInProgress")]),t._v("指向子节点"),a("code",[t._v("fiber(<App/>)")])])]),t._v(" "),a("p",[a("img",{attrs:{src:"/notes/assets/react-illustration-series/unitofwork1(1).png",alt:""}})]),t._v(" "),a("p",[a("code",[t._v("performUnitOfWork")]),t._v("第 2 次调用(只执行"),a("code",[t._v("beginWork")]),t._v("):")]),t._v(" "),a("ul",[a("li",[t._v("执行前: "),a("code",[t._v("workInProgress")]),t._v("指向"),a("code",[t._v("fiber(<App/>)")]),t._v("节点, 且"),a("code",[t._v("current = workInProgress.alternate")]),t._v("有值")]),t._v(" "),a("li",[t._v("执行过程:\n"),a("ul",[a("li",[t._v("当前节点"),a("code",[t._v("fiber.lanes")]),t._v("处于"),a("code",[t._v("渲染优先级")]),t._v("范围内, 会进入"),a("code",[t._v("updateClassComponent()")]),t._v("函数")]),t._v(" "),a("li",[t._v("在"),a("code",[t._v("updateClassComponent()")]),t._v("函数中, 调用"),a("code",[t._v("reconcilerChildren()")]),t._v("生成下级子节点.")])])]),t._v(" "),a("li",[t._v("执行后: 返回下级节点"),a("code",[t._v("fiber(<Header/>)")]),t._v(", 移动"),a("code",[t._v("workInProgress")]),t._v("指向子节点"),a("code",[t._v("fiber(<Header/>)")])])]),t._v(" "),a("p",[a("img",{attrs:{src:"/notes/assets/react-illustration-series/unitofwork2(1).png",alt:""}})]),t._v(" "),a("p",[a("code",[t._v("performUnitOfWork")]),t._v("第 3 次调用(执行"),a("code",[t._v("beginWork")]),t._v("和"),a("code",[t._v("completeUnitOfWork")]),t._v("):")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("beginWork")]),t._v("执行前: "),a("code",[t._v("workInProgress")]),t._v("指向"),a("code",[t._v("fiber(<Header/>)")]),t._v(", 且"),a("code",[t._v("current = workInProgress.alternate")]),t._v("有值")]),t._v(" "),a("li",[a("code",[t._v("beginWork")]),t._v("执行过程:\n"),a("ul",[a("li",[t._v("当前节点"),a("code",[t._v("fiber.lanes")]),t._v("处于"),a("code",[t._v("渲染优先级")]),t._v("范围内, 会进入"),a("code",[t._v("updateClassComponent()")]),t._v("函数")]),t._v(" "),a("li",[t._v("在"),a("code",[t._v("updateClassComponent()")]),t._v("函数中, 由于此组件是"),a("code",[t._v("PureComponent")]),t._v(", "),a("code",[t._v("shouldComponentUpdate")]),t._v("判定为"),a("code",[t._v("false")]),t._v(",故进入"),a("code",[t._v("bailoutOnAlreadyFinishedWork")]),t._v("逻辑.")]),t._v(" "),a("li",[t._v("又因为"),a("code",[t._v("fiber.childLanes")]),t._v("不在"),a("code",[t._v("渲染优先级")]),t._v("范围内, 证明"),a("code",[t._v("child")]),t._v("节点也不需要更新")])])]),t._v(" "),a("li",[a("code",[t._v("beginWork")]),t._v("执行后: 因为完全满足"),a("code",[t._v("bailout")]),t._v("逻辑, 返回"),a("code",[t._v("null")]),t._v(". 所以进入"),a("code",[t._v("completeUnitOfWork(unitOfWork)")]),t._v("函数, 传入的参数"),a("code",[t._v("unitOfWork")]),t._v("实际上就是"),a("code",[t._v("workInProgress")]),t._v("(此时指向"),a("code",[t._v("fiber(<Header/>)")]),t._v(")")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/notes/assets/react-illustration-series/unitofwork3.0.png",alt:""}})]),t._v(" "),a("ul",[a("li",[a("code",[t._v("completeUnitOfWork")]),t._v("执行前: "),a("code",[t._v("workInProgress")]),t._v("指向"),a("code",[t._v("fiber(<Header/>)")])]),t._v(" "),a("li",[a("code",[t._v("completeUnitOfWork")]),t._v("执行过程: 以"),a("code",[t._v("fiber(<Header/>)")]),t._v("为起点, 向上回溯")])]),t._v(" "),a("p",[a("code",[t._v("completeUnitOfWork")]),t._v("第 1 次循环:")]),t._v(" "),a("ol",[a("li",[t._v("执行"),a("code",[t._v("completeWork")]),t._v("函数: "),a("code",[t._v("class")]),t._v("类型的组件无需处理.")]),t._v(" "),a("li",[t._v("上移副作用队列: 由于本节点"),a("code",[t._v("fiber(header)")]),t._v("没有副作用("),a("code",[t._v("fiber.flags = 0")]),t._v("), 所以执行之后副作用队列没有实质变化(目前为空).")]),t._v(" "),a("li",[t._v("向上回溯: 由于还有兄弟节点, 把"),a("code",[t._v("workInProgress")]),t._v("指向下一个兄弟节点"),a("code",[t._v("fiber(button)")]),t._v(", 退出"),a("code",[t._v("completeUnitOfWork")]),t._v(".")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/notes/assets/react-illustration-series/unitofwork3.1.png",alt:""}})]),t._v(" "),a("p",[a("code",[t._v("performUnitOfWork")]),t._v("第 4 次调用(执行"),a("code",[t._v("beginWork")]),t._v("和"),a("code",[t._v("completeUnitOfWork")]),t._v("):")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("beginWork")]),t._v("执行过程: 调用"),a("code",[t._v("updateHostComponent")])]),t._v(" "),a("ul",[a("li",[t._v("本示例中"),a("code",[t._v("button")]),t._v("的子节点是一个"),a("a",{attrs:{href:"https://github.com/facebook/react/blob/8e5adfbd7e605bda9c5e96c10e015b3dc0df688e/packages/react-dom/src/client/ReactDOMHostConfig.js#L350-L361",target:"_blank",rel:"noopener noreferrer"}},[t._v("直接文本节点"),a("OutboundLink")],1),t._v(",设置"),a("a",{attrs:{href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberBeginWork.old.js#L1147",target:"_blank",rel:"noopener noreferrer"}},[t._v("nextChildren = null"),a("OutboundLink")],1),t._v("(源码注释的解释是不用在开辟内存去创建一个文本节点, 同时还能减少向下遍历).")]),t._v(" "),a("li",[t._v("由于"),a("code",[t._v("nextChildren = null")]),t._v(", 经过"),a("code",[t._v("reconcilerChildren")]),t._v("阶段处理后, 返回值也是"),a("code",[t._v("null")])])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("beginWork")]),t._v("执行后: 由于下级节点为"),a("code",[t._v("null")]),t._v(", 所以进入"),a("code",[t._v("completeUnitOfWork(unitOfWork)")]),t._v("函数, 传入的参数"),a("code",[t._v("unitOfWork")]),t._v("实际上就是"),a("code",[t._v("workInProgress")]),t._v("(此时指向"),a("code",[t._v("fiber(button)")]),t._v("节点)")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("completeUnitOfWork")]),t._v("执行过程: 以"),a("code",[t._v("fiber(button)")]),t._v("为起点, 向上回溯")])])]),t._v(" "),a("p",[a("code",[t._v("completeUnitOfWork")]),t._v("第 1 次循环:")]),t._v(" "),a("ol",[a("li",[t._v("执行"),a("code",[t._v("completeWork")]),t._v("函数\n"),a("ul",[a("li",[t._v("因为"),a("code",[t._v("fiber(button).stateNode != null")]),t._v(", 所以无需再次创建 DOM 对象. 只需要进一步调用"),a("code",[t._v("updateHostComponent()")]),t._v("记录 DOM 属性改动情况")]),t._v(" "),a("li",[t._v("在"),a("code",[t._v("updateHostComponent()")]),t._v("函数中, 又因为"),a("code",[t._v("oldProps === newProps")]),t._v(", 所以无需记录改动情况, 直接返回")])])]),t._v(" "),a("li",[t._v("上移副作用队列: 由于本节点"),a("code",[t._v("fiber(button)")]),t._v("没有副作用("),a("code",[t._v("fiber.flags = 0")]),t._v("), 所以执行之后副作用队列没有实质变化(目前为空).")]),t._v(" "),a("li",[t._v("向上回溯: 由于还有兄弟节点, 把"),a("code",[t._v("workInProgress")]),t._v("指向下一个兄弟节点"),a("code",[t._v("fiber(div)")]),t._v(", 退出"),a("code",[t._v("completeUnitOfWork")]),t._v(".")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/notes/assets/react-illustration-series/unitofwork4.png",alt:""}})]),t._v(" "),a("p",[a("code",[t._v("performUnitOfWork")]),t._v("第 5 次调用(执行"),a("code",[t._v("beginWork")]),t._v("):")]),t._v(" "),a("ul",[a("li",[t._v("执行前: "),a("code",[t._v("workInProgress")]),t._v("指向"),a("code",[t._v("fiber(div)")]),t._v("节点, 且"),a("code",[t._v("current = workInProgress.alternate")]),t._v("有值")]),t._v(" "),a("li",[t._v("执行过程:\n"),a("ul",[a("li",[t._v("在"),a("code",[t._v("updateHostComponent()")]),t._v("函数中, 调用"),a("code",[t._v("reconcilerChildren()")]),t._v("生成下级子节点.")]),t._v(" "),a("li",[t._v("需要注意的是, 下级子节点是一个可迭代数组, 会把"),a("code",[t._v("fiber.child.sbling")]),t._v("一起构造出来, 同时根据需要设置"),a("code",[t._v("fiber.flags")]),t._v(". 在本例中, 下级节点有被删除的情况, 被删除的节点会被添加到父节点的副作用队列中(具体实现方式请参考"),a("RouterLink",{attrs:{to:"/react-illustration-series/algorithm/diff.html"}},[t._v("React 算法之调和算法")]),t._v(").")],1)])]),t._v(" "),a("li",[t._v("执行后: 返回下级节点"),a("code",[t._v("fiber(p)")]),t._v(", 移动"),a("code",[t._v("workInProgress")]),t._v("指向子节点"),a("code",[t._v("fiber(p)")])])]),t._v(" "),a("p",[a("img",{attrs:{src:"/notes/assets/react-illustration-series/unitofwork5(1).png",alt:""}})]),t._v(" "),a("p",[a("code",[t._v("performUnitOfWork")]),t._v("第 6 次调用(执行"),a("code",[t._v("beginWork")]),t._v("和"),a("code",[t._v("completeUnitOfWork")]),t._v("):")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("beginWork")]),t._v("执行过程: 与第 4 次调用中构建"),a("code",[t._v("fiber(button)")]),t._v("的逻辑完全一致, 因为都是直接文本节点, "),a("code",[t._v("reconcilerChildren()")]),t._v("返回的下级子节点为 null.")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("beginWork")]),t._v("执行后: 由于下级节点为"),a("code",[t._v("null")]),t._v(", 所以进入"),a("code",[t._v("completeUnitOfWork(unitOfWork)")]),t._v("函数")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("completeUnitOfWork")]),t._v("执行过程: 以"),a("code",[t._v("fiber(p)")]),t._v("为起点, 向上回溯")])])]),t._v(" "),a("p",[a("code",[t._v("completeUnitOfWork")]),t._v("第 1 次循环:")]),t._v(" "),a("ol",[a("li",[t._v("执行"),a("code",[t._v("completeWork")]),t._v("函数\n"),a("ul",[a("li",[t._v("因为"),a("code",[t._v("fiber(p).stateNode != null")]),t._v(", 所以无需再次创建 DOM 对象. 在"),a("code",[t._v("updateHostComponent()")]),t._v("函数中, 又因为节点属性没有变动, 所以无需打标记")])])]),t._v(" "),a("li",[t._v("上移副作用队列: 本节点"),a("code",[t._v("fiber(p)")]),t._v("没有副作用("),a("code",[t._v("fiber.flags = 0")]),t._v(").")]),t._v(" "),a("li",[t._v("向上回溯: 由于还有兄弟节点, 把"),a("code",[t._v("workInProgress")]),t._v("指向下一个兄弟节点"),a("code",[t._v("fiber(p)")]),t._v(", 退出"),a("code",[t._v("completeUnitOfWork")]),t._v(".")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/notes/assets/react-illustration-series/unitofwork6(1).png",alt:""}})]),t._v(" "),a("p",[a("code",[t._v("performUnitOfWork")]),t._v("第 7 次调用(执行"),a("code",[t._v("beginWork")]),t._v("和"),a("code",[t._v("completeUnitOfWork")]),t._v("):")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("beginWork")]),t._v("执行过程: 与第 4 次调用中构建"),a("code",[t._v("fiber(button)")]),t._v("的逻辑完全一致, 因为都是直接文本节点, "),a("code",[t._v("reconcilerChildren()")]),t._v("返回的下级子节点为 null.")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("beginWork")]),t._v("执行后: 由于下级节点为"),a("code",[t._v("null")]),t._v(", 所以进入"),a("code",[t._v("completeUnitOfWork(unitOfWork)")]),t._v("函数")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("completeUnitOfWork")]),t._v("执行过程: 以"),a("code",[t._v("fiber(p)")]),t._v("为起点, 向上回溯")])])]),t._v(" "),a("p",[a("code",[t._v("completeUnitOfWork")]),t._v("第 1 次循环:")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("执行"),a("code",[t._v("completeWork")]),t._v("函数:")]),t._v(" "),a("ul",[a("li",[t._v("因为"),a("code",[t._v("fiber(p).stateNode != null")]),t._v(", 所以无需再次创建 DOM 对象. 在"),a("code",[t._v("updateHostComponent()")]),t._v("函数中, 又因为节点属性没有变动, 所以无需打标记")])])]),t._v(" "),a("li",[a("p",[t._v("上移副作用队列: 本节点"),a("code",[t._v("fiber(p)")]),t._v("有副作用("),a("code",[t._v("fiber.flags = Placement")]),t._v("), 需要将其添加到父节点的副作用队列之后.")])]),t._v(" "),a("li",[a("p",[t._v("向上回溯: 由于还有兄弟节点, 把"),a("code",[t._v("workInProgress")]),t._v("指向下一个兄弟节点"),a("code",[t._v("fiber(p)")]),t._v(", 退出"),a("code",[t._v("completeUnitOfWork")]),t._v(".")])])]),t._v(" "),a("p",[a("img",{attrs:{src:"/notes/assets/react-illustration-series/unitofwork7(1).png",alt:""}})]),t._v(" "),a("p",[a("code",[t._v("performUnitOfWork")]),t._v("第 8 次调用(执行"),a("code",[t._v("beginWork")]),t._v("和"),a("code",[t._v("completeUnitOfWork")]),t._v("):")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("beginWork")]),t._v("执行过程: 本节点"),a("code",[t._v("fiber(p)")]),t._v("是一个新增节点, 其"),a("code",[t._v("current === null")]),t._v(", 会进入"),a("code",[t._v("updateHostComponent()")]),t._v("函数. 因为是直接文本节点, "),a("code",[t._v("reconcilerChildren()")]),t._v("返回的下级子节点为 null.")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("beginWork")]),t._v("执行后: 由于下级节点为"),a("code",[t._v("null")]),t._v(", 所以进入"),a("code",[t._v("completeUnitOfWork(unitOfWork)")]),t._v("函数")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("completeUnitOfWork")]),t._v("执行过程: 以"),a("code",[t._v("fiber(p)")]),t._v("为起点, 向上回溯")])])]),t._v(" "),a("p",[a("code",[t._v("completeUnitOfWork")]),t._v("第 1 次循环:")]),t._v(" "),a("ol",[a("li",[t._v("执行"),a("code",[t._v("completeWork")]),t._v("函数: 由于本节点是一个新增节点,且"),a("code",[t._v("fiber(p).stateNode === null")]),t._v(", 所以创建"),a("code",[t._v("fiber(p)")]),t._v("节点对应的"),a("code",[t._v("DOM")]),t._v("实例, 挂载到"),a("code",[t._v("fiber.stateNode")]),t._v("之上.")]),t._v(" "),a("li",[t._v("上移副作用队列: 本节点"),a("code",[t._v("fiber(p)")]),t._v("有副作用("),a("code",[t._v("fiber.flags = Placement")]),t._v("), 需要将其添加到父节点的副作用队列之后.")]),t._v(" "),a("li",[t._v("向上回溯: 由于没有兄弟节点, 把"),a("code",[t._v("workInProgress")]),t._v("指针指向父节点"),a("code",[t._v("fiber(div)")]),t._v(".")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/notes/assets/react-illustration-series/unitofwork8.png",alt:""}})]),t._v(" "),a("p",[a("code",[t._v("completeUnitOfWork")]),t._v("第 2 次循环:")]),t._v(" "),a("ol",[a("li",[t._v("执行"),a("code",[t._v("completeWork")]),t._v("函数: 由于"),a("code",[t._v("div")]),t._v("组件没有属性变动, 故"),a("code",[t._v("updateHostComponent()")]),t._v("没有设置副作用标记")]),t._v(" "),a("li",[t._v("上移副作用队列: 本节点"),a("code",[t._v("fiber(div)")]),t._v("的副作用队列添加到父节点的副作用队列之后.")]),t._v(" "),a("li",[t._v("向上回溯: 由于没有兄弟节点, 把"),a("code",[t._v("workInProgress")]),t._v("指针指向父节点"),a("code",[t._v("fiber(<App/>)")])])]),t._v(" "),a("p",[a("code",[t._v("completeUnitOfWork")]),t._v("第 3 次循环:")]),t._v(" "),a("ol",[a("li",[t._v("执行"),a("code",[t._v("completeWork")]),t._v("函数: class 类型的节点无需处理")]),t._v(" "),a("li",[t._v("上移副作用队列: 本节点"),a("code",[t._v("fiber(<App/>)")]),t._v("的副作用队列添加到父节点的副作用队列之后.")]),t._v(" "),a("li",[t._v("向上回溯: 由于没有兄弟节点, 把"),a("code",[t._v("workInProgress")]),t._v("指针指向父节点"),a("code",[t._v("fiber(HostRootFiber)")])])]),t._v(" "),a("p",[a("code",[t._v("completeUnitOfWork")]),t._v("第 4 次循环:")]),t._v(" "),a("ol",[a("li",[t._v("执行"),a("code",[t._v("completeWork")]),t._v("函数: "),a("code",[t._v("HostRoot")]),t._v("类型的节点无需处理")]),t._v(" "),a("li",[t._v("向上回溯: 由于父节点为空, 无需进入处理副作用队列的逻辑. 最后设置"),a("code",[t._v("workInProgress=null")]),t._v(", 并退出"),a("code",[t._v("completeUnitOfWork")])]),t._v(" "),a("li",[t._v("重置"),a("code",[t._v("fiber.childLanes")])])]),t._v(" "),a("p",[t._v("到此整个"),a("code",[t._v("fiber树构造循环(对比更新)")]),t._v("已经执行完毕, 拥有一棵新的"),a("code",[t._v("fiber树")]),t._v(", 并且在"),a("code",[t._v("fiber树")]),t._v("的根节点上挂载了副作用队列. "),a("code",[t._v("renderRootSync")]),t._v("函数退出之前, 会重置"),a("code",[t._v("workInProgressRoot = null")]),t._v(", 表明没有正在进行中的"),a("code",[t._v("render")]),t._v(". 且把最新的"),a("code",[t._v("fiber树")]),t._v("挂载到"),a("code",[t._v("fiberRoot.finishedWork")]),t._v("上. 这时整个 fiber 树的内存结构如下(注意"),a("code",[t._v("fiberRoot.finishedWork")]),t._v("和"),a("code",[t._v("fiberRoot.current")]),t._v("指针,在"),a("code",[t._v("commitRoot")]),t._v("阶段会进行处理):")]),t._v(" "),a("p",[a("img",{attrs:{src:"/notes/assets/react-illustration-series/fibertree-beforecommit(1).png",alt:""}})]),t._v(" "),a("p",[t._v("无论是"),a("code",[t._v("初次构造")]),t._v("或者是"),a("code",[t._v("对比更新")]),t._v(", 当"),a("code",[t._v("fiber树构造")]),t._v("完成之后, 余下的逻辑几乎一致, 在"),a("RouterLink",{attrs:{to:"/react-illustration-series/main/fibertree-commit.html"}},[t._v("fiber 树渲染")]),t._v("中继续讨论.")],1),t._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("本节演示了更新阶段"),a("code",[t._v("fiber树构造(对比更新)")]),t._v("的全部过程, 跟踪了创建过程中内存引用的变化情况. 与"),a("code",[t._v("初次构造")]),t._v("最大的不同在于"),a("code",[t._v("fiber节点")]),t._v("是否可以复用, 其中"),a("code",[t._v("bailout")]),t._v("逻辑是"),a("code",[t._v("fiber子树")]),t._v("能否复用的判断依据.")])])}),[],!1,null,null,null);s.default=e.exports}}]);