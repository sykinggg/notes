(window.webpackJsonp=window.webpackJsonp||[]).push([[305],{908:function(t,s,n){"use strict";n.r(s);var a=n(1),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"fiber-树构造-初次创建"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#fiber-树构造-初次创建"}},[t._v("#")]),t._v(" fiber 树构造(初次创建)")]),t._v(" "),n("p",[t._v("本节的内容完全建立在前文"),n("RouterLink",{attrs:{to:"/react-illustration-series/main/fibertree-prepare.html"}},[t._v("fiber 树构造(基础准备)")]),t._v("中介绍的基础知识之上, 其中总结了"),n("code",[t._v("fiber 树构造")]),t._v("的 2 种情况:")],1),t._v(" "),n("ol",[n("li",[t._v("初次创建: 在"),n("code",[t._v("React")]),t._v("应用首次启动时, 界面还没有渲染, 此时并不会进入对比过程, 相当于直接构造一棵全新的树.")]),t._v(" "),n("li",[t._v("对比更新: "),n("code",[t._v("React")]),t._v("应用启动后, 界面已经渲染. 如果再次发生更新, 创建"),n("code",[t._v("新fiber")]),t._v("之前需要和"),n("code",[t._v("旧fiber")]),t._v("进行对比. 最后构造的 fiber 树有可能是全新的, 也可能是部分更新的.")])]),t._v(" "),n("p",[t._v("本节只讨论"),n("code",[t._v("初次创建")]),t._v("这种情况, 为了控制篇幅(本节直击核心源码, 不再介绍基础知识, 可参照"),n("RouterLink",{attrs:{to:"/react-illustration-series/main/fibertree-prepare.html"}},[t._v("fiber 树构造(基础准备)")]),t._v(")并突出"),n("code",[t._v("fiber 树构造")]),t._v("过程, 后文会在"),n("code",[t._v("Legacy")]),t._v("模式下进行分析(因为只讨论"),n("code",[t._v("fiber树构造")]),t._v("原理, "),n("code",[t._v("Concurrent")]),t._v("模式与"),n("code",[t._v("Legacy")]),t._v("没有区别).")],1),t._v(" "),n("p",[t._v("本节示例代码如下("),n("a",{attrs:{href:"https://codesandbox.io/s/busy-jang-b26hy?file=/src/App.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("codesandbox 地址"),n("OutboundLink")],1),t._v("):")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("App")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Component")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("componentDidMount")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("App Mount")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("App 组件对应的fiber节点: ")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_reactInternals"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div className"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"app"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("header"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("header"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("header"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Content "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Content")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Component")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("componentDidMount")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("Content Mount")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("Content 组件对应的fiber节点: ")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_reactInternals"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("React"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Fragment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("p"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("p"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("p"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("p"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("React"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Fragment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" App"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h2",{attrs:{id:"启动阶段"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#启动阶段"}},[t._v("#")]),t._v(" 启动阶段")]),t._v(" "),n("p",[t._v("在前文"),n("RouterLink",{attrs:{to:"/react-illustration-series/main/bootstrap.html"}},[t._v("React 应用的启动过程")]),t._v("中分析了 3 种启动模式的差异, 在进入"),n("code",[t._v("react-reconciler")]),t._v("包之前(调用"),n("code",[t._v("updateContainer")]),t._v("之前), 内存状态图如下:")],1),t._v(" "),n("p",[n("img",{attrs:{src:"/notes/assets/react-illustration-series/此时的内存结构如下process-legacy.png",alt:""}})]),t._v(" "),n("p",[t._v("根据这个结构, 可以在控制台中打出当前页面对应的"),n("code",[t._v("fiber")]),t._v("树(用于观察其结构):")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'root'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_reactRootContainer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_internalRoot"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("current"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("然后进入"),n("code",[t._v("react-reconciler")]),t._v("包调用"),n("a",{attrs:{href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberReconciler.old.js#L250-L321",target:"_blank",rel:"noopener noreferrer"}},[t._v("updateContainer 函数"),n("OutboundLink")],1),t._v(":")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ... 省略了部分代码")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateContainer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("element"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ReactNodeList"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  container"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" OpaqueRoot"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  parentComponent"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("React$Component"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("any"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" any"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  callback"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("Function"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Lane "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取当前时间戳")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" current "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("current"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" eventTime "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("requestEventTime")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 创建一个优先级变量(车道模型)")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" lane "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("requestUpdateLane")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 根据车道优先级, 创建update对象, 并加入fiber.updateQueue.pending队列")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" update "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createUpdate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("eventTime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lane"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  update"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("payload "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" element "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  callback "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" callback "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" callback"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("callback "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    update"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("callback "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" callback"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("enqueueUpdate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" update"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3. 进入reconcier运作流程中的`输入`环节")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("scheduleUpdateOnFiber")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lane"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" eventTime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" lane"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("由于"),n("code",[t._v("update")]),t._v("对象的创建, 此时的内存结构如下:")]),t._v(" "),n("p",[n("img",{attrs:{src:"/notes/assets/react-illustration-series/update-container.png",alt:""}})]),t._v(" "),n("p",[t._v("注意: 最初的"),n("code",[t._v("ReactElement")]),t._v("对象"),n("code",[t._v("<App/>")]),t._v("被挂载到"),n("code",[t._v("HostRootFiber.updateQueue.shared.pending.payload.element")]),t._v("中, 后文"),n("code",[t._v("fiber树构造")]),t._v("过程中会再次变动.")]),t._v(" "),n("h2",{attrs:{id:"构造阶段"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#构造阶段"}},[t._v("#")]),t._v(" 构造阶段")]),t._v(" "),n("p",[t._v("为了突出构造过程,排除干扰,先把内存状态图中的"),n("code",[t._v("FiberRoot")]),t._v("和"),n("code",[t._v("HostRootFiber")]),t._v("单独提出来(后文在此基础上添加):")]),t._v(" "),n("p",[n("img",{attrs:{src:"/notes/assets/react-illustration-series/initial-status.png",alt:""}})]),t._v(" "),n("p",[t._v("在"),n("a",{attrs:{href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberWorkLoop.old.js#L517-L619",target:"_blank",rel:"noopener noreferrer"}},[t._v("scheduleUpdateOnFiber 函数"),n("OutboundLink")],1),t._v("中:")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...省略部分代码")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("scheduleUpdateOnFiber")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("fiber"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  lane"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Lane"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  eventTime"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" number"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 标记优先级")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" root "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("markUpdateLaneFromFiberToRoot")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fiber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lane"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lane "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" SyncLane"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("executionContext "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" LegacyUnbatchedContext"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" NoContext "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("executionContext "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("RenderContext "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" CommitContext"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" NoContext\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 首次渲染, 直接进行`fiber构造`")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("performSyncWorkOnRoot")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("可以看到, 在"),n("code",[t._v("Legacy")]),t._v("模式下且首次渲染时, 有 2 个函数"),n("a",{attrs:{href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberWorkLoop.old.js#L625-L667",target:"_blank",rel:"noopener noreferrer"}},[t._v("markUpdateLaneFromFiberToRoot"),n("OutboundLink")],1),t._v("和"),n("a",{attrs:{href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberWorkLoop.old.js#L965-L1045",target:"_blank",rel:"noopener noreferrer"}},[t._v("performSyncWorkOnRoot"),n("OutboundLink")],1),t._v(".")]),t._v(" "),n("p",[t._v("其中"),n("code",[t._v("markUpdateLaneFromFiberToRoot(fiber, lane)")]),t._v("函数在"),n("code",[t._v("fiber树构造(对比更新)")]),t._v("中才会发挥作用, 因为在"),n("code",[t._v("初次创建")]),t._v("时并没有与当前页面所对应的"),n("code",[t._v("fiber树")]),t._v(", 所以核心代码并没有执行, 最后直接返回了"),n("code",[t._v("FiberRoot")]),t._v("对象.")]),t._v(" "),n("p",[n("code",[t._v("performSyncWorkOnRoot")]),t._v("看起来源码很多, "),n("code",[t._v("初次创建")]),t._v("中真正用到的就 2 个函数:")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("performSyncWorkOnRoot")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("root")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" lanes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" exitStatus"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    root "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" workInProgressRoot "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("includesSomeLane")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("expiredLanes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" workInProgressRootRenderLanes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初次构造时(因为root=fiberRoot, workInProgressRoot=null), 所以不会进入")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 获取本次render的优先级, 初次构造返回 NoLanes")]),t._v("\n    lanes "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getNextLanes")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NoLanes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 从root节点开始, 至上而下更新")]),t._v("\n    exitStatus "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("renderRootSync")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lanes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将最新的fiber树挂载到root.finishedWork节点上")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" finishedWork"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("current"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("alternate"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("finishedWork "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" finishedWork"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("finishedLanes "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" lanes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 进入commit阶段")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("commitRoot")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...后面的内容本节不讨论")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("其中"),n("code",[t._v("getNextLanes")]),t._v("返回本次 render 的渲染优先级(详见"),n("RouterLink",{attrs:{to:"/react-illustration-series/main/fibertree-prepare.html#优先级"}},[t._v("fiber 树构造(基础准备)")]),t._v("中"),n("code",[t._v("优先级")]),t._v("相关小节)")],1),t._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberWorkLoop.old.js#L1490-L1553",target:"_blank",rel:"noopener noreferrer"}},[t._v("renderRootSync"),n("OutboundLink")],1)]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("renderRootSync")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("root"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" FiberRoot"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lanes"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Lanes")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" prevExecutionContext "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" executionContext"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  executionContext "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|=")]),t._v(" RenderContext"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果fiberRoot变动, 或者update.lane变动, 都会刷新栈帧, 丢弃上一次渲染进度")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("workInProgressRoot "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" root "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" workInProgressRootRenderLanes "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" lanes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 刷新栈帧, legacy模式下都会进入")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("prepareFreshStack")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lanes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("workLoopSync")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("thrownValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleError")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" thrownValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  executionContext "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" prevExecutionContext"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重置全局变量, 表明render结束")]),t._v("\n  workInProgressRoot "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  workInProgressRootRenderLanes "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" NoLanes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" workInProgressRootExitStatus"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("在"),n("code",[t._v("renderRootSync")]),t._v("中, 在执行"),n("code",[t._v("fiber树构造")]),t._v("前("),n("code",[t._v("workLoopSync")]),t._v(")会先刷新栈帧"),n("code",[t._v("prepareFreshStack")]),t._v("(参考"),n("RouterLink",{attrs:{to:"/react-illustration-series/main/fibertree-prepare.html#栈帧管理"}},[t._v("fiber 树构造(基础准备)")]),t._v(").在这里创建了"),n("code",[t._v("HostRootFiber.alternate")]),t._v(", 重置全局变量"),n("code",[t._v("workInProgress")]),t._v("和"),n("code",[t._v("workInProgressRoot")]),t._v("等.")],1),t._v(" "),n("p",[n("img",{attrs:{src:"/notes/assets/react-illustration-series/status-freshstack.png",alt:""}})]),t._v(" "),n("h3",{attrs:{id:"循环构造"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#循环构造"}},[t._v("#")]),t._v(" 循环构造")]),t._v(" "),n("p",[t._v("逻辑来到"),n("code",[t._v("workLoopSync")]),t._v(", 虽然本节在"),n("code",[t._v("Legacy")]),t._v("模式下进行讨论, 此处还是对比一下"),n("code",[t._v("workLoopConcurrent")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("workLoopSync")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("workInProgress "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("performUnitOfWork")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("workLoopConcurrent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Perform work until Scheduler asks us to yield")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("workInProgress "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("shouldYield")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("performUnitOfWork")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("可以看到"),n("code",[t._v("workLoopConcurrent")]),t._v("相比于"),n("code",[t._v("Sync")]),t._v(", 会多一个停顿机制, 这个机制实现了"),n("code",[t._v("时间切片")]),t._v("和"),n("code",[t._v("可中断渲染")]),t._v("(参考"),n("RouterLink",{attrs:{to:"/react-illustration-series/main/scheduler.html#时间切片原理"}},[t._v("React 调度原理")]),t._v(")")],1),t._v(" "),n("p",[t._v("结合"),n("code",[t._v("performUnitOfWork函数")]),t._v("("),n("a",{attrs:{href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberWorkLoop.old.js#L1642-L1668",target:"_blank",rel:"noopener noreferrer"}},[t._v("源码地址"),n("OutboundLink")],1),t._v(")")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ... 省略部分无关代码")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("performUnitOfWork")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("unitOfWork"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// unitOfWork就是被传入的workInProgress")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" current "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" unitOfWork"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("alternate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" next"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  next "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("beginWork")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" unitOfWork"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" subtreeRenderLanes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  unitOfWork"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("memoizedProps "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" unitOfWork"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pendingProps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("next "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果没有派生出新的节点, 则进入completeWork阶段, 传入的是当前unitOfWork")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("completeUnitOfWork")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("unitOfWork"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    workInProgress "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" next"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("可以明显的看出, 整个"),n("code",[t._v("fiber树构造")]),t._v("是一个深度优先遍历(可参考"),n("RouterLink",{attrs:{to:"/react-illustration-series/algorithm/dfs.html"}},[t._v("React 算法之深度优先遍历")]),t._v("), 其中有 2 个重要的变量"),n("code",[t._v("workInProgress")]),t._v("和"),n("code",[t._v("current")]),t._v("(可参考前文"),n("RouterLink",{attrs:{to:"/react-illustration-series/main/fibertree-prepare.html#双缓冲技术"}},[t._v("fiber 树构造(基础准备)")]),t._v("中介绍的"),n("code",[t._v("双缓冲技术")]),t._v("):")],1),t._v(" "),n("ul",[n("li",[n("code",[t._v("workInProgress")]),t._v("和"),n("code",[t._v("current")]),t._v("都视为指针")]),t._v(" "),n("li",[n("code",[t._v("workInProgress")]),t._v("指向当前正在构造的"),n("code",[t._v("fiber")]),t._v("节点")]),t._v(" "),n("li",[n("code",[t._v("current = workInProgress.alternate")]),t._v("(即"),n("code",[t._v("fiber.alternate")]),t._v("), 指向当前页面正在使用的"),n("code",[t._v("fiber")]),t._v("节点. 初次构造时, 页面还未渲染, 此时"),n("code",[t._v("current = null")]),t._v(".")])]),t._v(" "),n("p",[t._v("在深度优先遍历中, 每个"),n("code",[t._v("fiber")]),t._v("节点都会经历 2 个阶段:")]),t._v(" "),n("ol",[n("li",[t._v("探寻阶段 "),n("code",[t._v("beginWork")])]),t._v(" "),n("li",[t._v("回溯阶段 "),n("code",[t._v("completeWork")])])]),t._v(" "),n("p",[t._v("这 2 个阶段共同完成了每一个"),n("code",[t._v("fiber")]),t._v("节点的创建, 所有"),n("code",[t._v("fiber")]),t._v("节点则构成了"),n("code",[t._v("fiber树")]),t._v(".")]),t._v(" "),n("h3",{attrs:{id:"探寻阶段-beginwork"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#探寻阶段-beginwork"}},[t._v("#")]),t._v(" 探寻阶段 beginWork")]),t._v(" "),n("p",[n("code",[t._v("beginWork(current, unitOfWork, subtreeRenderLanes)")]),t._v("("),n("a",{attrs:{href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberBeginWork.old.js#L3083-L3494",target:"_blank",rel:"noopener noreferrer"}},[t._v("源码地址"),n("OutboundLink")],1),t._v(")针对所有的 Fiber 类型, 其中的每一个 case 处理一种 Fiber 类型. "),n("code",[t._v("updateXXX")]),t._v("函数(如: "),n("code",[t._v("updateHostRoot")]),t._v(", "),n("code",[t._v("updateClassComponent")]),t._v(" 等)的主要逻辑:")]),t._v(" "),n("ol",[n("li",[t._v("根据 "),n("code",[t._v("ReactElement")]),t._v("对象创建所有的"),n("code",[t._v("fiber")]),t._v("节点, 最终构造出"),n("code",[t._v("fiber树形结构")]),t._v("(设置"),n("code",[t._v("return")]),t._v("和"),n("code",[t._v("sibling")]),t._v("指针)")]),t._v(" "),n("li",[t._v("设置"),n("code",[t._v("fiber.flags")]),t._v("(二进制形式变量, 用来标记 "),n("code",[t._v("fiber")]),t._v("节点 的"),n("code",[t._v("增,删,改")]),t._v("状态, 等待"),n("code",[t._v("completeWork阶段处理")]),t._v(")")]),t._v(" "),n("li",[t._v("设置"),n("code",[t._v("fiber.stateNode")]),t._v("局部状态(如"),n("code",[t._v("Class类型")]),t._v("节点: "),n("code",[t._v("fiber.stateNode=new Class()")]),t._v(")")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("beginWork")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("current"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  workInProgress"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  renderLanes"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Lanes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" updateLanes "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lanes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// update逻辑, 首次render不会进入")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    didReceiveUpdate "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 设置workInProgress优先级为NoLanes(最高优先级)")]),t._v("\n  workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lanes "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" NoLanes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 根据workInProgress节点的类型, 用不同的方法派生出子节点")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tag "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 只保留了本例使用到的case")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" ClassComponent"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Component "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" unresolvedProps "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pendingProps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" resolvedProps "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n        workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("elementType "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" Component\n          "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" unresolvedProps\n          "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolveDefaultProps")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Component"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" unresolvedProps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateClassComponent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        current"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        Component"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        resolvedProps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        renderLanes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" HostRoot"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateHostRoot")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" renderLanes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" HostComponent"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateHostComponent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" renderLanes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" HostText"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateHostText")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" Fragment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateFragment")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" renderLanes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[n("code",[t._v("updateXXX")]),t._v("函数(如: updateHostRoot, updateClassComponent 等)虽然 case 较多, 但是主要逻辑可以概括为 3 个步骤:")]),t._v(" "),n("ol",[n("li",[t._v("根据"),n("code",[t._v("fiber.pendingProps, fiber.updateQueue")]),t._v("等"),n("code",[t._v("输入数据")]),t._v("状态, 计算"),n("code",[t._v("fiber.memoizedState")]),t._v("作为"),n("code",[t._v("输出状态")])]),t._v(" "),n("li",[t._v("获取下级"),n("code",[t._v("ReactElement")]),t._v("对象\n"),n("ol",[n("li",[t._v("class 类型的 "),n("code",[t._v("fiber")]),t._v(" 节点\n"),n("ul",[n("li",[t._v("构建"),n("code",[t._v("React.Component")]),t._v("实例")]),t._v(" "),n("li",[t._v("把新实例挂载到"),n("code",[t._v("fiber.stateNode")]),t._v("上")]),t._v(" "),n("li",[t._v("执行"),n("code",[t._v("render")]),t._v("之前的生命周期函数")]),t._v(" "),n("li",[t._v("执行"),n("code",[t._v("render")]),t._v("方法, 获取下级"),n("code",[t._v("reactElement")])]),t._v(" "),n("li",[t._v("根据实际情况, 设置"),n("code",[t._v("fiber.flags")])])])]),t._v(" "),n("li",[t._v("function 类型的 "),n("code",[t._v("fiber")]),t._v(" 节点\n"),n("ul",[n("li",[t._v("执行 function, 获取下级"),n("code",[t._v("reactElement")])]),t._v(" "),n("li",[t._v("根据实际情况, 设置"),n("code",[t._v("fiber.flags")])])])]),t._v(" "),n("li",[t._v("HostComponent 类型(如: "),n("code",[t._v("div, span, button")]),t._v(" 等)的 "),n("code",[t._v("fiber")]),t._v(" 节点\n"),n("ul",[n("li",[n("code",[t._v("pendingProps.children")]),t._v("作为下级"),n("code",[t._v("reactElement")])]),t._v(" "),n("li",[t._v("如果下级节点是文本节点,则设置下级节点为 null. 准备进入"),n("code",[t._v("completeUnitOfWork")]),t._v("阶段")]),t._v(" "),n("li",[t._v("根据实际情况, 设置"),n("code",[t._v("fiber.flags")])])])]),t._v(" "),n("li",[t._v("其他类型...")])])]),t._v(" "),n("li",[t._v("根据"),n("code",[t._v("ReactElement")]),t._v("对象, 调用"),n("code",[t._v("reconcilerChildren")]),t._v("生成"),n("code",[t._v("Fiber")]),t._v("子节点(只生成"),n("code",[t._v("次级子节点")]),t._v(")\n"),n("ul",[n("li",[t._v("根据实际情况, 设置"),n("code",[t._v("fiber.flags")])])])])]),t._v(" "),n("p",[t._v("不同的"),n("code",[t._v("updateXXX")]),t._v("函数处理的"),n("code",[t._v("fiber")]),t._v("节点类型不同, 总的目的是为了向下生成子节点. 在这个过程中把一些需要持久化的数据挂载到"),n("code",[t._v("fiber")]),t._v("节点上(如"),n("code",[t._v("fiber.stateNode")]),t._v(","),n("code",[t._v("fiber.memoizedState")]),t._v("等); 把"),n("code",[t._v("fiber")]),t._v("节点的特殊操作设置到"),n("code",[t._v("fiber.flags")]),t._v("(如:"),n("code",[t._v("节点ref")]),t._v(","),n("code",[t._v("class组件的生命周期")]),t._v(","),n("code",[t._v("function组件的hook")]),t._v(","),n("code",[t._v("节点删除")]),t._v("等).")]),t._v(" "),n("p",[t._v("这里列出"),n("code",[t._v("updateHostRoot")]),t._v(", "),n("code",[t._v("updateHostComponent")]),t._v("的代码, 对于其他常用 case 的分析(如"),n("code",[t._v("class")]),t._v("类型, "),n("code",[t._v("function")]),t._v("类型), 在"),n("code",[t._v("状态组件")]),t._v("章节中进行探讨.")]),t._v(" "),n("p",[n("code",[t._v("fiber树")]),t._v("的根节点是"),n("code",[t._v("HostRootFiber")]),t._v("节点, 所以第一次进入"),n("code",[t._v("beginWork")]),t._v("会调用"),n("a",{attrs:{href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberBeginWork.old.js#L1053-L1122",target:"_blank",rel:"noopener noreferrer"}},[t._v("updateHostRoot(current, workInProgress, renderLanes)"),n("OutboundLink")],1)]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 省略与本节无关代码")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateHostRoot")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("current"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" renderLanes")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 状态计算, 更新整合到 workInProgress.memoizedState中来")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" updateQueue "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("updateQueue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" nextProps "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pendingProps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" prevState "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("memoizedState"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" prevChildren "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" prevState "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" prevState"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("element "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("cloneUpdateQueue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 遍历updateQueue.shared.pending, 提取有足够优先级的update对象, 计算出最终的状态 workInProgress.memoizedState")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("processUpdateQueue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nextProps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" renderLanes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" nextState "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("memoizedState"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 获取下级`ReactElement`对象")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" nextChildren "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nextState"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("element"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" root"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" FiberRoot "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stateNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hydrate "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("enterHydrationState")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...服务端渲染相关, 此处省略")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3. 根据`ReactElement`对象, 调用`reconcilerChildren`生成`Fiber`子节点(只生成`次级子节点`)")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("reconcileChildren")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" renderLanes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("child"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("普通 DOM 标签类型的节点(如"),n("code",[t._v("div")]),t._v(","),n("code",[t._v("span")]),t._v(","),n("code",[t._v("p")]),t._v("),会进入"),n("a",{attrs:{href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberBeginWork.old.js#L1124-L1157",target:"_blank",rel:"noopener noreferrer"}},[t._v("updateHostComponent"),n("OutboundLink")],1),t._v(":")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...省略部分无关代码")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateHostComponent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("current"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  workInProgress"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  renderLanes"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Lanes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 状态计算, 由于HostComponent是无状态组件, 所以只需要收集 nextProps即可, 它没有 memoizedState")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" type "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" nextProps "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pendingProps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" prevProps "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" current "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" current"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("memoizedProps "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 获取下级`ReactElement`对象")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" nextChildren "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nextProps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("children"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" isDirectTextChild "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("shouldSetTextContent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nextProps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("isDirectTextChild"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果子节点只有一个文本节点, 不用再创建一个HostText类型的fiber")]),t._v("\n    nextChildren "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prevProps "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("shouldSetTextContent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prevProps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 特殊操作需要设置fiber.flags")]),t._v("\n    workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("flags "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|=")]),t._v(" ContentReset"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 特殊操作需要设置fiber.flags")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("markRef")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3. 根据`ReactElement`对象, 调用`reconcilerChildren`生成`Fiber`子节点(只生成`次级子节点`)")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("reconcileChildren")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" renderLanes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("child"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h3",{attrs:{id:"回溯阶段-completework"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#回溯阶段-completework"}},[t._v("#")]),t._v(" 回溯阶段 completeWork")]),t._v(" "),n("p",[n("code",[t._v("completeUnitOfWork(unitOfWork)")]),t._v("("),n("a",{attrs:{href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberWorkLoop.old.js#L1670-L1802",target:"_blank",rel:"noopener noreferrer"}},[t._v("源码地址"),n("OutboundLink")],1),t._v("), 处理 "),n("code",[t._v("beginWork")]),t._v(" 阶段已经创建出来的 "),n("code",[t._v("fiber")]),t._v(" 节点, 核心逻辑:")]),t._v(" "),n("ol",[n("li",[t._v("调用"),n("code",[t._v("completeWork")]),t._v(" "),n("ul",[n("li",[t._v("给"),n("code",[t._v("fiber")]),t._v("节点(tag=HostComponent, HostText)创建 DOM 实例, 设置"),n("code",[t._v("fiber.stateNode")]),t._v("局部状态(如"),n("code",[t._v("tag=HostComponent, HostText")]),t._v("节点: fiber.stateNode 指向这个 DOM 实例).")]),t._v(" "),n("li",[t._v("为 DOM 节点设置属性, 绑定事件(这里先说明有这个步骤, 详细的事件处理流程, 在"),n("code",[t._v("合成事件原理")]),t._v("中详细说明).")]),t._v(" "),n("li",[t._v("设置"),n("code",[t._v("fiber.flags")]),t._v("标记")])])]),t._v(" "),n("li",[t._v("把当前 "),n("code",[t._v("fiber")]),t._v(" 对象的副作用队列("),n("code",[t._v("firstEffect")]),t._v("和"),n("code",[t._v("lastEffect")]),t._v(")添加到父节点的副作用队列之后, 更新父节点的"),n("code",[t._v("firstEffect")]),t._v("和"),n("code",[t._v("lastEffect")]),t._v("指针.")]),t._v(" "),n("li",[t._v("识别"),n("code",[t._v("beginWork")]),t._v("阶段设置的"),n("code",[t._v("fiber.flags")]),t._v(", 判断当前 "),n("code",[t._v("fiber")]),t._v(" 是否有副作用(增,删,改), 如果有, 需要将当前 "),n("code",[t._v("fiber")]),t._v(" 加入到父节点的"),n("code",[t._v("effects")]),t._v("队列, 等待"),n("code",[t._v("commit")]),t._v("阶段处理.")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("completeUnitOfWork")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("unitOfWork"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" completedWork "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" unitOfWork"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 外层循环控制并移动指针(`workInProgress`,`completedWork`等)")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" current "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" completedWork"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("alternate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" returnFiber "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" completedWork"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("return"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("completedWork"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("flags "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" Incomplete"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" NoFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" next"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 处理Fiber节点, 会调用渲染器(调用react-dom包, 关联Fiber节点和dom对象, 绑定事件等)")]),t._v("\n      next "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("completeWork")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" completedWork"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" subtreeRenderLanes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 处理单个节点")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("next "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果派生出其他的子节点, 则回到`beginWork`阶段进行处理")]),t._v("\n        workInProgress "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" next"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重置子节点的优先级")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("resetChildLanes")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("completedWork"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        returnFiber "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("returnFiber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("flags "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" Incomplete"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" NoFlags\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 收集当前Fiber节点以及其子树的副作用effects")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2.1 把子节点的副作用队列添加到父节点上")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("returnFiber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstEffect "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          returnFiber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstEffect "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" completedWork"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstEffect"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("completedWork"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastEffect "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("returnFiber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastEffect "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            returnFiber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastEffect"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nextEffect "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" completedWork"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstEffect"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n          returnFiber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastEffect "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" completedWork"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastEffect"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2.2 如果当前fiber节点有副作用, 将其添加到子节点的副作用队列之后.")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" flags "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" completedWork"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("flags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("flags "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" PerformedWork"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// PerformedWork是提供给 React DevTools读取的, 所以略过PerformedWork")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("returnFiber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastEffect "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            returnFiber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastEffect"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nextEffect "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" completedWork"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            returnFiber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstEffect "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" completedWork"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n          returnFiber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastEffect "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" completedWork"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 异常处理, 本节不讨论")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" siblingFiber "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" completedWork"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sibling"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("siblingFiber "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果有兄弟节点, 返回之后再次进入`beginWork`阶段")]),t._v("\n      workInProgress "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" siblingFiber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 移动指针, 指向下一个节点")]),t._v("\n    completedWork "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" returnFiber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    workInProgress "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" completedWork"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("completedWork "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 已回溯到根节点, 设置workInProgressRootExitStatus = RootCompleted")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("workInProgressRootExitStatus "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" RootIncomplete"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    workInProgressRootExitStatus "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" RootCompleted"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("接下来分析"),n("code",[t._v("fiber")]),t._v("处理函数"),n("a",{attrs:{href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberCompleteWork.old.js#L645-L1289",target:"_blank",rel:"noopener noreferrer"}},[t._v("completeWork"),n("OutboundLink")],1)]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("completeWork")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("current"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  workInProgress"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  renderLanes"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Lanes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" newProps "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pendingProps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" ClassComponent"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Class类型不做处理")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" HostRoot"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fiberRoot "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stateNode"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" FiberRoot"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fiberRoot"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pendingContext"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        fiberRoot"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("context "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fiberRoot"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pendingContext"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        fiberRoot"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pendingContext "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" current"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("child "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置fiber.flags标记")]),t._v("\n         workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("flags "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|=")]),t._v(" Snapshot"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" HostComponent"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("popHostContext")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" rootContainerInstance "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getRootHostContainer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" type "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stateNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// update逻辑, 初次render不会进入")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" currentHostContext "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getHostContext")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 创建DOM对象")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" instance "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createInstance")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n          type"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          newProps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          rootContainerInstance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          currentHostContext"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 把子树中的DOM对象append到本节点的DOM对象之后")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendAllChildren")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置stateNode属性, 指向DOM对象")]),t._v("\n        workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stateNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3. 设置DOM对象的属性, 绑定事件等")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("finalizeInitialChildren")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            type"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            newProps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            rootContainerInstance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            currentHostContext"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置fiber.flags标记(Update)")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("markUpdate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ref "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置fiber.flags标记(Ref)")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("markRef")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("可以看到在满足条件的时候也会设置"),n("code",[t._v("fiber.flags")]),t._v(", 所以设置"),n("code",[t._v("fiber.flags")]),t._v("并非只在"),n("code",[t._v("beginWork")]),t._v("阶段.")]),t._v(" "),n("h2",{attrs:{id:"过程图解"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#过程图解"}},[t._v("#")]),t._v(" 过程图解")]),t._v(" "),n("p",[t._v("针对本节的示例代码, 将整个"),n("code",[t._v("fiber")]),t._v("树构造过程表示出来:")]),t._v(" "),n("p",[t._v("构造前:")]),t._v(" "),n("p",[t._v("在上文已经说明, 进入循环构造前会调用"),n("code",[t._v("prepareFreshStack")]),t._v("刷新栈帧, 在进入"),n("code",[t._v("fiber树构造")]),t._v("循环之前, 保持这这个初始化状态:")]),t._v(" "),n("p",[n("img",{attrs:{src:"/notes/assets/react-illustration-series/unitofwork0.png",alt:""}})]),t._v(" "),n("p",[n("code",[t._v("performUnitOfWork")]),t._v("第 1 次调用(只执行"),n("code",[t._v("beginWork")]),t._v("):")]),t._v(" "),n("ul",[n("li",[t._v("执行前: "),n("code",[t._v("workInProgress")]),t._v("指针指向"),n("code",[t._v("HostRootFiber.alternate")]),t._v("对象, 此时"),n("code",[t._v("current = workInProgress.alternate")]),t._v("指向"),n("code",[t._v("fiberRoot.current")]),t._v("是非空的(初次构造, 只在根节点时, "),n("code",[t._v("current")]),t._v("非空).")]),t._v(" "),n("li",[t._v("执行过程: 调用"),n("code",[t._v("updateHostRoot")]),t._v(" "),n("ul",[n("li",[t._v("在"),n("code",[t._v("reconcilerChildren")]),t._v("阶段, 向下构造"),n("code",[t._v("次级子节点fiber(<App/>)")]),t._v(", 同时设置子节点("),n("code",[t._v("fiber(<App/>)")]),t._v(")"),n("a",{attrs:{href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactChildFiber.old.js#L376-L378",target:"_blank",rel:"noopener noreferrer"}},[t._v("fiber.flags |= Placement"),n("OutboundLink")],1)])])]),t._v(" "),n("li",[t._v("执行后: 返回下级节点"),n("code",[t._v("fiber(<App/>)")]),t._v(", 移动"),n("code",[t._v("workInProgress")]),t._v("指针指向子节点"),n("code",[t._v("fiber(<App/>)")])])]),t._v(" "),n("p",[n("img",{attrs:{src:"/notes/assets/react-illustration-series/unitofwork1.png",alt:""}})]),t._v(" "),n("p",[n("code",[t._v("performUnitOfWork")]),t._v("第 2 次调用(只执行"),n("code",[t._v("beginWork")]),t._v("):")]),t._v(" "),n("ul",[n("li",[t._v("执行前: "),n("code",[t._v("workInProgress")]),t._v("指针指向"),n("code",[t._v("fiber(<App/>)")]),t._v("节点, 此时"),n("code",[t._v("current = null")])]),t._v(" "),n("li",[t._v("执行过程: 调用"),n("code",[t._v("updateClassComponent")]),t._v(" "),n("ul",[n("li",[t._v("本示例中, class 实例存在生命周期函数"),n("code",[t._v("componentDidMount")]),t._v(", 所以会设置"),n("code",[t._v("fiber(<App/>)")]),t._v("节点"),n("a",{attrs:{href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberClassComponent.old.js#L892-L894",target:"_blank",rel:"noopener noreferrer"}},[t._v("workInProgress.flags |= Update"),n("OutboundLink")],1)]),t._v(" "),n("li",[t._v("另外也会为了"),n("code",[t._v("React DevTools")]),t._v("能够识别状态组件的执行进度, 会设置"),n("a",{attrs:{href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberBeginWork.old.js#L379",target:"_blank",rel:"noopener noreferrer"}},[t._v("workInProgress.flags |= PerformedWork"),n("OutboundLink")],1),t._v("(在"),n("code",[t._v("commit")]),t._v("阶段会排除这个"),n("code",[t._v("flag")]),t._v(", 此处只是列出"),n("code",[t._v("workInProgress.flags")]),t._v("的设置场景, 不讨论"),n("code",[t._v("React DevTools")]),t._v(")")]),t._v(" "),n("li",[t._v("需要注意"),n("code",[t._v("classInstance.render()")]),t._v("在本步骤执行后, 虽然返回了"),n("code",[t._v("render")]),t._v("方法中所有的"),n("code",[t._v("ReactElement")]),t._v("对象, 但是随后"),n("code",[t._v("reconcilerChildren")]),t._v("只构造"),n("code",[t._v("次级子节点")])]),t._v(" "),n("li",[t._v("在"),n("code",[t._v("reconcilerChildren")]),t._v("阶段, 向下构造"),n("code",[t._v("次级子节点div")])])])]),t._v(" "),n("li",[t._v("执行后: 返回下级节点"),n("code",[t._v("fiber(div)")]),t._v(", 移动"),n("code",[t._v("workInProgress")]),t._v("指针指向子节点"),n("code",[t._v("fiber(div)")])])]),t._v(" "),n("p",[n("img",{attrs:{src:"/notes/assets/react-illustration-series/unitofwork2.png",alt:""}})]),t._v(" "),n("p",[n("code",[t._v("performUnitOfWork")]),t._v("第 3 次调用(只执行"),n("code",[t._v("beginWork")]),t._v("):")]),t._v(" "),n("ul",[n("li",[t._v("执行前: "),n("code",[t._v("workInProgress")]),t._v("指针指向"),n("code",[t._v("fiber(div)")]),t._v("节点, 此时"),n("code",[t._v("current = null")])]),t._v(" "),n("li",[t._v("执行过程: 调用"),n("code",[t._v("updateHostComponent")]),t._v(" "),n("ul",[n("li",[t._v("在"),n("code",[t._v("reconcilerChildren")]),t._v("阶段, 向下构造"),n("code",[t._v("次级子节点")]),t._v("(本示例中, "),n("code",[t._v("div")]),t._v("有 2 个次级子节点)")])])]),t._v(" "),n("li",[t._v("执行后: 返回下级节点"),n("code",[t._v("fiber(header)")]),t._v(", 移动"),n("code",[t._v("workInProgress")]),t._v("指针指向子节点"),n("code",[t._v("fiber(header)")])])]),t._v(" "),n("p",[n("img",{attrs:{src:"/notes/assets/react-illustration-series/unitofwork3.png",alt:""}})]),t._v(" "),n("p",[n("code",[t._v("performUnitOfWork")]),t._v("第 4 次调用(执行"),n("code",[t._v("beginWork")]),t._v("和"),n("code",[t._v("completeUnitOfWork")]),t._v("):")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("beginWork")]),t._v("执行前: "),n("code",[t._v("workInProgress")]),t._v("指针指向"),n("code",[t._v("fiber(header)")]),t._v("节点, 此时"),n("code",[t._v("current = null")])]),t._v(" "),n("li",[n("code",[t._v("beginWork")]),t._v("执行过程: 调用"),n("code",[t._v("updateHostComponent")]),t._v(" "),n("ul",[n("li",[t._v("本示例中"),n("code",[t._v("header")]),t._v("的子节点是一个"),n("a",{attrs:{href:"https://github.com/facebook/react/blob/8e5adfbd7e605bda9c5e96c10e015b3dc0df688e/packages/react-dom/src/client/ReactDOMHostConfig.js#L350-L361",target:"_blank",rel:"noopener noreferrer"}},[t._v("直接文本节点"),n("OutboundLink")],1),t._v(",设置"),n("a",{attrs:{href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberBeginWork.old.js#L1147",target:"_blank",rel:"noopener noreferrer"}},[t._v("nextChildren = null"),n("OutboundLink")],1),t._v("(直接文本节点并不会被当成具体的"),n("code",[t._v("fiber")]),t._v("节点进行处理, 而是在宿主环境(父组件)中通过属性进行设置. 所以无需创建"),n("code",[t._v("HostText")]),t._v("类型的fiber节点, 同时节省了向下遍历开销.).")]),t._v(" "),n("li",[t._v("由于"),n("code",[t._v("nextChildren = null")]),t._v(", 经过"),n("code",[t._v("reconcilerChildren")]),t._v("阶段处理后, 返回值也是"),n("code",[t._v("null")])])])]),t._v(" "),n("li",[n("code",[t._v("beginWork")]),t._v("执行后: 由于下级节点为"),n("code",[t._v("null")]),t._v(", 所以进入"),n("code",[t._v("completeUnitOfWork(unitOfWork)")]),t._v("函数, 传入的参数"),n("code",[t._v("unitOfWork")]),t._v("实际上就是"),n("code",[t._v("workInProgress")]),t._v("(此时指向"),n("code",[t._v("fiber(header)")]),t._v("节点)")])]),t._v(" "),n("p",[n("img",{attrs:{src:"/notes/assets/react-illustration-series/unitofwork4.1.png",alt:""}})]),t._v(" "),n("ul",[n("li",[n("code",[t._v("completeUnitOfWork")]),t._v("执行前: "),n("code",[t._v("workInProgress")]),t._v("指针指向"),n("code",[t._v("fiber(header)")]),t._v("节点")]),t._v(" "),n("li",[n("code",[t._v("completeUnitOfWork")]),t._v("执行过程: 以"),n("code",[t._v("fiber(header)")]),t._v("为起点, 向上回溯")])]),t._v(" "),n("p",[t._v("第 1 次循环:")]),t._v(" "),n("ol",[n("li",[t._v("执行"),n("code",[t._v("completeWork")]),t._v("函数\n"),n("ul",[n("li",[t._v("创建"),n("code",[t._v("fiber(header)")]),t._v("节点对应的"),n("code",[t._v("DOM")]),t._v("实例, 并"),n("code",[t._v("append")]),t._v("子节点的"),n("code",[t._v("DOM")]),t._v("实例")]),t._v(" "),n("li",[t._v("设置"),n("code",[t._v("DOM")]),t._v("属性, 绑定事件等(本示例中, 节点"),n("code",[t._v("fiber(header)")]),t._v("没有事件绑定)")])])]),t._v(" "),n("li",[t._v("上移副作用队列: 由于本节点"),n("code",[t._v("fiber(header)")]),t._v("没有副作用("),n("code",[t._v("fiber.flags = 0")]),t._v("), 所以执行之后副作用队列没有实质变化(目前为空).")]),t._v(" "),n("li",[t._v("向上回溯: 由于还有兄弟节点, 把"),n("code",[t._v("workInProgress")]),t._v("指针指向下一个兄弟节点"),n("code",[t._v("fiber(<Content/>)")]),t._v(", 退出"),n("code",[t._v("completeUnitOfWork")]),t._v(".")])]),t._v(" "),n("p",[n("img",{attrs:{src:"/notes/assets/react-illustration-series/unitofwork4.2.png",alt:""}})]),t._v(" "),n("p",[n("code",[t._v("performUnitOfWork")]),t._v("第 5 次调用(执行"),n("code",[t._v("beginWork")]),t._v("):")]),t._v(" "),n("ul",[n("li",[t._v("执行前:"),n("code",[t._v("workInProgress")]),t._v("指针指向"),n("code",[t._v("fiber(<Content/>)")]),t._v("节点.")]),t._v(" "),n("li",[t._v("执行过程: 这是一个"),n("code",[t._v("class")]),t._v("类型的节点, 与第 2 次调用逻辑一致.")]),t._v(" "),n("li",[t._v("执行后: 返回下级节点"),n("code",[t._v("fiber(p)")]),t._v(", 移动"),n("code",[t._v("workInProgress")]),t._v("指针指向子节点"),n("code",[t._v("fiber(p)")])])]),t._v(" "),n("p",[n("img",{attrs:{src:"/notes/assets/react-illustration-series/unitofwork5.png",alt:""}})]),t._v(" "),n("p",[n("code",[t._v("performUnitOfWork")]),t._v("第 6 次调用(执行"),n("code",[t._v("beginWork")]),t._v("和"),n("code",[t._v("completeUnitOfWork")]),t._v("):与第 4 次调用中创建"),n("code",[t._v("fiber(header)")]),t._v("节点的逻辑一致. 先后会执行"),n("code",[t._v("beginWork")]),t._v("和"),n("code",[t._v("completeUnitOfWork")]),t._v(", 最后构造 DOM 实例, 并将把"),n("code",[t._v("workInProgress")]),t._v("指针指向下一个兄弟节点"),n("code",[t._v("fiber(p)")]),t._v(".")]),t._v(" "),n("p",[n("img",{attrs:{src:"/notes/assets/react-illustration-series/unitofwork6.png",alt:""}})]),t._v(" "),n("p",[n("code",[t._v("performUnitOfWork")]),t._v("第 7 次调用(执行"),n("code",[t._v("beginWork")]),t._v("和"),n("code",[t._v("completeUnitOfWork")]),t._v("):")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("beginWork")]),t._v("执行过程: 与上次调用中创建"),n("code",[t._v("fiber(p)")]),t._v("节点的逻辑一致")]),t._v(" "),n("li",[n("code",[t._v("completeUnitOfWork")]),t._v("执行过程: 以"),n("code",[t._v("fiber(p)")]),t._v("为起点, 向上回溯")])]),t._v(" "),n("p",[t._v("第 1 次循环:")]),t._v(" "),n("ol",[n("li",[t._v("执行"),n("code",[t._v("completeWork")]),t._v("函数: 创建"),n("code",[t._v("fiber(p)")]),t._v("节点对应的"),n("code",[t._v("DOM")]),t._v("实例, 并"),n("code",[t._v("append")]),t._v("子树节点的"),n("code",[t._v("DOM")]),t._v("实例")]),t._v(" "),n("li",[t._v("上移副作用队列: 由于本节点"),n("code",[t._v("fiber(p)")]),t._v("没有副作用, 所以执行之后副作用队列没有实质变化(目前为空).")]),t._v(" "),n("li",[t._v("向上回溯: 由于没有兄弟节点, 把"),n("code",[t._v("workInProgress")]),t._v("指针指向父节点"),n("code",[t._v("fiber(<Content/>)")])])]),t._v(" "),n("p",[n("img",{attrs:{src:"/notes/assets/react-illustration-series/unitofwork7.png",alt:""}})]),t._v(" "),n("p",[t._v("第 2 次循环:")]),t._v(" "),n("ol",[n("li",[t._v("执行"),n("code",[t._v("completeWork")]),t._v("函数: class 类型的节点不做处理")]),t._v(" "),n("li",[t._v("上移副作用队列:\n"),n("ul",[n("li",[t._v("本节点"),n("code",[t._v("fiber(<Content/>)")]),t._v("的"),n("code",[t._v("flags")]),t._v("标志位有改动("),n("code",[t._v("completedWork.flags > PerformedWork")]),t._v("), 将本节点添加到父节点("),n("code",[t._v("fiber(div)")]),t._v(")的副作用队列之后("),n("code",[t._v("firstEffect")]),t._v("和"),n("code",[t._v("lastEffect")]),t._v("属性分别指向副作用队列的首部和尾部).")])])]),t._v(" "),n("li",[t._v("向上回溯: 把"),n("code",[t._v("workInProgress")]),t._v("指针指向父节点"),n("code",[t._v("fiber(div)")])])]),t._v(" "),n("p",[n("img",{attrs:{src:"/notes/assets/react-illustration-series/unitofwork7.1.png",alt:""}})]),t._v(" "),n("p",[t._v("第 3 次循环:")]),t._v(" "),n("ol",[n("li",[t._v("执行"),n("code",[t._v("completeWork")]),t._v("函数: 创建"),n("code",[t._v("fiber(div)")]),t._v("节点对应的"),n("code",[t._v("DOM")]),t._v("实例, 并"),n("code",[t._v("append")]),t._v("子树节点的"),n("code",[t._v("DOM")]),t._v("实例")]),t._v(" "),n("li",[t._v("上移副作用队列:\n"),n("ul",[n("li",[t._v("本节点"),n("code",[t._v("fiber(div)")]),t._v("的副作用队列不为空, 将其拼接到父节点"),n("code",[t._v("fiber<App/>")]),t._v("的副作用队列后面.")])])]),t._v(" "),n("li",[t._v("向上回溯: 把"),n("code",[t._v("workInProgress")]),t._v("指针指向父节点"),n("code",[t._v("fiber(<App/>)")])])]),t._v(" "),n("p",[n("img",{attrs:{src:"/notes/assets/react-illustration-series/unitofwork7.2.png",alt:""}})]),t._v(" "),n("p",[t._v("第 4 次循环:")]),t._v(" "),n("ol",[n("li",[t._v("执行"),n("code",[t._v("completeWork")]),t._v("函数: class 类型的节点不做处理")]),t._v(" "),n("li",[t._v("上移副作用队列:\n"),n("ul",[n("li",[t._v("本节点"),n("code",[t._v("fiber(<App/>)")]),t._v("的副作用队列不为空, 将其拼接到父节点"),n("code",[t._v("fiber(HostRootFiber)")]),t._v("的副作用队列上.")]),t._v(" "),n("li",[t._v("本节点"),n("code",[t._v("fiber(<App/>)")]),t._v("的"),n("code",[t._v("flags")]),t._v("标志位有改动("),n("code",[t._v("completedWork.flags > PerformedWork")]),t._v("), 将本节点添加到父节点"),n("code",[t._v("fiber(HostRootFiber)")]),t._v("的副作用队列之后.")]),t._v(" "),n("li",[t._v("最后队列的顺序是"),n("code",[t._v("子节点在前, 本节点在后")])])])]),t._v(" "),n("li",[t._v("向上回溯: 把"),n("code",[t._v("workInProgress")]),t._v("指针指向父节点"),n("code",[t._v("fiber(HostRootFiber)")])])]),t._v(" "),n("p",[n("img",{attrs:{src:"/notes/assets/react-illustration-series/unitofwork7.3.png",alt:""}})]),t._v(" "),n("p",[t._v("第 5 次循环:")]),t._v(" "),n("ol",[n("li",[t._v("执行"),n("code",[t._v("completeWork")]),t._v("函数: 对于"),n("code",[t._v("HostRoot")]),t._v("类型的节点, 初次构造时设置"),n("a",{attrs:{href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberCompleteWork.old.js#L693",target:"_blank",rel:"noopener noreferrer"}},[t._v("workInProgress.flags |= Snapshot"),n("OutboundLink")],1)]),t._v(" "),n("li",[t._v("向上回溯: 由于父节点为空, 无需进入处理副作用队列的逻辑. 最后设置"),n("code",[t._v("workInProgress=null")]),t._v(", 并退出"),n("code",[t._v("completeUnitOfWork")])])]),t._v(" "),n("p",[n("img",{attrs:{src:"/notes/assets/react-illustration-series/unitofwork7.4.png",alt:""}})]),t._v(" "),n("p",[t._v("到此整个"),n("code",[t._v("fiber树构造循环")]),t._v("已经执行完毕, 拥有一棵完整的"),n("code",[t._v("fiber树")]),t._v(", 并且在"),n("code",[t._v("fiber树")]),t._v("的根节点上挂载了副作用队列, 副作用队列的顺序是层级越深子节点越靠前.")]),t._v(" "),n("p",[n("code",[t._v("renderRootSync")]),t._v("函数退出之前, 会重置"),n("code",[t._v("workInProgressRoot = null")]),t._v(", 表明没有正在进行中的"),n("code",[t._v("render")]),t._v(". 且把最新的"),n("code",[t._v("fiber树")]),t._v("挂载到"),n("code",[t._v("fiberRoot.finishedWork")]),t._v("上. 这时整个 fiber 树的内存结构如下(注意"),n("code",[t._v("fiberRoot.finishedWork")]),t._v("和"),n("code",[t._v("fiberRoot.current")]),t._v("指针,在"),n("code",[t._v("commitRoot")]),t._v("阶段会进行处理):")]),t._v(" "),n("p",[n("img",{attrs:{src:"/notes/assets/react-illustration-series/fibertree-beforecommit.png",alt:""}})]),t._v(" "),n("h2",{attrs:{id:"总结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),n("p",[t._v("本节演示了初次创建"),n("code",[t._v("fiber树")]),t._v("的全部过程, 跟踪了创建过程中内存引用的变化情况. "),n("code",[t._v("fiber树构造循环")]),t._v("负责构造新的"),n("code",[t._v("fiber")]),t._v("树, 构造过程中同时标记"),n("code",[t._v("fiber.flags")]),t._v(", 最终把所有被标记的"),n("code",[t._v("fiber")]),t._v("节点收集到一个副作用队列中, 这个副作用队列被挂载到根节点上("),n("code",[t._v("HostRootFiber.alternate.firstEffect")]),t._v("). 此时的"),n("code",[t._v("fiber树")]),t._v("和与之对应的"),n("code",[t._v("DOM节点")]),t._v("都还在内存当中, 等待"),n("code",[t._v("commitRoot")]),t._v("阶段进行渲染.")])])}),[],!1,null,null,null);s.default=e.exports}}]);