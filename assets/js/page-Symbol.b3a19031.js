(window.webpackJsonp=window.webpackJsonp||[]).push([[270],{898:function(t,e,a){"use strict";a.r(e);var s=a(1),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"symbol"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#symbol"}},[t._v("#")]),t._v(" Symbol")]),t._v(" "),a("p",[a("strong",[t._v("symbol")]),t._v(" 是一种基本数据类型 （"),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Glossary/Primitive",target:"_blank",rel:"noopener noreferrer"}},[t._v("primitive data type"),a("OutboundLink")],1),t._v("）。"),a("code",[t._v("Symbol()")]),t._v("函数会返回"),a("strong",[t._v("symbol类型")]),t._v('的值，该类型具有静态属性和静态方法。它的静态属性会暴露几个内建的成员对象；它的静态方法会暴露全局的symbol注册，且类似于内建对象类，但作为构造函数来说它并不完整，因为它不支持语法："'),a("code",[t._v("new Symbol()")]),t._v('"。')]),t._v(" "),a("p",[t._v("每个从"),a("code",[t._v("Symbol()")]),t._v("返回的symbol值都是唯一的。一个symbol值能作为对象属性的标识符；这是该数据类型仅有的目的")]),t._v(" "),a("blockquote",[a("p",[t._v("示例代码")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" symbol1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" symbol2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" symbol3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" symbol1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// expected output: "symbol"')]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("symbol2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// expected output: false")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("symbol3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// expected output: "Symbol(foo)"')]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// expected output: false")]),t._v("\n")])])]),a("h2",{attrs:{id:"语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[t._v("#")]),t._v(" 语法")]),t._v(" "),a("blockquote",[a("p",[t._v("Symbol([description])")])]),t._v(" "),a("p",[a("strong",[t._v("参数")])]),t._v(" "),a("p",[a("strong",[t._v("description 可选")])]),t._v(" "),a("p",[t._v("可选的，字符串类型。对symbol的描述，可用于调试但不是访问symbol本身。")]),t._v(" "),a("h2",{attrs:{id:"描述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#描述"}},[t._v("#")]),t._v(" 描述")]),t._v(" "),a("p",[t._v("直接使用"),a("code",[t._v("Symbol()")]),t._v("创建新的symbol类型，并用一个可选的字符串作为其描述。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" sym1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" sym2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" sym3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("上面的代码创建了三个新的symbol类型。 注意，"),a("code",[t._v('Symbol("foo")')]),t._v(" 不会强制将字符串 “foo” 转换成symbol类型。它每次都会创建一个新的 symbol类型：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])])]),a("p",[t._v("下面带有 "),a("code",[t._v("new")]),t._v(" 运算符的语法将抛出 "),a("code",[t._v("TypeError")]),t._v(" 错误：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" sym "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TypeError")]),t._v("\n")])])]),a("p",[t._v("这会阻止创建一个显式的 "),a("code",[t._v("Symbol")]),t._v(" 包装器对象而不是一个 "),a("code",[t._v("Symbol")]),t._v(" 值。围绕原始数据类型创建一个显式包装器对象从 "),a("code",[t._v("ECMAScript 6")]),t._v(" 开始不再被支持。 然而，现有的原始包装器对象，如 "),a("code",[t._v("new Boolean")]),t._v("、"),a("code",[t._v("new String")]),t._v("以及"),a("code",[t._v("new Number")]),t._v("，因为遗留原因仍可被创建。")]),t._v(" "),a("p",[t._v("创建一个 "),a("code",[t._v("Symbol 包装器对象 (Symbol wrapper object)")]),t._v("，你可以使用 "),a("code",[t._v("Object()")]),t._v(" 函数：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" sym "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" sym"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "symbol"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" symObj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sym"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" symObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "object"')]),t._v("\n")])])]),a("h2",{attrs:{id:"全局共享的-symbol"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全局共享的-symbol"}},[t._v("#")]),t._v(" 全局共享的 "),a("code",[t._v("Symbol")])]),t._v(" "),a("p",[t._v("上面使用"),a("code",[t._v("Symbol()")]),t._v(" 函数的语法，不会在你的整个代码库中创建一个可用的全局的"),a("code",[t._v("symbol")]),t._v("类型。 要创建跨文件可用的"),a("code",[t._v("symbol")]),t._v("，甚至跨域（每个都有它自己的全局作用域） , 使用 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/for",target:"_blank",rel:"noopener noreferrer"}},[t._v("Symbol.for()"),a("OutboundLink")],1),t._v(" 方法和  "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/keyFor",target:"_blank",rel:"noopener noreferrer"}},[t._v("Symbol.keyFor()"),a("OutboundLink")],1),t._v(" 方法从全局的"),a("code",[t._v("symbol")]),t._v("注册表设置和取得"),a("code",[t._v("symbol")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"在对象中查找-symbol-属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在对象中查找-symbol-属性"}},[t._v("#")]),t._v(" 在对象中查找 "),a("code",[t._v("Symbol")]),t._v(" 属性")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertySymbols",target:"_blank",rel:"noopener noreferrer"}},[t._v("Object.getOwnPropertySymbols()"),a("OutboundLink")],1),t._v(" 方法让你在查找一个给定对象的符号属性时返回一个symbol类型的数组。"),a("code",[t._v("注意，每个初始化的对象都是没有自己的symbol属性的，因此这个数组可能为空，除非你已经在对象上设置了symbol属性。")])]),t._v(" "),a("h2",{attrs:{id:"属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#属性"}},[t._v("#")]),t._v(" 属性")]),t._v(" "),a("p",[a("code",[t._v("Symbol.length")])]),t._v(" "),a("p",[t._v("长度属性，值为0。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/conflicting/Web/JavaScript/Reference/Global_Objects/Symbol",target:"_blank",rel:"noopener noreferrer"}},[t._v("Symbol.prototype"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("code",[t._v("symbol")]),t._v("构造函数的原型。")]),t._v(" "),a("h1",{attrs:{id:"内置的-symbols"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内置的-symbols"}},[t._v("#")]),t._v(" 内置的 symbols")]),t._v(" "),a("p",[t._v("JavaScript还内建了一些在ECMAScript 5 之前没有暴露给开发者的symbol，它们代表了内部语言行为")]),t._v(" "),a("h2",{attrs:{id:"迭代-symbols"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#迭代-symbols"}},[t._v("#")]),t._v(" 迭代 symbols")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/iterator",target:"_blank",rel:"noopener noreferrer"}},[t._v("Symbol.iterator"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("一个返回一个对象默认迭代器的方法。被 "),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...of",target:"_blank",rel:"noopener noreferrer"}},[t._v("for...of"),a("OutboundLink")],1),t._v(" 使用。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/asyncIterator",target:"_blank",rel:"noopener noreferrer"}},[t._v("Symbol.asyncIterator"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("一个返回对象默认的异步迭代器的方法。被 "),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for-await...of",target:"_blank",rel:"noopener noreferrer"}},[t._v("for await of"),a("OutboundLink")],1),t._v(" 使用。")]),t._v(" "),a("h2",{attrs:{id:"正则表达式-symbols"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式-symbols"}},[t._v("#")]),t._v(" 正则表达式 symbols")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/match",target:"_blank",rel:"noopener noreferrer"}},[t._v("Symbol.match"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("一个用于对字符串进行匹配的方法，也用于确定一个对象是否可以作为正则表达式使用。被 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/match",target:"_blank",rel:"noopener noreferrer"}},[t._v("String.prototype.match()"),a("OutboundLink")],1),t._v(" 使用。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/replace",target:"_blank",rel:"noopener noreferrer"}},[t._v("Symbol.replace"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("一个替换匹配字符串的子串的方法. 被 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/replace",target:"_blank",rel:"noopener noreferrer"}},[t._v("String.prototype.replace()"),a("OutboundLink")],1),t._v(" 使用。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/search",target:"_blank",rel:"noopener noreferrer"}},[t._v("Symbol.search"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("一个返回一个字符串中与正则表达式相匹配的索引的方法。被"),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/search",target:"_blank",rel:"noopener noreferrer"}},[t._v("String.prototype.search()"),a("OutboundLink")],1),t._v(" 使用。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/split",target:"_blank",rel:"noopener noreferrer"}},[t._v("Symbol.split"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("一个在匹配正则表达式的索引处拆分一个字符串的方法.。被 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/split",target:"_blank",rel:"noopener noreferrer"}},[t._v("String.prototype.split()"),a("OutboundLink")],1),t._v(" 使用。")]),t._v(" "),a("h2",{attrs:{id:"其他-symbols"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他-symbols"}},[t._v("#")]),t._v(" 其他 symbols")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/hasInstance",target:"_blank",rel:"noopener noreferrer"}},[t._v("Symbol.hasInstance"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("一个确定一个构造器对象识别的对象是否为它的实例的方法。被 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/instanceof",target:"_blank",rel:"noopener noreferrer"}},[t._v("instanceof"),a("OutboundLink")],1),t._v(" 使用。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/isConcatSpreadable",target:"_blank",rel:"noopener noreferrer"}},[t._v("Symbol.isConcatSpreadable"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("一个布尔值，表明一个对象是否应该flattened为它的数组元素。被 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/concat",target:"_blank",rel:"noopener noreferrer"}},[t._v("Array.prototype.concat()"),a("OutboundLink")],1),t._v(" 使用。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/unscopables",target:"_blank",rel:"noopener noreferrer"}},[t._v("Symbol.unscopables"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("拥有和继承属性名的一个对象的值被排除在与环境绑定的相关对象外。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/species",target:"_blank",rel:"noopener noreferrer"}},[t._v("Symbol.species"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("一个用于创建派生对象的构造器函数。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toPrimitive",target:"_blank",rel:"noopener noreferrer"}},[t._v("Symbol.toPrimitive"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("一个将对象转化为基本数据类型的方法。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toStringTag",target:"_blank",rel:"noopener noreferrer"}},[t._v("Symbol.toStringTag"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("用于对象的默认描述的字符串值。被 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/toString",target:"_blank",rel:"noopener noreferrer"}},[t._v("Object.prototype.toString()"),a("OutboundLink")],1),t._v(" 使用。")]),t._v(" "),a("h2",{attrs:{id:"方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/for",target:"_blank",rel:"noopener noreferrer"}},[t._v("Symbol.for(key)"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("使用给定的key搜索现有的symbol，如果找到则返回该symbol。否则将使用给定的key在全局symbol注册表中创建一个新的symbol。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/keyFor",target:"_blank",rel:"noopener noreferrer"}},[t._v("Symbol.keyFor(sym)"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("从全局symbol注册表中，为给定的symbol检索一个共享的?symbol key。")]),t._v(" "),a("h1",{attrs:{id:"symbol-原型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#symbol-原型"}},[t._v("#")]),t._v(" Symbol 原型")]),t._v(" "),a("p",[t._v("所有 Symbols 继承自 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/conflicting/Web/JavaScript/Reference/Global_Objects/Symbol",target:"_blank",rel:"noopener noreferrer"}},[t._v("Symbol.prototype"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"属性-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#属性-2"}},[t._v("#")]),t._v(" 属性")]),t._v(" "),a("p",[a("code",[t._v("Symbol.prototype.constructor")])]),t._v(" "),a("p",[t._v("返回创建实例原型的函数. 默认为 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol",target:"_blank",rel:"noopener noreferrer"}},[t._v("Symbol"),a("OutboundLink")],1),t._v(" 函数。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/description",target:"_blank",rel:"noopener noreferrer"}},[t._v("Symbol.prototype.description"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("一个包含symbol描述的只读字符串。")]),t._v(" "),a("h2",{attrs:{id:"方法-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法-2"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toSource",target:"_blank",rel:"noopener noreferrer"}},[t._v("Symbol.prototype.toSource()"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("返回包含"),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol",target:"_blank",rel:"noopener noreferrer"}},[t._v("Symbol"),a("OutboundLink")],1),t._v(" 对象源码的字符串。覆盖"),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/toSource",target:"_blank",rel:"noopener noreferrer"}},[t._v("Object.prototype.toSource()"),a("OutboundLink")],1),t._v(" 方法。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toString",target:"_blank",rel:"noopener noreferrer"}},[t._v("Symbol.prototype.toString()"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("返回包含Symbol描述符的字符串。 覆盖"),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/toString",target:"_blank",rel:"noopener noreferrer"}},[t._v("Object.prototype.toString()"),a("OutboundLink")],1),t._v(" 方法。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/valueOf",target:"_blank",rel:"noopener noreferrer"}},[t._v("Symbol.prototype.valueOf()"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("返回 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol",target:"_blank",rel:"noopener noreferrer"}},[t._v("Symbol"),a("OutboundLink")],1),t._v(" 对象的初始值.。覆盖 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf",target:"_blank",rel:"noopener noreferrer"}},[t._v("Object.prototype.valueOf()"),a("OutboundLink")],1),t._v(" 方法。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/@@toPrimitive",target:"_blank",rel:"noopener noreferrer"}},[t._v("Symbol.prototype[@@toPrimitive]"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("返回"),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol",target:"_blank",rel:"noopener noreferrer"}},[t._v("Symbol"),a("OutboundLink")],1),t._v("对象的初始值。")]),t._v(" "),a("h1",{attrs:{id:"示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),a("h2",{attrs:{id:"对-symbol-使用-typeof-运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对-symbol-使用-typeof-运算符"}},[t._v("#")]),t._v(" 对 symbol 使用 typeof 运算符")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/typeof",target:"_blank",rel:"noopener noreferrer"}},[t._v("typeof"),a("OutboundLink")],1),t._v("运算符能帮助你识别 symbol 类型")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'symbol'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'symbol'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" Symbol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("iterator "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'symbol'")]),t._v("\n")])])]),a("h2",{attrs:{id:"symbol-类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#symbol-类型转换"}},[t._v("#")]),t._v(" Symbol 类型转换")]),t._v(" "),a("p",[t._v("当使用 symbol 值进行类型转换时需要注意一些事情：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("尝试将一个 symbol 值转换为一个 number 值时，会抛出一个 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/TypeError",target:"_blank",rel:"noopener noreferrer"}},[t._v("TypeError"),a("OutboundLink")],1),t._v(" 错误  (e.g. "),a("code",[t._v("+sym")]),t._v(" or "),a("code",[t._v("sym | 0")]),t._v(").")])]),t._v(" "),a("li",[a("p",[t._v("使用宽松相等时， "),a("code",[t._v("Object(sym) == sym")]),t._v(" returns "),a("code",[t._v("true")]),t._v(".")])]),t._v(" "),a("li",[a("p",[t._v("这会阻止你从一个 symbol 值隐式地创建一个新的 string 类型的属性名。例如，"),a("code",[t._v('Symbol("foo") + "bar" 将抛出一个')]),t._v(" "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/TypeError",target:"_blank",rel:"noopener noreferrer"}},[t._v("TypeError"),a("OutboundLink")],1),t._v(" (can't convert symbol to string).")])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String#String_conversion",target:"_blank",rel:"noopener noreferrer"}},[t._v('"safer" String(sym) conversion'),a("OutboundLink")],1),t._v(" 的作用会像symbol类型调用 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toString",target:"_blank",rel:"noopener noreferrer"}},[t._v("Symbol.prototype.toString()"),a("OutboundLink")],1),t._v(" 一样，但是注意 "),a("code",[t._v("new String(sym)")]),t._v(" 将抛出异常。")])])]),t._v(" "),a("h2",{attrs:{id:"symbols-与-for-in-迭代"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#symbols-与-for-in-迭代"}},[t._v("#")]),t._v(" Symbols 与 for...in 迭代")]),t._v(" "),a("p",[t._v("Symbols 在 "),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...in",target:"_blank",rel:"noopener noreferrer"}},[t._v("for...in"),a("OutboundLink")],1),t._v(" 迭代中不可枚举。另外，"),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyNames",target:"_blank",rel:"noopener noreferrer"}},[t._v("Object.getOwnPropertyNames()"),a("OutboundLink")],1),t._v(" 不会返回 symbol 对象的属性，但是你能使用 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertySymbols",target:"_blank",rel:"noopener noreferrer"}},[t._v("Object.getOwnPropertySymbols()"),a("OutboundLink")],1),t._v(" 得到它们。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Symbol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"c"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"c"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("d "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"d"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// logs "c" and "d"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"symbols-与-json-stringify"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#symbols-与-json-stringify"}},[t._v("#")]),t._v(" Symbols 与 JSON.stringify()")]),t._v(" "),a("p",[t._v("当使用 JSON.stringify() 时，以 symbol 值作为键的属性会被完全忽略：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("stringify")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '{}'")]),t._v("\n")])])]),a("h2",{attrs:{id:"symbol-包装器对象作为属性的键"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#symbol-包装器对象作为属性的键"}},[t._v("#")]),t._v(" Symbol 包装器对象作为属性的键")]),t._v(" "),a("p",[t._v("当一个 Symbol 包装器对象作为一个属性的键时，这个对象将被强制转换为它包装过的 symbol 值：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" sym "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("sym"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("sym"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sym"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// still 1")]),t._v("\n")])])]),a("h2",{attrs:{id:"es6-中-symbol-数组的遍历接口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es6-中-symbol-数组的遍历接口"}},[t._v("#")]),t._v(" es6 中 Symbol 数组的遍历接口")]),t._v(" "),a("p",[a("img",{attrs:{src:"/notes/assets/1616482376(1).jpg",alt:"数组默认Symbol.iterator"}})])])}),[],!1,null,null,null);e.default=r.exports}}]);