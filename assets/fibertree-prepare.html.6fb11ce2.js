import{_ as i}from"./plugin-vue_export-helper.21dcd24c.js";import{r as l,o as r,c as u,b as s,d as a,w as p,e as n,a as o}from"./app.5da1017a.js";const d={},k=s("h1",{id:"fiber-\u6811\u6784\u9020-\u57FA\u7840\u51C6\u5907",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#fiber-\u6811\u6784\u9020-\u57FA\u7840\u51C6\u5907","aria-hidden":"true"},"#"),n(" fiber \u6811\u6784\u9020(\u57FA\u7840\u51C6\u5907)")],-1),v=s("p",null,[n("\u5728 React \u8FD0\u884C\u65F6\u4E2D, "),s("code",null,"fiber\u6811\u6784\u9020"),n("\u4F4D\u4E8E"),s("code",null,"react-reconciler"),n("\u5305.")],-1),m=n("\u5728\u6B63\u5F0F\u89E3\u8BFB"),b=s("code",null,"fiber\u6811\u6784\u9020",-1),_=n("\u4E4B\u524D, \u518D\u6B21\u56DE\u987E\u4E00\u4E0B"),h=n("reconciler \u8FD0\u4F5C\u6D41\u7A0B"),f=n("\u7684 4 \u4E2A\u9636\u6BB5:"),y=["src"],g=n("\u8F93\u5165\u9636\u6BB5: \u8854\u63A5"),w=s("code",null,"react-dom",-1),L=n("\u5305, \u627F\u63A5"),R=s("code",null,"fiber\u66F4\u65B0",-1),x=n("\u8BF7\u6C42(\u53EF\u4EE5\u53C2\u8003"),P=n("React \u5E94\u7528\u7684\u542F\u52A8\u8FC7\u7A0B"),C=n(")."),I=n("\u6CE8\u518C\u8C03\u5EA6\u4EFB\u52A1: \u4E0E\u8C03\u5EA6\u4E2D\u5FC3("),N=s("code",null,"scheduler",-1),S=n("\u5305)\u4EA4\u4E92, \u6CE8\u518C\u8C03\u5EA6\u4EFB\u52A1"),j=s("code",null,"task",-1),E=n(", \u7B49\u5F85\u4EFB\u52A1\u56DE\u8C03(\u53EF\u4EE5\u53C2\u8003"),F=n("React \u8C03\u5EA6\u539F\u7406(scheduler)"),T=n(")."),U=s("li",null,[n("\u6267\u884C\u4EFB\u52A1\u56DE\u8C03: \u5728\u5185\u5B58\u4E2D\u6784\u9020\u51FA"),s("code",null,"fiber\u6811"),n("\u548C"),s("code",null,"DOM"),n("\u5BF9\u8C61, \u4E5F\u662F"),s("strong",null,"fiber \u6811\u6784\u9020\u7684\u91CD\u70B9\u5185\u5BB9"),n(".")],-1),W=s("li",null,[n("\u8F93\u51FA: \u4E0E\u6E32\u67D3\u5668("),s("code",null,"react-dom"),n(")\u4EA4\u4E92, \u6E32\u67D3"),s("code",null,"DOM"),n("\u8282\u70B9.")],-1),O=s("p",null,[s("code",null,"fiber\u6811\u6784\u9020"),n("\u5904\u4E8E\u4E0A\u8FF0\u7B2C 3 \u4E2A\u9636\u6BB5, \u53EF\u4EE5\u901A\u8FC7\u4E0D\u540C\u7684\u89C6\u89D2\u6765\u7406\u89E3"),s("code",null,"fiber\u6811\u6784\u9020"),n("\u5728"),s("code",null,"React"),n("\u8FD0\u884C\u65F6\u4E2D\u6240\u5904\u7684\u4F4D\u7F6E:")],-1),D=s("li",null,[n("\u4ECE"),s("code",null,"scheduler"),n("\u8C03\u5EA6\u4E2D\u5FC3\u7684\u89D2\u5EA6\u6765\u770B, \u5B83\u662F\u4EFB\u52A1\u961F\u5217"),s("code",null,"taskQueue"),n("\u4E2D\u7684\u4E00\u4E2A\u5177\u4F53\u7684\u4EFB\u52A1\u56DE\u8C03("),s("code",null,"task.callback"),n(").")],-1),M=n("\u4ECE"),B=n("React \u5DE5\u4F5C\u5FAA\u73AF"),q=n("\u7684\u89D2\u5EA6\u6765\u770B, \u5B83\u5C5E\u4E8E"),H=s("code",null,"fiber\u6811\u6784\u9020\u5FAA\u73AF",-1),A=n("."),Q=o('<p>\u7531\u4E8E<code>fiber \u6811\u6784\u9020</code>\u6E90\u7801\u91CF\u6BD4\u8F83\u5927, \u672C\u7CFB\u5217\u6839\u636E<code>React</code>\u8FD0\u884C\u7684<code>\u5185\u5B58\u72B6\u6001</code>, \u5206\u4E3A 2 \u79CD\u60C5\u51B5\u6765\u8BF4\u660E:</p><ol><li>\u521D\u6B21\u521B\u5EFA: \u5728<code>React</code>\u5E94\u7528\u9996\u6B21\u542F\u52A8\u65F6, \u754C\u9762\u8FD8\u6CA1\u6709\u6E32\u67D3, \u6B64\u65F6\u5E76\u4E0D\u4F1A\u8FDB\u5165\u5BF9\u6BD4\u8FC7\u7A0B, \u76F8\u5F53\u4E8E\u76F4\u63A5\u6784\u9020\u4E00\u68F5\u5168\u65B0\u7684\u6811.</li><li>\u5BF9\u6BD4\u66F4\u65B0: <code>React</code>\u5E94\u7528\u542F\u52A8\u540E, \u754C\u9762\u5DF2\u7ECF\u6E32\u67D3. \u5982\u679C\u518D\u6B21\u53D1\u751F\u66F4\u65B0, \u521B\u5EFA<code>\u65B0fiber</code>\u4E4B\u524D\u9700\u8981\u548C<code>\u65E7fiber</code>\u8FDB\u884C\u5BF9\u6BD4. \u6700\u540E\u6784\u9020\u7684 fiber \u6811\u6709\u53EF\u80FD\u662F\u5168\u65B0\u7684, \u4E5F\u53EF\u80FD\u662F\u90E8\u5206\u66F4\u65B0\u7684.</li></ol><p>\u65E0\u8BBA\u662F<code>\u521D\u6B21\u521B\u5EFA</code>\u8FD8\u662F<code>\u5BF9\u6BD4\u66F4\u65B0</code>, \u57FA\u7840\u6982\u5FF5\u90FD\u662F\u901A\u7528\u7684, \u672C\u8282\u5C06\u4ECB\u7ECD\u8FD9\u4E9B\u57FA\u7840\u77E5\u8BC6, \u4E3A\u6B63\u5F0F\u8FDB\u5165<code>fiber\u6811\u6784\u9020</code>\u505A\u51C6\u5907.</p><h2 id="reactelement-fiber-dom-\u4E09\u8005\u7684\u5173\u7CFB" tabindex="-1"><a class="header-anchor" href="#reactelement-fiber-dom-\u4E09\u8005\u7684\u5173\u7CFB" aria-hidden="true">#</a> ReactElement, Fiber, DOM \u4E09\u8005\u7684\u5173\u7CFB</h2>',4),V=n("\u5728"),$=n("React \u5E94\u7528\u4E2D\u7684\u9AD8\u9891\u5BF9\u8C61"),z=n("\u4E00\u6587\u4E2D, \u5DF2\u7ECF\u4ECB\u7ECD\u4E86"),J=s("code",null,"ReactElement",-1),X=n("\u548C"),G=s("code",null,"Fiber",-1),K=n("\u5BF9\u8C61\u7684\u6570\u636E\u7ED3\u6784. \u8FD9\u91CC\u6211\u4EEC\u68B3\u7406\u51FA"),Y=s("code",null,"ReactElement, Fiber, DOM",-1),Z=n("\u8FD9 3 \u79CD\u5BF9\u8C61\u7684\u5173\u7CFB"),nn={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react/src/ReactElement.js#L126-L146",target:"_blank",rel:"noopener noreferrer"},sn=n("ReactElement \u5BF9\u8C61"),an=n("(type \u5B9A\u4E49\u5728"),en={href:"https://github.com/facebook/react/blob/v17.0.2/packages/shared/ReactElementType.js#L15",target:"_blank",rel:"noopener noreferrer"},on=n("shared \u5305\u4E2D"),tn=n(")"),pn=s("ul",null,[s("li",null,[n("\u6240\u6709\u91C7\u7528"),s("code",null,"jsx"),n("\u8BED\u6CD5\u4E66\u5199\u7684\u8282\u70B9, \u90FD\u4F1A\u88AB\u7F16\u8BD1\u5668\u8F6C\u6362, \u6700\u7EC8\u4F1A\u4EE5"),s("code",null,"React.createElement(...)"),n("\u7684\u65B9\u5F0F, \u521B\u5EFA\u51FA\u6765\u4E00\u4E2A\u4E0E\u4E4B\u5BF9\u5E94\u7684"),s("code",null,"ReactElement"),n("\u5BF9\u8C61")])],-1),cn={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiber.old.js#L116-L155",target:"_blank",rel:"noopener noreferrer"},ln=n("fiber \u5BF9\u8C61"),rn=n("(type \u7C7B\u578B\u7684\u5B9A\u4E49\u5728"),un={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactInternalTypes.js#L47-L174",target:"_blank",rel:"noopener noreferrer"},dn=n("ReactInternalTypes.js"),kn=n("\u4E2D)"),vn=o("<ul><li><code>fiber\u5BF9\u8C61</code>\u662F\u901A\u8FC7<code>ReactElement</code>\u5BF9\u8C61\u8FDB\u884C\u521B\u5EFA\u7684, \u591A\u4E2A<code>fiber\u5BF9\u8C61</code>\u6784\u6210\u4E86\u4E00\u68F5<code>fiber\u6811</code>, <code>fiber\u6811</code>\u662F\u6784\u9020<code>DOM\u6811</code>\u7684\u6570\u636E\u6A21\u578B, <code>fiber\u6811</code>\u7684\u4EFB\u4F55\u6539\u52A8, \u6700\u540E\u90FD\u4F53\u73B0\u5230<code>DOM\u6811</code>.</li></ul>",1),mn={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Document_Object_Model",target:"_blank",rel:"noopener noreferrer"},bn=n("DOM \u5BF9\u8C61"),_n=n(": \u6587\u6863\u5BF9\u8C61\u6A21\u578B"),hn=s("ul",null,[s("li",null,[s("code",null,"DOM"),n("\u5C06\u6587\u6863\u89E3\u6790\u4E3A\u4E00\u4E2A\u7531\u8282\u70B9\u548C\u5BF9\u8C61\uFF08\u5305\u542B\u5C5E\u6027\u548C\u65B9\u6CD5\u7684\u5BF9\u8C61\uFF09\u7EC4\u6210\u7684\u7ED3\u6784\u96C6\u5408, \u4E5F\u5C31\u662F\u5E38\u8BF4\u7684"),s("code",null,"DOM\u6811"),n(".")]),s("li",null,[s("code",null,"JavaScript"),n("\u53EF\u4EE5\u8BBF\u95EE\u548C\u64CD\u4F5C\u5B58\u50A8\u5728 DOM \u4E2D\u7684\u5185\u5BB9, \u4E5F\u5C31\u662F\u64CD\u4F5C"),s("code",null,"DOM\u5BF9\u8C61"),n(", \u8FDB\u800C\u89E6\u53D1 UI \u6E32\u67D3.")])],-1),fn=s("p",null,"\u5B83\u4EEC\u4E4B\u95F4\u7684\u5173\u7CFB\u53CD\u6620\u4E86\u6211\u4EEC\u4E66\u5199\u7684 JSX \u4EE3\u7801\u5230 DOM \u8282\u70B9\u7684\u8F6C\u6362\u8FC7\u7A0B:",-1),yn=["src"],gn=o('<p>\u6CE8\u610F:</p><ul><li>\u5F00\u53D1\u4EBA\u5458\u80FD\u591F\u63A7\u5236\u7684\u662F<code>JSX</code>, \u4E5F\u5C31\u662F<code>ReactElement</code>\u5BF9\u8C61.</li><li><code>fiber\u6811</code>\u662F\u901A\u8FC7<code>ReactElement</code>\u751F\u6210\u7684, \u5982\u679C\u8131\u79BB\u4E86<code>ReactElement</code>,<code>fiber\u6811</code>\u4E5F\u65E0\u4ECE\u8C08\u8D77. \u6240\u4EE5\u662F<code>ReactElement</code>\u6811(\u4E0D\u662F\u4E25\u683C\u7684\u6811\u7ED3\u6784, \u4E3A\u4E86\u65B9\u4FBF\u4E5F\u79F0\u4E3A\u6811)\u9A71\u52A8<code>fiber\u6811</code>.</li><li><code>fiber\u6811</code>\u662F<code>DOM\u6811</code>\u7684\u6570\u636E\u6A21\u578B, <code>fiber\u6811</code>\u9A71\u52A8<code>DOM\u6811</code></li></ul><p>\u5F00\u53D1\u4EBA\u5458\u901A\u8FC7\u7F16\u7A0B\u53EA\u80FD\u63A7\u5236<code>ReactElement</code>\u6811\u7684\u7ED3\u6784, <code>ReactElement\u6811</code>\u9A71\u52A8<code>fiber\u6811</code>, <code>fiber\u6811</code>\u518D\u9A71\u52A8<code>DOM\u6811</code>, \u6700\u540E\u5C55\u73B0\u5230\u9875\u9762\u4E0A. \u6240\u4EE5<code>fiber\u6811</code>\u7684\u6784\u9020\u8FC7\u7A0B, \u5B9E\u9645\u4E0A\u5C31\u662F<code>ReactElement</code>\u5BF9\u8C61\u5230<code>fiber</code>\u5BF9\u8C61\u7684\u8F6C\u6362\u8FC7\u7A0B.</p><h2 id="\u5168\u5C40\u53D8\u91CF" tabindex="-1"><a class="header-anchor" href="#\u5168\u5C40\u53D8\u91CF" aria-hidden="true">#</a> \u5168\u5C40\u53D8\u91CF</h2>',4),wn=n("\u4ECE"),Ln=n("React \u5DE5\u4F5C\u5FAA\u73AF"),Rn=n("\u7684\u89D2\u5EA6\u6765\u770B, \u6574\u4E2A\u6784\u9020\u8FC7\u7A0B\u88AB\u5305\u88F9\u5728"),xn=s("code",null,"fiber\u6811\u6784\u9020\u5FAA\u73AF",-1),Pn=n("\u4E2D(\u5BF9\u5E94\u6E90\u7801\u4F4D\u4E8E"),Cn={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberWorkLoop.old.js",target:"_blank",rel:"noopener noreferrer"},In=n("ReactFiberWorkLoop.js"),Nn=n(")."),Sn=n("\u5728"),jn=s("code",null,"React",-1),En=n("\u8FD0\u884C\u65F6, "),Fn=s("code",null,"ReactFiberWorkLoop.js",-1),Tn=n("\u95ED\u5305\u4E2D\u7684"),Un=s("code",null,"\u5168\u5C40\u53D8\u91CF",-1),Wn=n("\u4F1A\u968F\u7740"),On=s("code",null,"fiber\u6811\u6784\u9020\u5FAA\u73AF",-1),Dn=n("\u7684\u8FDB\u884C\u800C\u53D8\u5316, \u73B0\u5728\u67E5\u770B\u5176\u4E2D\u91CD\u8981\u7684\u5168\u5C40\u53D8\u91CF("),Mn={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberWorkLoop.old.js#L247-L367",target:"_blank",rel:"noopener noreferrer"},Bn=n("\u6E90\u7801\u94FE\u63A5"),qn=n("):"),Hn=o(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5F53\u524DReact\u7684\u6267\u884C\u6808(\u6267\u884C\u4E0A\u4E0B\u6587)</span>
<span class="token keyword">let</span> <span class="token literal-property property">executionContext</span><span class="token operator">:</span> ExecutionContext <span class="token operator">=</span> NoContext<span class="token punctuation">;</span>

<span class="token comment">// \u5F53\u524Droot\u8282\u70B9</span>
<span class="token keyword">let</span> <span class="token literal-property property">workInProgressRoot</span><span class="token operator">:</span> FiberRoot <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token comment">// \u6B63\u5728\u5904\u7406\u4E2D\u7684fiber\u8282\u70B9</span>
<span class="token keyword">let</span> <span class="token literal-property property">workInProgress</span><span class="token operator">:</span> Fiber <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token comment">// \u6B63\u5728\u6E32\u67D3\u7684\u8F66\u9053(\u590D\u6570)</span>
<span class="token keyword">let</span> <span class="token literal-property property">workInProgressRootRenderLanes</span><span class="token operator">:</span> Lanes <span class="token operator">=</span> NoLanes<span class="token punctuation">;</span>

<span class="token comment">// \u5305\u542B\u6240\u6709\u5B50\u8282\u70B9\u7684\u4F18\u5148\u7EA7, \u662FworkInProgressRootRenderLanes\u7684\u8D85\u96C6</span>
<span class="token comment">// \u5927\u591A\u6570\u60C5\u51B5\u4E0B: \u5728\u5DE5\u4F5C\u5FAA\u73AF\u6574\u4F53\u5C42\u9762\u4F1A\u4F7F\u7528workInProgressRootRenderLanes, \u5728begin/complete\u9636\u6BB5\u5C42\u9762\u4F1A\u4F7F\u7528 subtreeRenderLanes</span>
<span class="token keyword">let</span> <span class="token literal-property property">subtreeRenderLanes</span><span class="token operator">:</span> Lanes <span class="token operator">=</span> NoLanes<span class="token punctuation">;</span>
<span class="token comment">// \u4E00\u4E2A\u6808\u7ED3\u6784: \u4E13\u95E8\u5B58\u50A8\u5F53\u524D\u8282\u70B9\u7684 subtreeRenderLanes</span>
<span class="token keyword">const</span> <span class="token literal-property property">subtreeRenderLanesCursor</span><span class="token operator">:</span> StackCursor<span class="token operator">&lt;</span>Lanes<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token function">createCursor</span><span class="token punctuation">(</span>NoLanes<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// fiber\u6784\u9020\u5B8C\u540E, root\u8282\u70B9\u7684\u72B6\u6001: completed, errored, suspended\u7B49</span>
<span class="token keyword">let</span> <span class="token literal-property property">workInProgressRootExitStatus</span><span class="token operator">:</span> RootExitStatus <span class="token operator">=</span> RootIncomplete<span class="token punctuation">;</span>
<span class="token comment">// \u91CD\u5927\u9519\u8BEF</span>
<span class="token keyword">let</span> <span class="token literal-property property">workInProgressRootFatalError</span><span class="token operator">:</span> mixed <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token comment">// \u6574\u4E2Arender\u671F\u95F4\u6240\u4F7F\u7528\u5230\u7684\u6240\u6709lanes</span>
<span class="token keyword">let</span> <span class="token literal-property property">workInProgressRootIncludedLanes</span><span class="token operator">:</span> Lanes <span class="token operator">=</span> NoLanes<span class="token punctuation">;</span>
<span class="token comment">// \u5728render\u671F\u95F4\u88AB\u8DF3\u8FC7(\u7531\u4E8E\u4F18\u5148\u7EA7\u4E0D\u591F)\u7684lanes: \u53EA\u5305\u62EC\u672A\u5904\u7406\u7684updates, \u4E0D\u5305\u62EC\u88AB\u590D\u7528\u7684fiber\u8282\u70B9</span>
<span class="token keyword">let</span> <span class="token literal-property property">workInProgressRootSkippedLanes</span><span class="token operator">:</span> Lanes <span class="token operator">=</span> NoLanes<span class="token punctuation">;</span>
<span class="token comment">// \u5728render\u671F\u95F4\u88AB\u4FEE\u6539\u8FC7\u7684lanes</span>
<span class="token keyword">let</span> <span class="token literal-property property">workInProgressRootUpdatedLanes</span><span class="token operator">:</span> Lanes <span class="token operator">=</span> NoLanes<span class="token punctuation">;</span>

<span class="token comment">// \u9632\u6B62\u65E0\u9650\u5FAA\u73AF\u548C\u5D4C\u5957\u66F4\u65B0</span>
<span class="token keyword">const</span> <span class="token constant">NESTED_UPDATE_LIMIT</span> <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> <span class="token literal-property property">nestedUpdateCount</span><span class="token operator">:</span> number <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> <span class="token literal-property property">rootWithNestedUpdates</span><span class="token operator">:</span> FiberRoot <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token constant">NESTED_PASSIVE_UPDATE_LIMIT</span> <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> <span class="token literal-property property">nestedPassiveUpdateCount</span><span class="token operator">:</span> number <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

<span class="token comment">// \u53D1\u8D77\u66F4\u65B0\u7684\u65F6\u95F4</span>
<span class="token keyword">let</span> <span class="token literal-property property">currentEventTime</span><span class="token operator">:</span> number <span class="token operator">=</span> NoTimestamp<span class="token punctuation">;</span>
<span class="token keyword">let</span> <span class="token literal-property property">currentEventWipLanes</span><span class="token operator">:</span> Lanes <span class="token operator">=</span> NoLanes<span class="token punctuation">;</span>
<span class="token keyword">let</span> <span class="token literal-property property">currentEventPendingLanes</span><span class="token operator">:</span> Lanes <span class="token operator">=</span> NoLanes<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u6E90\u7801\u4E2D, \u5927\u90E8\u5206\u53D8\u91CF\u90FD\u5E26\u6709\u82F1\u6587\u6CE8\u91CA(\u8BFB\u8005\u53EF\u81EA\u884C\u67E5\u9605), \u6B64\u5904\u53EA\u5217\u4E3E\u4E86<code>fiber\u6811\u6784\u9020\u5FAA\u73AF</code>\u4E2D\u6700\u6838\u5FC3\u7684\u53D8\u91CF</p><h3 id="\u6267\u884C\u4E0A\u4E0B\u6587" tabindex="-1"><a class="header-anchor" href="#\u6267\u884C\u4E0A\u4E0B\u6587" aria-hidden="true">#</a> \u6267\u884C\u4E0A\u4E0B\u6587</h3>`,3),An=n("\u5728\u5168\u5C40\u53D8\u91CF\u4E2D\u6709"),Qn=s("code",null,"executionContext",-1),Vn=n(", \u4EE3\u8868"),$n=s("code",null,"\u6E32\u67D3\u671F\u95F4",-1),zn=n("\u7684"),Jn=s("code",null,"\u6267\u884C\u6808",-1),Xn=n("(\u6216\u53EB\u505A"),Gn=s("code",null,"\u6267\u884C\u4E0A\u4E0B\u6587",-1),Kn=n("), \u5B83\u4E5F\u662F\u4E00\u4E2A\u4E8C\u8FDB\u5236\u8868\u793A\u7684\u53D8\u91CF, \u901A\u8FC7\u4F4D\u8FD0\u7B97\u8FDB\u884C\u64CD\u4F5C(\u53C2\u8003"),Yn=n("React \u7B97\u6CD5\u4E4B\u4F4D\u8FD0\u7B97"),Zn=n("). \u5728\u6E90\u7801\u4E2D\u4E00\u5171\u5B9A\u4E49\u4E86 8 \u79CD\u6267\u884C\u6267\u884C\u6808:"),ns=o(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>type ExecutionContext <span class="token operator">=</span> number<span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> NoContext <span class="token operator">=</span> <span class="token comment">/*             */</span> <span class="token number">0b0000000</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> BatchedContext <span class="token operator">=</span> <span class="token comment">/*               */</span> <span class="token number">0b0000001</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> EventContext <span class="token operator">=</span> <span class="token comment">/*                 */</span> <span class="token number">0b0000010</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> DiscreteEventContext <span class="token operator">=</span> <span class="token comment">/*         */</span> <span class="token number">0b0000100</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> LegacyUnbatchedContext <span class="token operator">=</span> <span class="token comment">/*       */</span> <span class="token number">0b0001000</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> RenderContext <span class="token operator">=</span> <span class="token comment">/*                */</span> <span class="token number">0b0010000</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> CommitContext <span class="token operator">=</span> <span class="token comment">/*                */</span> <span class="token number">0b0100000</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u6587\u56DE\u987E\u4E86<code>reconciler \u8FD0\u4F5C\u6D41\u7A0B</code>\u7684 4 \u4E2A\u9636\u6BB5, \u8FD9 4 \u4E2A\u9636\u6BB5\u53EA\u662F\u4E00\u4E2A\u6574\u4F53\u5212\u5206. \u5982\u679C\u5177\u4F53\u5230\u6BCF\u4E00\u6B21\u66F4\u65B0, \u662F\u6709\u5DEE\u5F02\u7684. \u6BD4\u5982\u8BF4: <code>Legacy</code>\u6A21\u5F0F\u4E0B\u7684\u6240\u6709\u66F4\u65B0, \u4E0D\u4F1A\u7ECF\u8FC7<code>\u8C03\u5EA6\u4E2D\u5FC3</code>(\u7B2C 2 \u9636\u6BB5),\u800C\u662F\u76F4\u63A5\u8FDB\u5165<code>fiber\u6811\u6784\u9020</code>(\u7B2C 3 \u9636\u6BB5).</p>`,2),ss=n("\u4E8B\u5B9E\u4E0A\u6B63\u662F"),as=s("code",null,"executionContext",-1),es=n("\u5728\u64CD\u63A7"),os=s("code",null,"reconciler \u8FD0\u4F5C\u6D41\u7A0B",-1),ts=n("(\u6E90\u7801\u4F53\u73B0\u5728"),ps={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberWorkLoop.old.js#L517-L619",target:"_blank",rel:"noopener noreferrer"},cs=n("scheduleUpdateOnFiber \u51FD\u6570"),ls=n(")."),is=o(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">scheduleUpdateOnFiber</span><span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">fiber</span><span class="token operator">:</span> Fiber<span class="token punctuation">,</span>
  <span class="token literal-property property">lane</span><span class="token operator">:</span> Lane<span class="token punctuation">,</span>
  <span class="token literal-property property">eventTime</span><span class="token operator">:</span> number<span class="token punctuation">,</span></span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>lane <span class="token operator">===</span> SyncLane<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// legacy\u6216blocking\u6A21\u5F0F</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>
      <span class="token punctuation">(</span>executionContext <span class="token operator">&amp;</span> LegacyUnbatchedContext<span class="token punctuation">)</span> <span class="token operator">!==</span> NoContext <span class="token operator">&amp;&amp;</span>
      <span class="token punctuation">(</span>executionContext <span class="token operator">&amp;</span> <span class="token punctuation">(</span>RenderContext <span class="token operator">|</span> CommitContext<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">===</span> NoContext
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">performSyncWorkOnRoot</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u540E\u7EED\u7684\u66F4\u65B0</span>
      <span class="token comment">// \u8FDB\u5165\u7B2C2\u9636\u6BB5, \u6CE8\u518C\u8C03\u5EA6\u4EFB\u52A1</span>
      <span class="token function">ensureRootIsScheduled</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> eventTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>executionContext <span class="token operator">===</span> NoContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5982\u679C\u6267\u884C\u4E0A\u4E0B\u6587\u4E3A\u7A7A, \u4F1A\u53D6\u6D88\u8C03\u5EA6\u4EFB\u52A1, \u624B\u52A8\u6267\u884C\u56DE\u8C03</span>
        <span class="token comment">// \u8FDB\u5165\u7B2C3\u9636\u6BB5, \u8FDB\u884Cfiber\u6811\u6784\u9020</span>
        <span class="token function">flushSyncCallbackQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// concurrent\u6A21\u5F0F</span>
    <span class="token comment">// \u65E0\u8BBA\u662F\u5426\u521D\u6B21\u66F4\u65B0, \u90FD\u6B63\u5E38\u8FDB\u5165\u7B2C2\u9636\u6BB5, \u6CE8\u518C\u8C03\u5EA6\u4EFB\u52A1</span>
    <span class="token function">ensureRootIsScheduled</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> eventTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728 render \u8FC7\u7A0B\u4E2D, \u6BCF\u4E00\u4E2A\u9636\u6BB5\u90FD\u4F1A\u6539\u53D8<code>executionContext</code>(render \u4E4B\u524D, \u4F1A\u8BBE\u7F6E<code>executionContext |= RenderContext</code>; commit \u4E4B\u524D, \u4F1A\u8BBE\u7F6E<code>executionContext |= CommitContext</code>), \u5047\u8BBE\u5728<code>render</code>\u8FC7\u7A0B\u4E2D\u518D\u6B21\u53D1\u8D77\u66F4\u65B0(\u5982\u5728<code>UNSAFE_componentWillReceiveProps</code>\u751F\u547D\u5468\u671F\u4E2D\u8C03\u7528<code>setState</code>)\u5219\u53EF\u901A\u8FC7<code>executionContext</code>\u6765\u5224\u65AD\u5F53\u524D\u7684<code>render</code>\u72B6\u6001.</p><h3 id="\u53CC\u7F13\u51B2\u6280\u672F-double-buffering" tabindex="-1"><a class="header-anchor" href="#\u53CC\u7F13\u51B2\u6280\u672F-double-buffering" aria-hidden="true">#</a> \u53CC\u7F13\u51B2\u6280\u672F(double buffering)</h3><p>\u5728\u5168\u5C40\u53D8\u91CF\u4E2D\u6709<code>workInProgress</code>, \u8FD8\u6709\u4E0D\u5C11\u4EE5<code>workInProgress</code>\u6765\u547D\u540D\u7684\u53D8\u91CF. <code>workInProgress</code>\u7684\u5E94\u7528\u5B9E\u9645\u4E0A\u5C31\u662F<code>React</code>\u7684\u53CC\u7F13\u51B2\u6280\u672F(<code>double buffering</code>).</p><p>\u5728\u4E0A\u6587\u6211\u4EEC\u68B3\u7406\u4E86<code>ReactElement, Fiber, DOM\u4E09\u8005\u7684\u5173\u7CFB</code>, <code>fiber\u6811</code>\u7684\u6784\u9020\u8FC7\u7A0B, \u5C31\u662F\u628A<code>ReactElement</code>\u8F6C\u6362\u6210<code>fiber\u6811</code>\u7684\u8FC7\u7A0B. \u5728\u8FD9\u4E2A\u8FC7\u7A0B\u4E2D, \u5185\u5B58\u91CC\u4F1A\u540C\u65F6\u5B58\u5728 2 \u68F5<code>fiber\u6811</code>:</p><ul><li>\u5176\u4E00: \u4EE3\u8868\u5F53\u524D\u754C\u9762\u7684<code>fiber</code>\u6811(\u5DF2\u7ECF\u88AB\u5C55\u793A\u51FA\u6765, \u6302\u8F7D\u5230<code>fiberRoot.current</code>\u4E0A). \u5982\u679C\u662F\u521D\u6B21\u6784\u9020(<code>\u521D\u59CB\u5316\u6E32\u67D3</code>), \u9875\u9762\u8FD8\u6CA1\u6709\u6E32\u67D3, \u6B64\u65F6\u754C\u9762\u5BF9\u5E94\u7684 fiber \u6811\u4E3A\u7A7A(<code>fiberRoot.current = null</code>).</li><li>\u5176\u4E8C: \u6B63\u5728\u6784\u9020\u7684<code>fiber</code>\u6811(\u5373\u5C06\u5C55\u793A\u51FA\u6765, \u6302\u8F7D\u5230<code>HostRootFiber.alternate</code>\u4E0A, \u6B63\u5728\u6784\u9020\u7684\u8282\u70B9\u79F0\u4E3A<code>workInProgress</code>). \u5F53\u6784\u9020\u5B8C\u6210\u4E4B\u540E, \u91CD\u65B0\u6E32\u67D3\u9875\u9762, \u6700\u540E\u5207\u6362<code>fiberRoot.current = workInProgress</code>, \u4F7F\u5F97<code>fiberRoot.current</code>\u91CD\u65B0\u6307\u5411\u4EE3\u8868\u5F53\u524D\u754C\u9762\u7684<code>fiber</code>\u6811.</li></ul>`,6),rs=n("\u6B64\u5904\u6D89\u53CA\u5230 2 \u4E2A\u5168\u5C40\u5BF9\u8C61"),us=s("code",null,"fiberRoot",-1),ds=n("\u548C"),ks=s("code",null,"HostRootFiber",-1),vs=n(", \u5728"),ms=n("React \u5E94\u7528\u7684\u542F\u52A8\u8FC7\u7A0B"),bs=n("\u4E2D\u6709\u8BE6\u7EC6\u7684\u8BF4\u660E."),_s=s("p",null,[n("\u7528\u56FE\u6765\u8868\u8FF0"),s("code",null,"double buffering"),n("\u7684\u6982\u5FF5\u5982\u4E0B:")],-1),hs=s("ol",null,[s("li",null,[n("\u6784\u9020\u8FC7\u7A0B\u4E2D, "),s("code",null,"fiberRoot.current"),n("\u6307\u5411\u5F53\u524D\u754C\u9762\u5BF9\u5E94\u7684"),s("code",null,"fiber"),n("\u6811.")])],-1),fs=["src"],ys=s("ol",null,[s("li",null,[n("\u6784\u9020\u5B8C\u6210\u5E76\u6E32\u67D3, \u5207\u6362"),s("code",null,"fiberRoot.current"),n("\u6307\u9488, \u4F7F\u5176\u7EE7\u7EED\u6307\u5411\u5F53\u524D\u754C\u9762\u5BF9\u5E94\u7684"),s("code",null,"fiber"),n("\u6811(\u539F\u6765\u4EE3\u8868\u754C\u9762\u7684 fiber \u6811, \u53D8\u6210\u4E86\u5185\u5B58\u4E2D).")])],-1),gs=["src"],ws=s("h3",{id:"\u4F18\u5148\u7EA7-lanes",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u4F18\u5148\u7EA7-lanes","aria-hidden":"true"},"#"),n(" \u4F18\u5148\u7EA7 {#lanes}")],-1),Ls=s("p",null,[n("\u5728\u5168\u5C40\u53D8\u91CF\u4E2D\u6709\u4E0D\u5C11\u53D8\u91CF\u90FD\u4EE5 Lanes \u547D\u540D(\u5982"),s("code",null,"workInProgressRootRenderLanes"),n(","),s("code",null,"subtreeRenderLanes"),n("\u5176\u4F5C\u7528\u89C1\u4E0A\u6587\u6CE8\u91CA), \u5B83\u4EEC\u90FD\u4E0E\u4F18\u5148\u7EA7\u76F8\u5173.")],-1),Rs=n("\u5728\u524D\u6587"),xs=n("React \u4E2D\u7684\u4F18\u5148\u7EA7\u7BA1\u7406"),Ps=n("\u4E2D, \u6211\u4EEC\u4ECB\u7ECD\u4E86"),Cs=s("code",null,"React",-1),Is=n("\u4E2D\u6709 3 \u5957\u4F18\u5148\u7EA7\u4F53\u7CFB, \u5E76\u4E86\u89E3\u4E86\u5B83\u4EEC\u4E4B\u95F4\u7684\u5173\u8054. \u73B0\u5728"),Ns=s("code",null,"fiber\u6811\u6784\u9020",-1),Ss=n("\u8FC7\u7A0B\u4E2D, \u5C06\u8981\u6DF1\u5165\u5206\u6790\u8F66\u9053\u6A21\u578B"),js=s("code",null,"Lane",-1),Es=n("\u7684\u5177\u4F53\u5E94\u7528."),Fs=s("p",null,[n("\u5728\u6574\u4E2A"),s("code",null,"react-reconciler"),n("\u5305\u4E2D, "),s("code",null,"Lane"),n("\u7684\u5E94\u7528\u53EF\u4EE5\u5206\u4E3A 3 \u4E2A\u65B9\u9762:")],-1),Ts=s("h4",{id:"update\u4F18\u5148\u7EA7-update-lane-update-lane",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#update\u4F18\u5148\u7EA7-update-lane-update-lane","aria-hidden":"true"},"#"),n(),s("code",null,"update"),n("\u4F18\u5148\u7EA7(update.lane) {#update-lane}")],-1),Us=n("\u5728"),Ws=n("React \u5E94\u7528\u4E2D\u7684\u9AD8\u9891\u5BF9\u8C61"),Os=n("\u4E00\u6587\u4E2D, \u4ECB\u7ECD\u8FC7"),Ds=s("code",null,"update",-1),Ms=n("\u5BF9\u8C61, \u5B83\u662F\u4E00\u4E2A\u73AF\u5F62\u94FE\u8868. \u5BF9\u4E8E\u5355\u4E2A"),Bs=s("code",null,"update",-1),qs=n("\u5BF9\u8C61\u6765\u8BB2, "),Hs=s("code",null,"update.lane",-1),As=n("\u4EE3\u8868\u5B83\u7684\u4F18\u5148\u7EA7, \u79F0\u4E4B\u4E3A"),Qs=s("code",null,"update",-1),Vs=n("\u4F18\u5148\u7EA7."),$s=n("\u89C2\u5BDF\u5176\u6784\u9020\u51FD\u6570("),zs={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactUpdateQueue.old.js#L152-L163",target:"_blank",rel:"noopener noreferrer"},Js=n("\u6E90\u7801\u94FE\u63A5"),Xs=n("),\u5176\u4F18\u5148\u7EA7\u662F\u7531\u5916\u754C\u4F20\u5165."),Gs=o(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">createUpdate</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">eventTime</span><span class="token operator">:</span> number<span class="token punctuation">,</span> <span class="token literal-property property">lane</span><span class="token operator">:</span> Lane</span><span class="token punctuation">)</span><span class="token operator">:</span> Update<span class="token operator">&lt;</span><span class="token operator">*</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token literal-property property">update</span><span class="token operator">:</span> Update<span class="token operator">&lt;</span><span class="token operator">*</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    eventTime<span class="token punctuation">,</span>
    lane<span class="token punctuation">,</span>
    <span class="token literal-property property">tag</span><span class="token operator">:</span> UpdateState<span class="token punctuation">,</span>
    <span class="token literal-property property">payload</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
    <span class="token literal-property property">callback</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
    <span class="token literal-property property">next</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> update<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728<code>React</code>\u4F53\u7CFB\u4E2D, \u6709 2 \u79CD\u60C5\u51B5\u4F1A\u521B\u5EFA<code>update</code>\u5BF9\u8C61:</p>`,2),Ks=n("\u5E94\u7528\u521D\u59CB\u5316: \u5728"),Ys=s("code",null,"react-reconciler",-1),Zs=n("\u5305\u4E2D\u7684"),na=s("code",null,"updateContainer",-1),sa=n("\u51FD\u6570\u4E2D("),aa={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberReconciler.old.js#L250-L321",target:"_blank",rel:"noopener noreferrer"},ea=n("\u6E90\u7801"),oa=o(`)<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">updateContainer</span><span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">element</span><span class="token operator">:</span> ReactNodeList<span class="token punctuation">,</span>
  <span class="token literal-property property">container</span><span class="token operator">:</span> OpaqueRoot<span class="token punctuation">,</span>
  <span class="token literal-property property">parentComponent</span><span class="token operator">:</span> <span class="token operator">?</span>React$Component<span class="token operator">&lt;</span>any<span class="token punctuation">,</span> any<span class="token operator">&gt;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">callback</span><span class="token operator">:</span> <span class="token operator">?</span>Function<span class="token punctuation">,</span></span>
<span class="token punctuation">)</span><span class="token operator">:</span> Lane <span class="token punctuation">{</span>
  <span class="token keyword">const</span> current <span class="token operator">=</span> container<span class="token punctuation">.</span>current<span class="token punctuation">;</span>
  <span class="token keyword">const</span> eventTime <span class="token operator">=</span> <span class="token function">requestEventTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> lane <span class="token operator">=</span> <span class="token function">requestUpdateLane</span><span class="token punctuation">(</span>current<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6839\u636E\u5F53\u524D\u65F6\u95F4, \u521B\u5EFA\u4E00\u4E2Aupdate\u4F18\u5148\u7EA7</span>
  <span class="token keyword">const</span> update <span class="token operator">=</span> <span class="token function">createUpdate</span><span class="token punctuation">(</span>eventTime<span class="token punctuation">,</span> lane<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// lane\u88AB\u7528\u4E8E\u521B\u5EFAupdate\u5BF9\u8C61</span>
  update<span class="token punctuation">.</span>payload <span class="token operator">=</span> <span class="token punctuation">{</span> element <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token function">enqueueUpdate</span><span class="token punctuation">(</span>current<span class="token punctuation">,</span> update<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">scheduleUpdateOnFiber</span><span class="token punctuation">(</span>current<span class="token punctuation">,</span> lane<span class="token punctuation">,</span> eventTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> lane<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),ta=n("\u53D1\u8D77\u7EC4\u4EF6\u66F4\u65B0: \u5047\u8BBE\u5728 class \u7EC4\u4EF6\u4E2D\u8C03\u7528"),pa=s("code",null,"setState",-1),ca=n("("),la={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberClassComponent.old.js#L193-L288",target:"_blank",rel:"noopener noreferrer"},ia=n("\u6E90\u7801"),ra=n(")"),ua=o(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> classComponentUpdater <span class="token operator">=</span> <span class="token punctuation">{</span>
  isMounted<span class="token punctuation">,</span>
  <span class="token function">enqueueSetState</span><span class="token punctuation">(</span><span class="token parameter">inst<span class="token punctuation">,</span> payload<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> fiber <span class="token operator">=</span> <span class="token function">getInstance</span><span class="token punctuation">(</span>inst<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> eventTime <span class="token operator">=</span> <span class="token function">requestEventTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6839\u636E\u5F53\u524D\u65F6\u95F4, \u521B\u5EFA\u4E00\u4E2Aupdate\u4F18\u5148\u7EA7</span>
    <span class="token keyword">const</span> lane <span class="token operator">=</span> <span class="token function">requestUpdateLane</span><span class="token punctuation">(</span>fiber<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// lane\u88AB\u7528\u4E8E\u521B\u5EFAupdate\u5BF9\u8C61</span>
    <span class="token keyword">const</span> update <span class="token operator">=</span> <span class="token function">createUpdate</span><span class="token punctuation">(</span>eventTime<span class="token punctuation">,</span> lane<span class="token punctuation">)</span><span class="token punctuation">;</span>
    update<span class="token punctuation">.</span>payload <span class="token operator">=</span> payload<span class="token punctuation">;</span>
    <span class="token function">enqueueUpdate</span><span class="token punctuation">(</span>fiber<span class="token punctuation">,</span> update<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">scheduleUpdateOnFiber</span><span class="token punctuation">(</span>fiber<span class="token punctuation">,</span> lane<span class="token punctuation">,</span> eventTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u770B\u5230, \u65E0\u8BBA\u662F<code>\u5E94\u7528\u521D\u59CB\u5316</code>\u6216\u8005<code>\u53D1\u8D77\u7EC4\u4EF6\u66F4\u65B0</code>, \u521B\u5EFA<code>update.lane</code>\u7684\u903B\u8F91\u90FD\u662F\u4E00\u6837\u7684, \u90FD\u662F\u6839\u636E\u5F53\u524D\u65F6\u95F4, \u521B\u5EFA\u4E00\u4E2A update \u4F18\u5148\u7EA7.</p>`,2),da={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberWorkLoop.old.js#L392-L493",target:"_blank",rel:"noopener noreferrer"},ka=n("requestUpdateLane"),va=n(":"),ma=o(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">requestUpdateLane</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">fiber</span><span class="token operator">:</span> Fiber</span><span class="token punctuation">)</span><span class="token operator">:</span> Lane <span class="token punctuation">{</span>
  <span class="token comment">// Special cases</span>
  <span class="token keyword">const</span> mode <span class="token operator">=</span> fiber<span class="token punctuation">.</span>mode<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>mode <span class="token operator">&amp;</span> BlockingMode<span class="token punctuation">)</span> <span class="token operator">===</span> NoMode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// legacy \u6A21\u5F0F</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>SyncLane<span class="token operator">:</span> Lane<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>mode <span class="token operator">&amp;</span> ConcurrentMode<span class="token punctuation">)</span> <span class="token operator">===</span> NoMode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// blocking\u6A21\u5F0F</span>
    <span class="token keyword">return</span> <span class="token function">getCurrentPriorityLevel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> ImmediateSchedulerPriority
      <span class="token operator">?</span> <span class="token punctuation">(</span>SyncLane<span class="token operator">:</span> Lane<span class="token punctuation">)</span>
      <span class="token operator">:</span> <span class="token punctuation">(</span>SyncBatchedLane<span class="token operator">:</span> Lane<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// concurrent\u6A21\u5F0F</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>currentEventWipLanes <span class="token operator">===</span> NoLanes<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    currentEventWipLanes <span class="token operator">=</span> workInProgressRootIncludedLanes<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> isTransition <span class="token operator">=</span> <span class="token function">requestCurrentTransition</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!==</span> NoTransition<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>isTransition<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u7279\u6B8A\u60C5\u51B5, \u5904\u4E8Esuspense\u8FC7\u7A0B\u4E2D</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>currentEventPendingLanes <span class="token operator">!==</span> NoLanes<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      currentEventPendingLanes <span class="token operator">=</span>
        mostRecentlyUpdatedRoot <span class="token operator">!==</span> <span class="token keyword">null</span>
          <span class="token operator">?</span> mostRecentlyUpdatedRoot<span class="token punctuation">.</span>pendingLanes
          <span class="token operator">:</span> NoLanes<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token function">findTransitionLane</span><span class="token punctuation">(</span>currentEventWipLanes<span class="token punctuation">,</span> currentEventPendingLanes<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u6B63\u5E38\u60C5\u51B5, \u83B7\u53D6\u8C03\u5EA6\u4F18\u5148\u7EA7</span>
  <span class="token keyword">const</span> schedulerPriority <span class="token operator">=</span> <span class="token function">getCurrentPriorityLevel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> lane<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>
    <span class="token punctuation">(</span>executionContext <span class="token operator">&amp;</span> DiscreteEventContext<span class="token punctuation">)</span> <span class="token operator">!==</span> NoContext <span class="token operator">&amp;&amp;</span>
    schedulerPriority <span class="token operator">===</span> UserBlockingSchedulerPriority
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// executionContext \u5B58\u5728\u8F93\u5165\u4E8B\u4EF6. \u4E14\u8C03\u5EA6\u4F18\u5148\u7EA7\u662F\u7528\u6237\u963B\u585E\u6027\u8D28</span>
    lane <span class="token operator">=</span> <span class="token function">findUpdateLane</span><span class="token punctuation">(</span>InputDiscreteLanePriority<span class="token punctuation">,</span> currentEventWipLanes<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8C03\u5EA6\u4F18\u5148\u7EA7\u8F6C\u6362\u4E3A\u8F66\u9053\u6A21\u578B</span>
    <span class="token keyword">const</span> schedulerLanePriority <span class="token operator">=</span> <span class="token function">schedulerPriorityToLanePriority</span><span class="token punctuation">(</span>
      schedulerPriority<span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    lane <span class="token operator">=</span> <span class="token function">findUpdateLane</span><span class="token punctuation">(</span>schedulerLanePriority<span class="token punctuation">,</span> currentEventWipLanes<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> lane<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u770B\u5230<code>requestUpdateLane</code>\u7684\u4F5C\u7528\u662F\u8FD4\u56DE\u4E00\u4E2A\u5408\u9002\u7684 update \u4F18\u5148\u7EA7.</p>`,2),ba=s("li",null,[n("legacy \u6A21\u5F0F: \u8FD4\u56DE"),s("code",null,"SyncLane")],-1),_a=s("li",null,[n("blocking \u6A21\u5F0F: \u8FD4\u56DE"),s("code",null,"SyncLane")],-1),ha=n("concurrent \u6A21\u5F0F: "),fa=s("li",null,[n("\u6B63\u5E38\u60C5\u51B5\u4E0B, \u6839\u636E\u5F53\u524D\u7684"),s("code",null,"\u8C03\u5EA6\u4F18\u5148\u7EA7"),n("\u6765\u751F\u6210\u4E00\u4E2A"),s("code",null,"lane"),n(".")],-1),ya=n("\u7279\u6B8A\u60C5\u51B5\u4E0B(\u5904\u4E8E suspense \u8FC7\u7A0B\u4E2D), \u4F1A\u4F18\u5148\u9009\u62E9"),ga=s("code",null,"TransitionLanes",-1),wa=n("\u901A\u9053\u4E2D\u7684\u7A7A\u95F2\u901A\u9053(\u5982\u679C\u6240\u6709"),La=s("code",null,"TransitionLanes",-1),Ra=n("\u901A\u9053\u90FD\u88AB\u5360\u7528, \u5C31\u53D6\u6700\u9AD8\u4F18\u5148\u7EA7. "),xa={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberLane.js#L548-L563",target:"_blank",rel:"noopener noreferrer"},Pa=n("\u6E90\u7801"),Ca=n(")."),Ia=o(`<p>\u6700\u540E\u901A\u8FC7<code>scheduleUpdateOnFiber(current, lane, eventTime);</code>\u51FD\u6570, \u628A<code>update.lane</code>\u6B63\u5F0F\u5E26\u5165\u5230\u4E86<code>\u8F93\u5165</code>\u9636\u6BB5.</p><p><code>scheduleUpdateOnFiber</code>\u662F<code>\u8F93\u5165</code>\u9636\u6BB5\u7684\u5FC5\u7ECF\u51FD\u6570, \u5728\u672C\u7CFB\u5217\u7684\u6587\u7AE0\u4E2D\u5DF2\u7ECF\u591A\u6B21\u63D0\u5230, \u6B64\u5904\u4EE5<code>update.lane</code>\u7684\u89C6\u89D2\u5206\u6790:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">scheduleUpdateOnFiber</span><span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">fiber</span><span class="token operator">:</span> Fiber<span class="token punctuation">,</span>
  <span class="token literal-property property">lane</span><span class="token operator">:</span> Lane<span class="token punctuation">,</span>
  <span class="token literal-property property">eventTime</span><span class="token operator">:</span> number<span class="token punctuation">,</span></span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>lane <span class="token operator">===</span> SyncLane<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// legacy\u6216blocking\u6A21\u5F0F</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>
      <span class="token punctuation">(</span>executionContext <span class="token operator">&amp;</span> LegacyUnbatchedContext<span class="token punctuation">)</span> <span class="token operator">!==</span> NoContext <span class="token operator">&amp;&amp;</span>
      <span class="token punctuation">(</span>executionContext <span class="token operator">&amp;</span> <span class="token punctuation">(</span>RenderContext <span class="token operator">|</span> CommitContext<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">===</span> NoContext
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">performSyncWorkOnRoot</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">ensureRootIsScheduled</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> eventTime<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6CE8\u518C\u56DE\u8C03\u4EFB\u52A1</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>executionContext <span class="token operator">===</span> NoContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">flushSyncCallbackQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u53D6\u6D88schedule\u8C03\u5EA6 ,\u4E3B\u52A8\u5237\u65B0\u56DE\u8C03\u961F\u5217,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// concurrent\u6A21\u5F0F</span>
    <span class="token function">ensureRootIsScheduled</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> eventTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53<code>lane === SyncLane</code>\u4E5F\u5C31\u662F legacy \u6216 blocking \u6A21\u5F0F\u4E2D, \u6CE8\u518C\u5B8C\u56DE\u8C03\u4EFB\u52A1\u4E4B\u540E(<code>ensureRootIsScheduled(root, eventTime)</code>), \u5982\u679C\u6267\u884C\u4E0A\u4E0B\u6587\u4E3A\u7A7A, \u4F1A\u53D6\u6D88 schedule \u8C03\u5EA6, \u4E3B\u52A8\u5237\u65B0\u56DE\u8C03\u961F\u5217<code>flushSyncCallbackQueue()</code>.</p><p>\u8FD9\u91CC\u5305\u542B\u4E86\u4E00\u4E2A\u70ED\u70B9\u95EE\u9898(<code>setState\u5230\u5E95\u662F\u540C\u6B65\u8FD8\u662F\u5F02\u6B65</code>)\u7684\u6807\u51C6\u7B54\u6848:</p><ul><li>\u5982\u679C\u903B\u8F91\u8FDB\u5165<code>flushSyncCallbackQueue</code>(<code>executionContext === NoContext</code>), \u5219\u4F1A\u4E3B\u52A8\u53D6\u6D88\u8C03\u5EA6, \u5E76\u5237\u65B0\u56DE\u8C03, \u7ACB\u5373\u8FDB\u5165<code>fiber\u6811</code>\u6784\u9020\u8FC7\u7A0B. \u5F53\u6267\u884C<code>setState</code>\u4E0B\u4E00\u884C\u4EE3\u7801\u65F6, <code>fiber\u6811</code>\u5DF2\u7ECF\u91CD\u65B0\u6E32\u67D3\u4E86, \u6545<code>setState</code>\u4F53\u73B0\u4E3A\u540C\u6B65.</li><li>\u6B63\u5E38\u60C5\u51B5\u4E0B, \u4E0D\u4F1A\u53D6\u6D88<code>schedule\u8C03\u5EA6</code>. \u7531\u4E8E<code>schedule\u8C03\u5EA6</code>\u662F\u901A\u8FC7<code>MessageChannel</code>\u89E6\u53D1(\u5B8F\u4EFB\u52A1), \u6545\u4F53\u73B0\u4E3A\u5F02\u6B65.</li></ul><h4 id="\u6E32\u67D3\u4F18\u5148\u7EA7-renderlanes" tabindex="-1"><a class="header-anchor" href="#\u6E32\u67D3\u4F18\u5148\u7EA7-renderlanes" aria-hidden="true">#</a> <code>\u6E32\u67D3</code>\u4F18\u5148\u7EA7(renderLanes)</h4><p>\u8FD9\u662F\u4E00\u4E2A\u5168\u5C40\u6982\u5FF5, \u6BCF\u4E00\u6B21<code>render</code>\u4E4B\u524D, \u9996\u5148\u8981\u786E\u5B9A\u672C\u6B21<code>render</code>\u7684\u4F18\u5148\u7EA7. \u5177\u4F53\u5BF9\u5E94\u5230\u6E90\u7801\u5982\u4E0B:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// ...\u7701\u7565\u65E0\u5173\u4EE3\u7801</span>
<span class="token keyword">function</span> <span class="token function">performSyncWorkOnRoot</span><span class="token punctuation">(</span><span class="token parameter">root</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> lanes<span class="token punctuation">;</span>
  <span class="token keyword">let</span> exitStatus<span class="token punctuation">;</span>
  <span class="token comment">// \u83B7\u53D6\u672C\u6B21\`render\`\u7684\u4F18\u5148\u7EA7</span>
  lanes <span class="token operator">=</span> <span class="token function">getNextLanes</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> lanes<span class="token punctuation">)</span><span class="token punctuation">;</span>
  exitStatus <span class="token operator">=</span> <span class="token function">renderRootSync</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> lanes<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// ...\u7701\u7565\u65E0\u5173\u4EE3\u7801</span>
<span class="token keyword">function</span> <span class="token function">performConcurrentWorkOnRoot</span><span class="token punctuation">(</span><span class="token parameter">root</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u83B7\u53D6\u672C\u6B21\`render\`\u7684\u4F18\u5148\u7EA7</span>
  <span class="token keyword">let</span> lanes <span class="token operator">=</span> <span class="token function">getNextLanes</span><span class="token punctuation">(</span>
    root<span class="token punctuation">,</span>
    root <span class="token operator">===</span> workInProgressRoot <span class="token operator">?</span> workInProgressRootRenderLanes <span class="token operator">:</span> NoLanes<span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>lanes <span class="token operator">===</span> NoLanes<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">let</span> exitStatus <span class="token operator">=</span> <span class="token function">renderRootConcurrent</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> lanes<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),Na=n("\u53EF\u4EE5\u770B\u5230, \u65E0\u8BBA\u662F"),Sa=s("code",null,"Legacy",-1),ja=n("\u8FD8\u662F"),Ea=s("code",null,"Concurrent",-1),Fa=n("\u6A21\u5F0F, \u5728\u6B63\u5F0F"),Ta=s("code",null,"render",-1),Ua=n("\u4E4B\u524D, \u90FD\u4F1A\u8C03\u7528"),Wa=s("code",null,"getNextLanes",-1),Oa=n("\u83B7\u53D6\u4E00\u4E2A\u4F18\u5148\u7EA7("),Da={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberLane.js#L249-L303",target:"_blank",rel:"noopener noreferrer"},Ma=n("\u6E90\u7801\u94FE\u63A5"),Ba=n(")."),qa=o(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// ...\u7701\u7565\u90E8\u5206\u4EE3\u7801</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">getNextLanes</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">root</span><span class="token operator">:</span> FiberRoot<span class="token punctuation">,</span> <span class="token literal-property property">wipLanes</span><span class="token operator">:</span> Lanes</span><span class="token punctuation">)</span><span class="token operator">:</span> Lanes <span class="token punctuation">{</span>
  <span class="token comment">// 1. check\u662F\u5426\u6709\u7B49\u5F85\u4E2D\u7684lanes</span>
  <span class="token keyword">const</span> pendingLanes <span class="token operator">=</span> root<span class="token punctuation">.</span>pendingLanes<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>pendingLanes <span class="token operator">===</span> NoLanes<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    return_highestLanePriority <span class="token operator">=</span> NoLanePriority<span class="token punctuation">;</span>
    <span class="token keyword">return</span> NoLanes<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">let</span> nextLanes <span class="token operator">=</span> NoLanes<span class="token punctuation">;</span>
  <span class="token keyword">let</span> nextLanePriority <span class="token operator">=</span> NoLanePriority<span class="token punctuation">;</span>
  <span class="token keyword">const</span> expiredLanes <span class="token operator">=</span> root<span class="token punctuation">.</span>expiredLanes<span class="token punctuation">;</span>
  <span class="token keyword">const</span> suspendedLanes <span class="token operator">=</span> root<span class="token punctuation">.</span>suspendedLanes<span class="token punctuation">;</span>
  <span class="token keyword">const</span> pingedLanes <span class="token operator">=</span> root<span class="token punctuation">.</span>pingedLanes<span class="token punctuation">;</span>
  <span class="token comment">// 2. check\u662F\u5426\u6709\u5DF2\u8FC7\u671F\u7684lanes</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>expiredLanes <span class="token operator">!==</span> NoLanes<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    nextLanes <span class="token operator">=</span> expiredLanes<span class="token punctuation">;</span>
    nextLanePriority <span class="token operator">=</span> return_highestLanePriority <span class="token operator">=</span> SyncLanePriority<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> nonIdlePendingLanes <span class="token operator">=</span> pendingLanes <span class="token operator">&amp;</span> NonIdleLanes<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>nonIdlePendingLanes <span class="token operator">!==</span> NoLanes<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u975EIdle\u4EFB\u52A1 ...</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// Idle\u4EFB\u52A1 ...</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>nextLanes <span class="token operator">===</span> NoLanes<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> NoLanes<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> nextLanes<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>getNextLanes</code>\u4F1A\u6839\u636E<code>fiberRoot</code>\u5BF9\u8C61\u4E0A\u7684\u5C5E\u6027(<code>expiredLanes</code>, <code>suspendedLanes</code>, <code>pingedLanes</code>\u7B49), \u786E\u5B9A\u51FA\u5F53\u524D\u6700\u7D27\u6025\u7684<code>lanes</code>.</p><p>\u6B64\u5904\u8FD4\u56DE\u7684<code>lanes</code>\u4F1A\u4F5C\u4E3A\u5168\u5C40\u6E32\u67D3\u7684\u4F18\u5148\u7EA7, \u7528\u4E8E<code>fiber\u6811\u6784\u9020\u8FC7\u7A0B</code>\u4E2D. \u9488\u5BF9<code>fiber\u5BF9\u8C61</code>\u6216<code>update\u5BF9\u8C61</code>, \u53EA\u8981\u5B83\u4EEC\u7684\u4F18\u5148\u7EA7(\u5982: <code>fiber.lanes</code>\u548C<code>update.lane</code>)\u6BD4<code>\u6E32\u67D3\u4F18\u5148\u7EA7</code>\u4F4E, \u90FD\u5C06\u4F1A\u88AB\u5FFD\u7565.</p><p>\u4EE5\u4E0B\u6E90\u7801\u5C55\u793A\u4E86\u65E0\u8BBA\u662F<code>renderRootSync</code>\u6216<code>renderRootConcurrent</code>\u5728\u8C03\u7528<code>render</code>\u4E4B\u524D, \u90FD\u4F1A\u901A\u8FC7<code>getNextLanes</code>\u83B7\u53D6\u5168\u5C40\u6E32\u67D3\u4F18\u5148\u7EA7, \u5E76\u4E14\u5728<code>fiber\u6811\u6784\u9020</code>\u8FC7\u7A0B\u4E2D\u4F7F\u7528.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">performSyncWorkOnRoot</span><span class="token punctuation">(</span><span class="token parameter">root</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> lanes<span class="token punctuation">;</span>
  <span class="token keyword">let</span> exitStatus<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>
    root <span class="token operator">===</span> workInProgressRoot <span class="token operator">&amp;&amp;</span>
    <span class="token function">includesSomeLane</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>expiredLanes<span class="token punctuation">,</span> workInProgressRootRenderLanes<span class="token punctuation">)</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6E32\u67D3\u4F18\u5148\u7EA7</span>
    lanes <span class="token operator">=</span> <span class="token function">getNextLanes</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> lanes<span class="token punctuation">)</span><span class="token punctuation">;</span>
    exitStatus <span class="token operator">=</span> <span class="token function">renderRootSync</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> lanes<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6E32\u67D3\u4F18\u5148\u7EA7</span>
    lanes <span class="token operator">=</span> <span class="token function">getNextLanes</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> NoLanes<span class="token punctuation">)</span><span class="token punctuation">;</span>
    exitStatus <span class="token operator">=</span> <span class="token function">renderRootSync</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> lanes<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">performConcurrentWorkOnRoot</span><span class="token punctuation">(</span><span class="token parameter">root</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>

  <span class="token keyword">let</span> lanes <span class="token operator">=</span> <span class="token function">getNextLanes</span><span class="token punctuation">(</span>
    root<span class="token punctuation">,</span>
    root <span class="token operator">===</span> workInProgressRoot <span class="token operator">?</span> workInProgressRootRenderLanes <span class="token operator">:</span> NoLanes<span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u6E32\u67D3\u4F18\u5148\u7EA7</span>
  <span class="token keyword">let</span> exitStatus <span class="token operator">=</span> <span class="token function">renderRootConcurrent</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> lanes<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="fiber\u4F18\u5148\u7EA7-fiber-lanes" tabindex="-1"><a class="header-anchor" href="#fiber\u4F18\u5148\u7EA7-fiber-lanes" aria-hidden="true">#</a> <code>fiber</code>\u4F18\u5148\u7EA7(fiber.lanes)</h4>`,6),Ha=n("\u5728"),Aa=n("React \u5E94\u7528\u4E2D\u7684\u9AD8\u9891\u5BF9\u8C61"),Qa=n("\u4E00\u6587\u4E2D, \u4ECB\u7ECD\u8FC7"),Va=s("code",null,"fiber",-1),$a=n("\u5BF9\u8C61\u7684\u6570\u636E\u7ED3\u6784. \u5176\u4E2D\u6709 2 \u4E2A\u5C5E\u6027\u4E0E\u4F18\u5148\u7EA7\u76F8\u5173:"),za=s("li",null,[s("code",null,"fiber.lanes"),n(": \u4EE3\u8868\u672C\u8282\u70B9\u7684\u4F18\u5148\u7EA7")],-1),Ja=o("<code>fiber.childLanes</code>: \u4EE3\u8868\u5B50\u8282\u70B9\u7684\u4F18\u5148\u7EA7 \u4ECE<code>FiberNode</code>\u7684\u6784\u9020\u51FD\u6570\u4E2D\u53EF\u4EE5\u770B\u51FA, <code>fiber.lanes</code>\u548C<code>fiber.childLanes</code>\u7684\u521D\u59CB\u503C\u90FD\u4E3A<code>NoLanes</code>, \u5728<code>fiber\u6811\u6784\u9020</code>\u8FC7\u7A0B\u4E2D, \u4F7F\u7528\u5168\u5C40\u7684\u6E32\u67D3\u4F18\u5148\u7EA7(<code>renderLanes</code>)\u548C<code>fiber.lanes</code>\u5224\u65AD<code>fiber</code>\u8282\u70B9\u662F\u5426\u66F4\u65B0(",18),Xa={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberBeginWork.old.js#L3121-L3296",target:"_blank",rel:"noopener noreferrer"},Ga=n("\u6E90\u7801\u5730\u5740"),Ka=n("). "),Ya=s("ul",null,[s("li",null,[n("\u5982\u679C\u5168\u5C40\u7684\u6E32\u67D3\u4F18\u5148\u7EA7"),s("code",null,"renderLanes"),n("\u4E0D\u5305\u62EC"),s("code",null,"fiber.lanes"),n(", \u8BC1\u660E\u8BE5"),s("code",null,"fiber"),n("\u8282\u70B9\u6CA1\u6709\u66F4\u65B0, \u53EF\u4EE5\u590D\u7528.")]),s("li",null,"\u5982\u679C\u4E0D\u80FD\u590D\u7528, \u8FDB\u5165\u521B\u5EFA\u9636\u6BB5.")],-1),Za=o(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">beginWork</span><span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">current</span><span class="token operator">:</span> Fiber <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
  <span class="token literal-property property">workInProgress</span><span class="token operator">:</span> Fiber<span class="token punctuation">,</span>
  <span class="token literal-property property">renderLanes</span><span class="token operator">:</span> Lanes<span class="token punctuation">,</span></span>
<span class="token punctuation">)</span><span class="token operator">:</span> Fiber <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> updateLanes <span class="token operator">=</span> workInProgress<span class="token punctuation">.</span>lanes<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>current <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> oldProps <span class="token operator">=</span> current<span class="token punctuation">.</span>memoizedProps<span class="token punctuation">;</span>
    <span class="token keyword">const</span> newProps <span class="token operator">=</span> workInProgress<span class="token punctuation">.</span>pendingProps<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>
      oldProps <span class="token operator">!==</span> newProps <span class="token operator">||</span>
      <span class="token function">hasLegacyContextChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span>
      <span class="token comment">// Force a re-render if the implementation changed due to hot reload:</span>
      <span class="token punctuation">(</span>__DEV__ <span class="token operator">?</span> workInProgress<span class="token punctuation">.</span>type <span class="token operator">!==</span> current<span class="token punctuation">.</span>type <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
      didReceiveUpdate <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">includesSomeLane</span><span class="token punctuation">(</span>renderLanes<span class="token punctuation">,</span> updateLanes<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      didReceiveUpdate <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
      <span class="token comment">// \u672C\`fiber\`\u8282\u70B9\u7684\u6CA1\u6709\u66F4\u65B0, \u53EF\u4EE5\u590D\u7528, \u8FDB\u5165bailout\u903B\u8F91</span>
      <span class="token keyword">return</span> <span class="token function">bailoutOnAlreadyFinishedWork</span><span class="token punctuation">(</span>current<span class="token punctuation">,</span> workInProgress<span class="token punctuation">,</span> renderLanes<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u4E0D\u80FD\u590D\u7528, \u521B\u5EFA\u65B0\u7684fiber\u8282\u70B9</span>
  workInProgress<span class="token punctuation">.</span>lanes <span class="token operator">=</span> NoLanes<span class="token punctuation">;</span> <span class="token comment">// \u91CD\u7F6E\u4F18\u5148\u7EA7\u4E3A NoLanes</span>
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>workInProgress<span class="token punctuation">.</span>tag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token literal-property property">ClassComponent</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> Component <span class="token operator">=</span> workInProgress<span class="token punctuation">.</span>type<span class="token punctuation">;</span>
      <span class="token keyword">const</span> unresolvedProps <span class="token operator">=</span> workInProgress<span class="token punctuation">.</span>pendingProps<span class="token punctuation">;</span>
      <span class="token keyword">const</span> resolvedProps <span class="token operator">=</span>
        workInProgress<span class="token punctuation">.</span>elementType <span class="token operator">===</span> Component
          <span class="token operator">?</span> unresolvedProps
          <span class="token operator">:</span> <span class="token function">resolveDefaultProps</span><span class="token punctuation">(</span>Component<span class="token punctuation">,</span> unresolvedProps<span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token keyword">return</span> <span class="token function">updateClassComponent</span><span class="token punctuation">(</span>
        current<span class="token punctuation">,</span>
        workInProgress<span class="token punctuation">,</span>
        Component<span class="token punctuation">,</span>
        resolvedProps<span class="token punctuation">,</span>
        <span class="token comment">// \u6B63\u5E38\u60C5\u51B5\u60F3\u6E32\u67D3\u4F18\u5148\u7EA7\u4F1A\u88AB\u7528\u4E8Efiber\u6811\u7684\u6784\u9020\u8FC7\u7A0B</span>
        renderLanes<span class="token punctuation">,</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6808\u5E27\u7BA1\u7406" tabindex="-1"><a class="header-anchor" href="#\u6808\u5E27\u7BA1\u7406" aria-hidden="true">#</a> \u6808\u5E27\u7BA1\u7406</h3><p>\u5728<code>React</code>\u6E90\u7801\u4E2D, \u6BCF\u4E00\u6B21\u6267\u884C<code>fiber\u6811</code>\u6784\u9020(\u4E5F\u5C31\u662F\u8C03\u7528<code>performSyncWorkOnRoot</code>\u6216\u8005<code>performConcurrentWorkOnRoot</code>\u51FD\u6570)\u7684\u8FC7\u7A0B, \u90FD\u9700\u8981\u4E00\u4E9B\u5168\u5C40\u53D8\u91CF\u6765\u4FDD\u5B58\u72B6\u6001. \u5728\u4E0A\u6587\u4E2D\u5DF2\u7ECF\u4ECB\u7ECD\u6700\u6838\u5FC3\u7684\u5168\u5C40\u53D8\u91CF.</p>`,3),ne=n("\u5982\u679C\u4ECE\u5355\u4E2A\u53D8\u91CF\u6765\u770B, \u5B83\u4EEC\u5C31\u662F\u4E00\u4E2A\u4E2A\u7684\u5168\u5C40\u53D8\u91CF. \u5982\u679C\u5C06\u8FD9\u4E9B\u5168\u5C40\u53D8\u91CF\u7EC4\u5408\u8D77\u6765, \u5B83\u4EEC\u4EE3\u8868\u4E86\u5F53\u524D"),se=s("code",null,"fiber\u6811",-1),ae=n("\u6784\u9020\u7684\u6D3B\u52A8\u8BB0\u5F55. \u901A\u8FC7\u8FD9\u4E00\u7EC4\u5168\u5C40\u53D8\u91CF, \u53EF\u4EE5\u8FD8\u539F"),ee=s("code",null,"fiber\u6811",-1),oe=n("\u6784\u9020\u8FC7\u7A0B(\u6BD4\u5982\u65F6\u95F4\u5207\u7247\u7684\u5B9E\u73B0\u8FC7\u7A0B(\u53C2\u8003"),te=n("React \u8C03\u5EA6\u539F\u7406"),pe=n("), "),ce=s("code",null,"fiber\u6811",-1),le=n("\u6784\u9020\u8FC7\u7A0B\u88AB\u6253\u65AD\u4E4B\u540E\u9700\u8981\u8FD8\u539F\u8FDB\u5EA6, \u5168\u9760\u8FD9\u4E00\u7EC4\u5168\u5C40\u53D8\u91CF). \u6240\u4EE5\u6BCF\u6B21"),ie=s("code",null,"fiber\u6811",-1),re=n("\u6784\u9020\u662F\u4E00\u4E2A\u72EC\u7ACB\u7684\u8FC7\u7A0B, \u9700\u8981"),ue=s("code",null,"\u72EC\u7ACB\u7684",-1),de=n("\u4E00\u7EC4\u5168\u5C40\u53D8\u91CF, \u5728"),ke=s("code",null,"React",-1),ve=n("\u5185\u90E8\u628A\u8FD9\u4E00\u4E2A\u72EC\u7ACB\u7684\u8FC7\u7A0B\u5C01\u88C5\u4E3A\u4E00\u4E2A\u6808\u5E27"),me=s("code",null,"stack",-1),be=n("(\u7B80\u5355\u6765\u8BF4\u5C31\u662F\u6BCF\u6B21\u6784\u9020\u90FD\u9700\u8981\u72EC\u7ACB\u7684\u7A7A\u95F4. \u5BF9\u4E8E"),_e=s("code",null,"\u6808\u5E27",-1),he=n("\u7684\u6DF1\u5165\u7406\u89E3, \u8BF7\u8BFB\u8005\u81EA\u884C\u53C2\u8003\u5176\u4ED6\u8D44\u6599)."),fe=n("\u6240\u4EE5\u5728\u8FDB\u884C"),ye=s("code",null,"fiber\u6811",-1),ge=n("\u6784\u9020\u4E4B\u524D, \u5982\u679C\u4E0D\u9700\u8981\u6062\u590D\u4E0A\u4E00\u6B21\u6784\u9020\u8FDB\u5EA6, \u90FD\u4F1A\u5237\u65B0\u6808\u5E27(\u6E90\u7801\u5728"),we={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberWorkLoop.old.js#L1301-L1337",target:"_blank",rel:"noopener noreferrer"},Le=n("prepareFreshStack \u51FD\u6570"),Re=n(")"),xe=o(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">renderRootConcurrent</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">root</span><span class="token operator">:</span> FiberRoot<span class="token punctuation">,</span> <span class="token literal-property property">lanes</span><span class="token operator">:</span> Lanes</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> prevExecutionContext <span class="token operator">=</span> executionContext<span class="token punctuation">;</span>
  executionContext <span class="token operator">|=</span> RenderContext<span class="token punctuation">;</span>
  <span class="token keyword">const</span> prevDispatcher <span class="token operator">=</span> <span class="token function">pushDispatcher</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u5982\u679CfiberRoot\u53D8\u52A8, \u6216\u8005update.lane\u53D8\u52A8, \u90FD\u4F1A\u5237\u65B0\u6808\u5E27, \u4E22\u5F03\u4E0A\u4E00\u6B21\u6E32\u67D3\u8FDB\u5EA6</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>workInProgressRoot <span class="token operator">!==</span> root <span class="token operator">||</span> workInProgressRootRenderLanes <span class="token operator">!==</span> lanes<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">resetRenderTimer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5237\u65B0\u6808\u5E27</span>
    <span class="token function">prepareFreshStack</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> lanes<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">startWorkOnPendingInteractions</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> lanes<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
\u5237\u65B0\u6808\u5E27: \u91CD\u7F6E FiberRoot\u4E0A\u7684\u5168\u5C40\u5C5E\u6027 \u548C \`fiber\u6811\u6784\u9020\`\u5FAA\u73AF\u8FC7\u7A0B\u4E2D\u7684\u5168\u5C40\u53D8\u91CF
*/</span>
<span class="token keyword">function</span> <span class="token function">prepareFreshStack</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">root</span><span class="token operator">:</span> FiberRoot<span class="token punctuation">,</span> <span class="token literal-property property">lanes</span><span class="token operator">:</span> Lanes</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u91CD\u7F6EFiberRoot\u5BF9\u8C61\u4E0A\u7684\u5C5E\u6027</span>
  root<span class="token punctuation">.</span>finishedWork <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  root<span class="token punctuation">.</span>finishedLanes <span class="token operator">=</span> NoLanes<span class="token punctuation">;</span>
  <span class="token keyword">const</span> timeoutHandle <span class="token operator">=</span> root<span class="token punctuation">.</span>timeoutHandle<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>timeoutHandle <span class="token operator">!==</span> noTimeout<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    root<span class="token punctuation">.</span>timeoutHandle <span class="token operator">=</span> noTimeout<span class="token punctuation">;</span>
    <span class="token function">cancelTimeout</span><span class="token punctuation">(</span>timeoutHandle<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>workInProgress <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> interruptedWork <span class="token operator">=</span> workInProgress<span class="token punctuation">.</span>return<span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>interruptedWork <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">unwindInterruptedWork</span><span class="token punctuation">(</span>interruptedWork<span class="token punctuation">)</span><span class="token punctuation">;</span>
      interruptedWork <span class="token operator">=</span> interruptedWork<span class="token punctuation">.</span>return<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u91CD\u7F6E\u5168\u5C40\u53D8\u91CF</span>
  workInProgressRoot <span class="token operator">=</span> root<span class="token punctuation">;</span>
  workInProgress <span class="token operator">=</span> <span class="token function">createWorkInProgress</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>current<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u7ED9HostRootFiber\u5BF9\u8C61\u521B\u5EFA\u4E00\u4E2Aalternate, \u5E76\u5C06\u5176\u8BBE\u7F6E\u6210\u5168\u5C40 workInProgress</span>
  workInProgressRootRenderLanes <span class="token operator">=</span> subtreeRenderLanes <span class="token operator">=</span> workInProgressRootIncludedLanes <span class="token operator">=</span> lanes<span class="token punctuation">;</span>
  workInProgressRootExitStatus <span class="token operator">=</span> RootIncomplete<span class="token punctuation">;</span>
  workInProgressRootFatalError <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  workInProgressRootSkippedLanes <span class="token operator">=</span> NoLanes<span class="token punctuation">;</span>
  workInProgressRootUpdatedLanes <span class="token operator">=</span> NoLanes<span class="token punctuation">;</span>
  workInProgressRootPingedLanes <span class="token operator">=</span> NoLanes<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\u5176\u4E2D\u7684<code>createWorkInProgress(root.current, null)</code>, \u5176\u53C2\u6570<code>root.current</code>\u5373<code>HostRootFiber</code>, \u4F5C\u7528\u662F\u7ED9<code>HostRootFiber</code>\u521B\u5EFA\u4E00\u4E2A<code>alternate</code>\u526F\u672C.<code>workInProgress</code>\u6307\u9488\u6307\u5411\u8FD9\u4E2A\u526F\u672C(\u5373<code>workInProgress = HostRootFiber.alternate</code>), \u5728\u4E0A\u6587<code>double buffering</code>\u4E2D\u5206\u6790\u8FC7, <code>HostRootFiber.alternate</code>\u662F<code>\u6B63\u5728\u6784\u9020\u7684fiber\u6811</code>\u7684\u6839\u8282\u70B9.</p><h2 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h2><p>\u672C\u8282\u662F<code>fiber\u6811\u6784\u9020</code>\u7684\u51C6\u5907\u7BC7, \u9996\u5148\u5728\u5B8F\u89C2\u4E0A\u4ECE\u4E0D\u540C\u7684\u89C6\u89D2(<code>\u4EFB\u52A1\u8C03\u5EA6\u5FAA\u73AF</code>, <code>fiber\u6811\u6784\u9020\u5FAA\u73AF</code>)\u4ECB\u7ECD\u4E86<code>fiber\u6811\u6784\u9020</code>\u5728<code>React</code>\u4F53\u7CFB\u4E2D\u6240\u5904\u7684\u4F4D\u7F6E, \u7136\u540E\u6DF1\u5165<code>react-reconciler</code>\u5305\u5206\u6790<code>fiber\u6811\u6784\u9020</code>\u8FC7\u7A0B\u4E2D\u9700\u8981\u4F7F\u7528\u5230\u7684\u5168\u5C40\u53D8\u91CF, \u5E76\u89E3\u8BFB\u4E86<code>\u53CC\u7F13\u51B2\u6280\u672F</code>\u548C<code>\u4F18\u5148\u7EA7(\u8F66\u9053\u6A21\u578B)</code>\u7684\u4F7F\u7528, \u6700\u540E\u89E3\u91CA<code>\u6808\u5E27\u7BA1\u7406</code>\u7684\u5B9E\u73B0\u7EC6\u8282. \u6709\u4E86\u8FD9\u4E9B\u57FA\u7840\u77E5\u8BC6, <code>fiber\u6811\u6784\u9020</code>\u7684\u5177\u4F53\u5B9E\u73B0\u8FC7\u7A0B\u4F1A\u66F4\u52A0\u7B80\u5355\u6E05\u6670.</p>`,4);function Pe(c,Ce){const t=l("RouterLink"),e=l("ExternalLinkIcon");return r(),u("div",null,[k,v,s("p",null,[m,b,_,a(t,{to:"/react-illustration-series/main/reconciler-workflow.html"},{default:p(()=>[h]),_:1}),f]),s("img",{src:c.$withBase("/assets/react-illustration-series/reactfiberworkloop.png"),alt:"demo"},null,8,y),s("ol",null,[s("li",null,[g,w,L,R,x,a(t,{to:"/react-illustration-series/main/bootstrap.html"},{default:p(()=>[P]),_:1}),C]),s("li",null,[I,N,S,j,E,a(t,{to:"/react-illustration-series/main/scheduler.html"},{default:p(()=>[F]),_:1}),T]),U,W]),O,s("ul",null,[D,s("li",null,[M,a(t,{to:"/react-illustration-series/main/workloop.html"},{default:p(()=>[B]),_:1}),q,H,A])]),Q,s("p",null,[V,a(t,{to:"/react-illustration-series/main/object-structure.html"},{default:p(()=>[$]),_:1}),z,J,X,G,K,Y,Z]),s("ol",null,[s("li",null,[s("p",null,[s("a",nn,[sn,a(e)]),an,s("a",en,[on,a(e)]),tn]),pn]),s("li",null,[s("p",null,[s("a",cn,[ln,a(e)]),rn,s("a",un,[dn,a(e)]),kn]),vn]),s("li",null,[s("p",null,[s("a",mn,[bn,a(e)]),_n]),hn])]),fn,s("img",{src:c.$withBase("/assets/react-illustration-series/code2dom.png"),alt:"demo"},null,8,yn),gn,s("p",null,[wn,a(t,{to:"/react-illustration-series/main/workloop.html"},{default:p(()=>[Ln]),_:1}),Rn,xn,Pn,s("a",Cn,[In,a(e)]),Nn]),s("p",null,[Sn,jn,En,Fn,Tn,Un,Wn,On,Dn,s("a",Mn,[Bn,a(e)]),qn]),Hn,s("p",null,[An,Qn,Vn,$n,zn,Jn,Xn,Gn,Kn,a(t,{to:"/react-illustration-series/algorithm/bitfiled.html"},{default:p(()=>[Yn]),_:1}),Zn]),ns,s("p",null,[ss,as,es,os,ts,s("a",ps,[cs,a(e)]),ls]),is,s("p",null,[rs,us,ds,ks,vs,a(t,{to:"/react-illustration-series/main/bootstrap.html"},{default:p(()=>[ms]),_:1}),bs]),_s,hs,s("img",{src:c.$withBase("/assets/react-illustration-series/fibertreecreate1-progress.png"),alt:"demo"},null,8,fs),ys,s("img",{src:c.$withBase("/assets/react-illustration-series/fibertreecreate2-complete.png"),alt:"demo"},null,8,gs),ws,Ls,s("p",null,[Rs,a(t,{to:"/react-illustration-series/main/priority.html"},{default:p(()=>[xs]),_:1}),Ps,Cs,Is,Ns,Ss,js,Es]),Fs,Ts,s("p",null,[Us,a(t,{to:"/react-illustration-series/main/object-structure.html#Update"},{default:p(()=>[Ws]),_:1}),Os,Ds,Ms,Bs,qs,Hs,As,Qs,Vs]),s("p",null,[$s,s("a",zs,[Js,a(e)]),Xs]),Gs,s("ol",null,[s("li",null,[Ks,Ys,Zs,na,sa,s("a",aa,[ea,a(e)]),oa]),s("li",null,[ta,pa,ca,s("a",la,[ia,a(e)]),ra])]),ua,s("p",null,[s("a",da,[ka,a(e)]),va]),ma,s("ol",null,[ba,_a,s("li",null,[ha,s("ul",null,[fa,s("li",null,[ya,ga,wa,La,Ra,s("a",xa,[Pa,a(e)]),Ca])])])]),Ia,s("p",null,[Na,Sa,ja,Ea,Fa,Ta,Ua,Wa,Oa,s("a",Da,[Ma,a(e)]),Ba]),qa,s("p",null,[Ha,a(t,{to:"/react-illustration-series/main/object-structure.html"},{default:p(()=>[Aa]),_:1}),Qa,Va,$a]),s("ol",null,[za,s("li",null,[Ja,s("a",Xa,[Ga,a(e)]),Ka,Ya])]),Za,s("p",null,[ne,se,ae,ee,oe,a(t,{to:"/react-illustration-series/main/scheduler.html#%E5%86%85%E6%A0%B8"},{default:p(()=>[te]),_:1}),pe,ce,le,ie,re,ue,de,ke,ve,me,be,_e,he]),s("p",null,[fe,ye,ge,s("a",we,[Le,a(e)]),Re]),xe])}var Se=i(d,[["render",Pe],["__file","fibertree-prepare.html.vue"]]);export{Se as default};
