import{_ as o}from"./plugin-vue_export-helper.21dcd24c.js";import{r as p,o as c,c as l,b as s,d as e,a as t,e as n}from"./app.492d0a9d.js";const i={},r=t(`<p><code>Redux</code>\u7684\u4F5C\u8005<code>Dan</code>\u52A0\u5165<code>React</code>\u6838\u5FC3\u56E2\u961F\u540E\u7684\u4E00\u5927\u8D21\u732E\u5C31\u662F\u201C\u5C06<code>Redux</code>\u7684\u7406\u5FF5\u5E26\u5165<code>React</code>\u201D\u3002</p><p>\u8FD9\u91CC\u9762\u6700\u663E\u800C\u6613\u89C1\u7684\u5F71\u54CD\u83AB\u8FC7\u4E8E<code>useState</code>\u4E0E<code>useReducer</code>\u8FD9\u4E24\u4E2A<code>Hook</code>\u3002\u672C\u8D28\u6765\u8BF4\uFF0C<code>useState</code>\u53EA\u662F\u9884\u7F6E\u4E86<code>reducer</code>\u7684<code>useReducer</code>\u3002</p><p>\u672C\u8282\u6765\u5B66\u4E60<code>useState</code>\u4E0E<code>useReducer</code>\u7684\u5B9E\u73B0\u3002</p><h2 id="\u6D41\u7A0B\u6982\u89C8" tabindex="-1"><a class="header-anchor" href="#\u6D41\u7A0B\u6982\u89C8" aria-hidden="true">#</a> \u6D41\u7A0B\u6982\u89C8</h2><p>\u5C06\u8FD9\u4E24\u4E2A<code>Hook</code>\u7684\u5DE5\u4F5C\u6D41\u7A0B\u5206\u4E3A<code>\u58F0\u660E\u9636\u6BB5</code>\u548C<code>\u8C03\u7528\u9636\u6BB5</code>\uFF0C\u5BF9\u4E8E\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>state<span class="token punctuation">,</span> dispatch<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useReducer</span><span class="token punctuation">(</span>reducer<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token punctuation">[</span>num<span class="token punctuation">,</span> updateNum<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">{</span>state<span class="token punctuation">.</span>a<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>  
      <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">updateNum</span><span class="token punctuation">(</span><span class="token parameter">num</span> <span class="token operator">=&gt;</span> num <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">{</span>num<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>  
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>\u58F0\u660E\u9636\u6BB5</code>\u5373<code>App</code>\u8C03\u7528\u65F6\uFF0C\u4F1A\u4F9D\u6B21\u6267\u884C<code>useReducer</code>\u4E0E<code>useState</code>\u65B9\u6CD5\u3002</p><p><code>\u8C03\u7528\u9636\u6BB5</code>\u5373\u70B9\u51FB\u6309\u94AE\u540E\uFF0C<code>dispatch</code>\u6216<code>updateNum</code>\u88AB\u8C03\u7528\u65F6\u3002</p><h2 id="\u58F0\u660E\u9636\u6BB5" tabindex="-1"><a class="header-anchor" href="#\u58F0\u660E\u9636\u6BB5" aria-hidden="true">#</a> \u58F0\u660E\u9636\u6BB5</h2>`,9),d=n("\u5F53"),u=s("code",null,"FunctionComponent",-1),k=n("\u8FDB\u5165"),v=s("code",null,"render\u9636\u6BB5",-1),m=n("\u7684"),b=s("code",null,"beginWork",-1),h=n("\u65F6\uFF0C\u4F1A\u8C03\u7528"),_={href:"https://github.com/acdlite/react/blob/1fb18e22ae66fdb1dc127347e169e73948778e5a/packages/react-reconciler/src/ReactFiberBeginWork.new.js#L1419",target:"_blank",rel:"noopener noreferrer"},g=n("renderWithHooks"),y=n("\u65B9\u6CD5\u3002"),f=s("p",null,[n("\u8BE5\u65B9\u6CD5\u5185\u90E8\u4F1A\u6267\u884C"),s("code",null,"FunctionComponent"),n("\u5BF9\u5E94\u51FD\u6570\uFF08\u5373"),s("code",null,"fiber.type"),n("\uFF09\u3002")],-1),R=n("\u4F60\u53EF\u4EE5\u5728"),w={href:"https://github.com/acdlite/react/blob/1fb18e22ae66fdb1dc127347e169e73948778e5a/packages/react-reconciler/src/ReactFiberHooks.new.js#L415",target:"_blank",rel:"noopener noreferrer"},S=n("\u8FD9\u91CC"),j=n("\u770B\u5230\u8FD9\u6BB5\u903B\u8F91"),x=t(`<p>\u5BF9\u4E8E\u8FD9\u4E24\u4E2A<code>Hook</code>\uFF0C\u4ED6\u4EEC\u7684\u6E90\u7801\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token parameter">initialState</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> dispatcher <span class="token operator">=</span> <span class="token function">resolveDispatcher</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> dispatcher<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span>initialState<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">useReducer</span><span class="token punctuation">(</span><span class="token parameter">reducer<span class="token punctuation">,</span> initialArg<span class="token punctuation">,</span> init</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> dispatcher <span class="token operator">=</span> <span class="token function">resolveDispatcher</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> dispatcher<span class="token punctuation">.</span><span class="token function">useReducer</span><span class="token punctuation">(</span>reducer<span class="token punctuation">,</span> initialArg<span class="token punctuation">,</span> init<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),q=n("\u6B63\u5982\u4E0A\u4E00\u8282"),A={href:"/react/hooks/structure#dispatcher",target:"_blank",rel:"noopener noreferrer"},H=n("dispatcher"),I=n("\u6240\u8BF4\uFF0C\u5728\u4E0D\u540C\u573A\u666F\u4E0B\uFF0C\u540C\u4E00\u4E2A"),F=s("code",null,"Hook",-1),N=n("\u4F1A\u8C03\u7528\u4E0D\u540C\u5904\u7406\u51FD\u6570\u3002"),P=s("p",null,[n("\u5206\u522B\u8BB2\u89E3"),s("code",null,"mount"),n("\u4E0E"),s("code",null,"update"),n("\u4E24\u4E2A\u573A\u666F\u3002")],-1),L=s("h3",{id:"mount\u65F6",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#mount\u65F6","aria-hidden":"true"},"#"),n(" mount\u65F6")],-1),W=s("code",null,"mount",-1),C=n("\u65F6\uFF0C"),D=s("code",null,"useReducer",-1),B=n("\u4F1A\u8C03\u7528"),T={href:"https://github.com/acdlite/react/blob/1fb18e22ae66fdb1dc127347e169e73948778e5a/packages/react-reconciler/src/ReactFiberHooks.new.js#L638",target:"_blank",rel:"noopener noreferrer"},U=n("mountReducer"),z=n("\uFF0C"),V=s("code",null,"useState",-1),$=n("\u4F1A\u8C03\u7528"),E={href:"https://github.com/acdlite/react/blob/1fb18e22ae66fdb1dc127347e169e73948778e5a/packages/react-reconciler/src/ReactFiberHooks.new.js#L1143",target:"_blank",rel:"noopener noreferrer"},M=n("mountState"),O=n("\u3002"),Q=t(`<p>\u6765\u7B80\u5355\u5BF9\u6BD4\u8FD9\u8FD9\u4E24\u4E2A\u65B9\u6CD5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> mountState<span class="token operator">&lt;</span><span class="token constant">S</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>
  <span class="token literal-property property">initialState</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">S</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token constant">S</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token constant">S</span><span class="token punctuation">,</span> Dispatch<span class="token operator">&lt;</span>BasicStateAction<span class="token operator">&lt;</span><span class="token constant">S</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u521B\u5EFA\u5E76\u8FD4\u56DE\u5F53\u524D\u7684hook</span>
  <span class="token keyword">const</span> hook <span class="token operator">=</span> <span class="token function">mountWorkInProgressHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// ...\u8D4B\u503C\u521D\u59CBstate</span>

  <span class="token comment">// \u521B\u5EFAqueue</span>
  <span class="token keyword">const</span> queue <span class="token operator">=</span> <span class="token punctuation">(</span>hook<span class="token punctuation">.</span>queue <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">pending</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dispatch</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
    <span class="token literal-property property">lastRenderedReducer</span><span class="token operator">:</span> basicStateReducer<span class="token punctuation">,</span>
    <span class="token literal-property property">lastRenderedState</span><span class="token operator">:</span> <span class="token punctuation">(</span>initialState<span class="token operator">:</span> any<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// ...\u521B\u5EFAdispatch</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span>hook<span class="token punctuation">.</span>memoizedState<span class="token punctuation">,</span> dispatch<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> mountReducer<span class="token operator">&lt;</span><span class="token constant">S</span><span class="token punctuation">,</span> <span class="token constant">I</span><span class="token punctuation">,</span> <span class="token constant">A</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>
  <span class="token function-variable function">reducer</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token constant">S</span><span class="token punctuation">,</span> <span class="token constant">A</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">S</span><span class="token punctuation">,</span>
  <span class="token literal-property property">initialArg</span><span class="token operator">:</span> <span class="token constant">I</span><span class="token punctuation">,</span>
  init<span class="token operator">?</span><span class="token operator">:</span> <span class="token parameter"><span class="token constant">I</span></span> <span class="token operator">=&gt;</span> <span class="token constant">S</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token constant">S</span><span class="token punctuation">,</span> Dispatch<span class="token operator">&lt;</span><span class="token constant">A</span><span class="token operator">&gt;</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u521B\u5EFA\u5E76\u8FD4\u56DE\u5F53\u524D\u7684hook</span>
  <span class="token keyword">const</span> hook <span class="token operator">=</span> <span class="token function">mountWorkInProgressHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// ...\u8D4B\u503C\u521D\u59CBstate</span>

  <span class="token comment">// \u521B\u5EFAqueue</span>
  <span class="token keyword">const</span> queue <span class="token operator">=</span> <span class="token punctuation">(</span>hook<span class="token punctuation">.</span>queue <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">pending</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dispatch</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
    <span class="token literal-property property">lastRenderedReducer</span><span class="token operator">:</span> reducer<span class="token punctuation">,</span>
    <span class="token literal-property property">lastRenderedState</span><span class="token operator">:</span> <span class="token punctuation">(</span>initialState<span class="token operator">:</span> any<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// ...\u521B\u5EFAdispatch</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span>hook<span class="token punctuation">.</span>memoizedState<span class="token punctuation">,</span> dispatch<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u4E2D<code>mountWorkInProgressHook</code>\u65B9\u6CD5\u4F1A\u521B\u5EFA\u5E76\u8FD4\u56DE\u5BF9\u5E94<code>hook</code>\uFF0C\u5BF9\u5E94<code>\u6781\u7B80Hooks\u5B9E\u73B0</code>\u4E2D<code>useState</code>\u65B9\u6CD5\u7684<code>isMount</code>\u903B\u8F91\u90E8\u5206\u3002</p><p>\u53EF\u4EE5\u770B\u5230\uFF0C<code>mount</code>\u65F6\u8FD9\u4E24\u4E2A<code>Hook</code>\u7684\u552F\u4E00\u533A\u522B\u4E3A<code>queue</code>\u53C2\u6570\u7684<code>lastRenderedReducer</code>\u5B57\u6BB5\u3002</p><p><code>queue</code>\u7684\u6570\u636E\u7ED3\u6784\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> queue <span class="token operator">=</span> <span class="token punctuation">(</span>hook<span class="token punctuation">.</span>queue <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u4E0E\u6781\u7B80\u5B9E\u73B0\u4E2D\u7684\u540C\u540D\u5B57\u6BB5\u610F\u4E49\u76F8\u540C\uFF0C\u4FDD\u5B58update\u5BF9\u8C61</span>
  <span class="token literal-property property">pending</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
  <span class="token comment">// \u4FDD\u5B58dispatchAction.bind()\u7684\u503C</span>
  <span class="token literal-property property">dispatch</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
  <span class="token comment">// \u4E0A\u4E00\u6B21render\u65F6\u4F7F\u7528\u7684reducer</span>
  <span class="token literal-property property">lastRenderedReducer</span><span class="token operator">:</span> reducer<span class="token punctuation">,</span>
  <span class="token comment">// \u4E0A\u4E00\u6B21render\u65F6\u7684state</span>
  <span class="token literal-property property">lastRenderedState</span><span class="token operator">:</span> <span class="token punctuation">(</span>initialState<span class="token operator">:</span> any<span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u4E2D\uFF0C<code>useReducer</code>\u7684<code>lastRenderedReducer</code>\u4E3A\u4F20\u5165\u7684<code>reducer</code>\u53C2\u6570\u3002<code>useState</code>\u7684<code>lastRenderedReducer</code>\u4E3A<code>basicStateReducer</code>\u3002</p><p><code>basicStateReducer</code>\u65B9\u6CD5\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> basicStateReducer<span class="token operator">&lt;</span><span class="token constant">S</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>state<span class="token operator">:</span> <span class="token constant">S</span><span class="token punctuation">,</span> <span class="token literal-property property">action</span><span class="token operator">:</span> BasicStateAction<span class="token operator">&lt;</span><span class="token constant">S</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">S</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">typeof</span> action <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span> <span class="token operator">?</span> <span class="token function">action</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token operator">:</span> action<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u89C1\uFF0C<code>useState</code>\u5373<code>reducer</code>\u53C2\u6570\u4E3A<code>basicStateReducer</code>\u7684<code>useReducer</code>\u3002</p><p><code>mount</code>\u65F6\u7684\u6574\u4F53\u8FD0\u884C\u903B\u8F91\u4E0E<code>\u6781\u7B80\u5B9E\u73B0</code>\u7684<code>isMount</code>\u903B\u8F91\u7C7B\u4F3C\uFF0C\u4F60\u53EF\u4EE5\u5BF9\u7167\u7740\u770B\u3002</p><h3 id="update\u65F6" tabindex="-1"><a class="header-anchor" href="#update\u65F6" aria-hidden="true">#</a> update\u65F6</h3>`,12),G=n("\u5982\u679C\u8BF4"),J=s("code",null,"mount",-1),K=n("\u65F6\u8FD9\u4E24\u8005\u8FD8\u6709\u533A\u522B\uFF0C\u90A3"),X=s("code",null,"update",-1),Y=n("\u65F6\uFF0C"),Z=s("code",null,"useReducer",-1),nn=n("\u4E0E"),sn=s("code",null,"useState",-1),an=n("\u8C03\u7528\u7684\u5219\u662F\u540C\u4E00\u4E2A\u51FD\u6570"),en={href:"https://github.com/acdlite/react/blob/1fb18e22ae66fdb1dc127347e169e73948778e5a/packages/react-reconciler/src/ReactFiberHooks.new.js#L665",target:"_blank",rel:"noopener noreferrer"},tn=n("updateReducer"),on=n("\u3002"),pn=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> updateReducer<span class="token operator">&lt;</span><span class="token constant">S</span><span class="token punctuation">,</span> <span class="token constant">I</span><span class="token punctuation">,</span> <span class="token constant">A</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>
  <span class="token function-variable function">reducer</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token constant">S</span><span class="token punctuation">,</span> <span class="token constant">A</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">S</span><span class="token punctuation">,</span>
  <span class="token literal-property property">initialArg</span><span class="token operator">:</span> <span class="token constant">I</span><span class="token punctuation">,</span>
  init<span class="token operator">?</span><span class="token operator">:</span> <span class="token parameter"><span class="token constant">I</span></span> <span class="token operator">=&gt;</span> <span class="token constant">S</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token constant">S</span><span class="token punctuation">,</span> Dispatch<span class="token operator">&lt;</span><span class="token constant">A</span><span class="token operator">&gt;</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u83B7\u53D6\u5F53\u524Dhook</span>
  <span class="token keyword">const</span> hook <span class="token operator">=</span> <span class="token function">updateWorkInProgressHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> queue <span class="token operator">=</span> hook<span class="token punctuation">.</span>queue<span class="token punctuation">;</span>
  
  queue<span class="token punctuation">.</span>lastRenderedReducer <span class="token operator">=</span> reducer<span class="token punctuation">;</span>

  <span class="token comment">// ...\u540Cupdate\u4E0EupdateQueue\u7C7B\u4F3C\u7684\u66F4\u65B0\u903B\u8F91</span>

  <span class="token keyword">const</span> <span class="token literal-property property">dispatch</span><span class="token operator">:</span> Dispatch<span class="token operator">&lt;</span><span class="token constant">A</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">(</span>queue<span class="token punctuation">.</span>dispatch<span class="token operator">:</span> any<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span>hook<span class="token punctuation">.</span>memoizedState<span class="token punctuation">,</span> dispatch<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6574\u4E2A\u6D41\u7A0B\u53EF\u4EE5\u6982\u62EC\u4E3A\u4E00\u53E5\u8BDD\uFF1A</p><blockquote><p>\u627E\u5230\u5BF9\u5E94\u7684<code>hook</code>\uFF0C\u6839\u636E<code>update</code>\u8BA1\u7B97\u8BE5<code>hook</code>\u7684\u65B0<code>state</code>\u5E76\u8FD4\u56DE\u3002</p></blockquote><p><code>mount</code>\u65F6\u83B7\u53D6\u5F53\u524D<code>hook</code>\u4F7F\u7528\u7684\u662F<code>mountWorkInProgressHook</code>\uFF0C\u800C<code>update</code>\u65F6\u4F7F\u7528\u7684\u662F<code>updateWorkInProgressHook</code>\uFF0C\u8FD9\u91CC\u7684\u539F\u56E0\u662F\uFF1A</p><ul><li><p><code>mount</code>\u65F6\u53EF\u4EE5\u786E\u5B9A\u662F\u8C03\u7528<code>ReactDOM.render</code>\u6216\u76F8\u5173\u521D\u59CB\u5316<code>API</code>\u4EA7\u751F\u7684<code>\u66F4\u65B0</code>\uFF0C\u53EA\u4F1A\u6267\u884C\u4E00\u6B21\u3002</p></li><li><p><code>update</code>\u53EF\u80FD\u662F\u5728\u4E8B\u4EF6\u56DE\u8C03\u6216\u526F\u4F5C\u7528\u4E2D\u89E6\u53D1\u7684<code>\u66F4\u65B0</code>\u6216\u8005\u662F<code>render\u9636\u6BB5</code>\u89E6\u53D1\u7684<code>\u66F4\u65B0</code>\uFF0C\u4E3A\u4E86\u907F\u514D\u7EC4\u4EF6\u65E0\u9650\u5FAA\u73AF<code>\u66F4\u65B0</code>\uFF0C\u540E\u8005\u9700\u8981\u533A\u522B\u5BF9\u5F85\u3002</p></li></ul><p>\u4E3E\u4E2A<code>render\u9636\u6BB5</code>\u89E6\u53D1\u7684<code>\u66F4\u65B0</code>\u7684\u4F8B\u5B50\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>num<span class="token punctuation">,</span> updateNum<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  
  <span class="token function">updateNum</span><span class="token punctuation">(</span>num <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">updateNum</span><span class="token punctuation">(</span><span class="token parameter">num</span> <span class="token operator">=&gt;</span> num <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">{</span>num<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>  
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u8FD9\u4E2A\u4F8B\u5B50\u4E2D\uFF0C<code>App</code>\u8C03\u7528\u65F6\uFF0C\u4EE3\u8868\u5DF2\u7ECF\u8FDB\u5165<code>render\u9636\u6BB5</code>\u6267\u884C<code>renderWithHooks</code>\u3002</p><p>\u5728<code>App</code>\u5185\u90E8\uFF0C\u8C03\u7528<code>updateNum</code>\u4F1A\u89E6\u53D1\u4E00\u6B21<code>\u66F4\u65B0</code>\u3002\u5982\u679C\u4E0D\u5BF9\u8FD9\u79CD\u60C5\u51B5\u4E0B\u89E6\u53D1\u7684\u66F4\u65B0\u4F5C\u51FA\u9650\u5236\uFF0C\u90A3\u4E48\u8FD9\u6B21<code>\u66F4\u65B0</code>\u4F1A\u5F00\u542F\u4E00\u6B21\u65B0\u7684<code>render\u9636\u6BB5</code>\uFF0C\u6700\u7EC8\u4F1A\u65E0\u9650\u5FAA\u73AF\u66F4\u65B0\u3002</p><p>\u57FA\u4E8E\u8FD9\u4E2A\u539F\u56E0\uFF0C<code>React</code>\u7528\u4E00\u4E2A\u6807\u8BB0\u53D8\u91CF<code>didScheduleRenderPhaseUpdate</code>\u5224\u65AD\u662F\u5426\u662F<code>render\u9636\u6BB5</code>\u89E6\u53D1\u7684\u66F4\u65B0\u3002</p><p><code>updateWorkInProgressHook</code>\u65B9\u6CD5\u4E5F\u4F1A\u533A\u5206\u8FD9\u4E24\u79CD\u60C5\u51B5\u6765\u83B7\u53D6\u5BF9\u5E94<code>hook</code>\u3002</p>`,11),cn=n("\u83B7\u53D6\u5BF9\u5E94"),ln=s("code",null,"hook",-1),rn=n("\uFF0C\u63A5\u4E0B\u6765\u4F1A\u6839\u636E"),dn=s("code",null,"hook",-1),un=n("\u4E2D\u4FDD\u5B58\u7684"),kn=s("code",null,"state",-1),vn=n("\u8BA1\u7B97\u65B0\u7684"),mn=s("code",null,"state",-1),bn=n("\uFF0C\u8FD9\u4E2A\u6B65\u9AA4\u540C"),hn={href:"/react/state/update",target:"_blank",rel:"noopener noreferrer"},_n=n("Update\u4E00\u8282"),gn=n("\u4E00\u81F4\u3002"),yn=s("h2",{id:"\u8C03\u7528\u9636\u6BB5",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u8C03\u7528\u9636\u6BB5","aria-hidden":"true"},"#"),n(" \u8C03\u7528\u9636\u6BB5")],-1),fn=n("\u8C03\u7528\u9636\u6BB5\u4F1A\u6267\u884C"),Rn={href:"https://github.com/acdlite/react/blob/1fb18e22ae66fdb1dc127347e169e73948778e5a/packages/react-reconciler/src/ReactFiberHooks.new.js#L1662",target:"_blank",rel:"noopener noreferrer"},wn=n("dispatchAction"),Sn=n("\uFF0C\u6B64\u65F6\u8BE5"),jn=s("code",null,"FunctionComponent",-1),xn=n("\u5BF9\u5E94\u7684"),qn=s("code",null,"fiber",-1),An=n("\u4EE5\u53CA"),Hn=s("code",null,"hook.queue",-1),In=n("\u5DF2\u7ECF\u901A\u8FC7\u8C03\u7528"),Fn=s("code",null,"bind",-1),Nn=n("\u65B9\u6CD5\u9884\u5148\u4F5C\u4E3A\u53C2\u6570\u4F20\u5165\u3002"),Pn=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">dispatchAction</span><span class="token punctuation">(</span><span class="token parameter">fiber<span class="token punctuation">,</span> queue<span class="token punctuation">,</span> action</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

  <span class="token comment">// ...\u521B\u5EFAupdate</span>
  <span class="token keyword">var</span> update <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">eventTime</span><span class="token operator">:</span> eventTime<span class="token punctuation">,</span>
    <span class="token literal-property property">lane</span><span class="token operator">:</span> lane<span class="token punctuation">,</span>
    <span class="token literal-property property">suspenseConfig</span><span class="token operator">:</span> suspenseConfig<span class="token punctuation">,</span>
    <span class="token literal-property property">action</span><span class="token operator">:</span> action<span class="token punctuation">,</span>
    <span class="token literal-property property">eagerReducer</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
    <span class="token literal-property property">eagerState</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
    <span class="token literal-property property">next</span><span class="token operator">:</span> <span class="token keyword">null</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span> 

  <span class="token comment">// ...\u5C06update\u52A0\u5165queue.pending</span>
  
  <span class="token keyword">var</span> alternate <span class="token operator">=</span> fiber<span class="token punctuation">.</span>alternate<span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>fiber <span class="token operator">===</span> currentlyRenderingFiber$1 <span class="token operator">||</span> alternate <span class="token operator">!==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> alternate <span class="token operator">===</span> currentlyRenderingFiber$1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// render\u9636\u6BB5\u89E6\u53D1\u7684\u66F4\u65B0</span>
    didScheduleRenderPhaseUpdateDuringThisPass <span class="token operator">=</span> didScheduleRenderPhaseUpdate <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>fiber<span class="token punctuation">.</span>lanes <span class="token operator">===</span> NoLanes <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>alternate <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token operator">||</span> alternate<span class="token punctuation">.</span>lanes <span class="token operator">===</span> NoLanes<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// ...fiber\u7684updateQueue\u4E3A\u7A7A\uFF0C\u4F18\u5316\u8DEF\u5F84</span>
    <span class="token punctuation">}</span>

    <span class="token function">scheduleUpdateOnFiber</span><span class="token punctuation">(</span>fiber<span class="token punctuation">,</span> lane<span class="token punctuation">,</span> eventTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6574\u4E2A\u8FC7\u7A0B\u53EF\u4EE5\u6982\u62EC\u4E3A\uFF1A</p><blockquote><p>\u521B\u5EFA<code>update</code>\uFF0C\u5C06<code>update</code>\u52A0\u5165<code>queue.pending</code>\u4E2D\uFF0C\u5E76\u5F00\u542F\u8C03\u5EA6\u3002</p></blockquote><p>\u8FD9\u91CC\u503C\u5F97\u6CE8\u610F\u7684\u662F<code>if...else...</code>\u903B\u8F91\uFF0C\u5176\u4E2D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>fiber <span class="token operator">===</span> currentlyRenderingFiber$1 <span class="token operator">||</span> alternate <span class="token operator">!==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> alternate <span class="token operator">===</span> currentlyRenderingFiber$1<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>currentlyRenderingFiber</code>\u5373<code>workInProgress</code>\uFF0C<code>workInProgress</code>\u5B58\u5728\u4EE3\u8868\u5F53\u524D\u5904\u4E8E<code>render\u9636\u6BB5</code>\u3002</p><p>\u89E6\u53D1<code>\u66F4\u65B0</code>\u65F6\u901A\u8FC7<code>bind</code>\u9884\u5148\u4FDD\u5B58\u7684<code>fiber</code>\u4E0E<code>workInProgress</code>\u5168\u7B49\uFF0C\u4EE3\u8868\u672C\u6B21<code>\u66F4\u65B0</code>\u53D1\u751F\u4E8E<code>FunctionComponent</code>\u5BF9\u5E94<code>fiber</code>\u7684<code>render\u9636\u6BB5</code>\u3002</p><p>\u6240\u4EE5\u8FD9\u662F\u4E00\u4E2A<code>render\u9636\u6BB5</code>\u89E6\u53D1\u7684<code>\u66F4\u65B0</code>\uFF0C\u9700\u8981\u6807\u8BB0\u53D8\u91CF<code>didScheduleRenderPhaseUpdate</code>\uFF0C\u540E\u7EED\u5355\u72EC\u5904\u7406\u3002</p><p>\u518D\u6765\u5173\u6CE8\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>fiber<span class="token punctuation">.</span>lanes <span class="token operator">===</span> NoLanes <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>alternate <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token operator">||</span> alternate<span class="token punctuation">.</span>lanes <span class="token operator">===</span> NoLanes<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>fiber.lanes</code>\u4FDD\u5B58<code>fiber</code>\u4E0A\u5B58\u5728\u7684<code>update</code>\u7684<code>\u4F18\u5148\u7EA7</code>\u3002</p><p><code>fiber.lanes === NoLanes</code>\u610F\u5473\u7740<code>fiber</code>\u4E0A\u4E0D\u5B58\u5728<code>update</code>\u3002</p><p>\u5DF2\u7ECF\u77E5\u9053\uFF0C\u901A\u8FC7<code>update</code>\u8BA1\u7B97<code>state</code>\u53D1\u751F\u5728<code>\u7533\u660E\u9636\u6BB5</code>\uFF0C\u8FD9\u662F\u56E0\u4E3A\u8BE5<code>hook</code>\u4E0A\u53EF\u80FD\u5B58\u5728\u591A\u4E2A\u4E0D\u540C<code>\u4F18\u5148\u7EA7</code>\u7684<code>update</code>\uFF0C\u6700\u7EC8<code>state</code>\u7684\u503C\u7531\u591A\u4E2A<code>update</code>\u5171\u540C\u51B3\u5B9A\u3002</p><p>\u4F46\u662F\u5F53<code>fiber</code>\u4E0A\u4E0D\u5B58\u5728<code>update</code>\uFF0C\u5219<code>\u8C03\u7528\u9636\u6BB5</code>\u521B\u5EFA\u7684<code>update</code>\u4E3A\u8BE5<code>hook</code>\u4E0A\u7B2C\u4E00\u4E2A<code>update</code>\uFF0C\u5728<code>\u7533\u660E\u9636\u6BB5</code>\u8BA1\u7B97<code>state</code>\u65F6\u4E5F\u53EA\u4F9D\u8D56\u4E8E\u8BE5<code>update</code>\uFF0C\u5B8C\u5168\u4E0D\u9700\u8981\u8FDB\u5165<code>\u7533\u660E\u9636\u6BB5</code>\u518D\u8BA1\u7B97<code>state</code>\u3002</p><p>\u8FD9\u6837\u505A\u7684\u597D\u5904\u662F\uFF1A\u5982\u679C\u8BA1\u7B97\u51FA\u7684<code>state</code>\u4E0E\u8BE5<code>hook</code>\u4E4B\u524D\u4FDD\u5B58\u7684<code>state</code>\u4E00\u81F4\uFF0C\u90A3\u4E48\u5B8C\u5168\u4E0D\u9700\u8981\u5F00\u542F\u4E00\u6B21\u8C03\u5EA6\u3002\u5373\u4F7F\u8BA1\u7B97\u51FA\u7684<code>state</code>\u4E0E\u8BE5<code>hook</code>\u4E4B\u524D\u4FDD\u5B58\u7684<code>state</code>\u4E0D\u4E00\u81F4\uFF0C\u5728<code>\u7533\u660E\u9636\u6BB5</code>\u4E5F\u53EF\u4EE5\u76F4\u63A5\u4F7F\u7528<code>\u8C03\u7528\u9636\u6BB5</code>\u5DF2\u7ECF\u8BA1\u7B97\u51FA\u7684<code>state</code>\u3002</p>`,15),Ln=n("\u4F60\u53EF\u4EE5\u5728"),Wn={href:"https://github.com/acdlite/react/blob/1fb18e22ae66fdb1dc127347e169e73948778e5a/packages/react-reconciler/src/ReactFiberHooks.new.js#L1727",target:"_blank",rel:"noopener noreferrer"},Cn=n("\u8FD9\u91CC"),Dn=n("\u770B\u5230\u8FD9\u6BB5\u63D0\u524D\u8BA1\u7B97"),Bn=s("code",null,"state",-1),Tn=n("\u7684\u903B\u8F91"),Un=t(`<h2 id="\u5C0Ftip" tabindex="-1"><a class="header-anchor" href="#\u5C0Ftip" aria-hidden="true">#</a> \u5C0FTip</h2><p>\u901A\u5E38\u8BA4\u4E3A\uFF0C<code>useReducer(reducer, initialState)</code>\u7684\u4F20\u53C2\u4E3A\u521D\u59CB\u5316\u53C2\u6570\uFF0C\u5728\u4EE5\u540E\u7684\u8C03\u7528\u4E2D\u90FD\u4E0D\u53EF\u53D8\u3002</p><p>\u4F46\u662F\u5728<code>updateReducer</code>\u65B9\u6CD5\u4E2D\uFF0C\u53EF\u4EE5\u770B\u5230<code>lastRenderedReducer</code>\u5728\u6BCF\u6B21\u8C03\u7528\u65F6\u90FD\u4F1A\u91CD\u65B0\u8D4B\u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">updateReducer</span><span class="token punctuation">(</span><span class="token parameter">reducer<span class="token punctuation">,</span> initialArg<span class="token punctuation">,</span> init</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>

  queue<span class="token punctuation">.</span>lastRenderedReducer <span class="token operator">=</span> reducer<span class="token punctuation">;</span>

  <span class="token comment">// ...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E5F\u5C31\u662F\u8BF4\uFF0C<code>reducer</code>\u53C2\u6570\u662F\u968F\u65F6\u53EF\u53D8\u7684\u3002</p><p>details reducer\u53EF\u53D8Demo \u6BCF\u79D2<code>useReducer</code>\u4F7F\u7528\u7684<code>reducer</code>\u4F1A\u6539\u53D8\u4E00\u6B21</p><p>\u70B9\u51FB\u6309\u94AE\u540E\u4F1A\u968F\u65F6\u95F4\u4E0D\u540C\u4F1A\u51FA\u73B0<code>+1</code>\u6216<code>-1</code>\u7684\u6548\u679C</p>`,7),zn={href:"https://codesandbox.io/s/peaceful-goldstine-5z1rl",target:"_blank",rel:"noopener noreferrer"},Vn=n("useReducer demo");function $n(En,Mn){const a=p("ExternalLinkIcon");return c(),l("div",null,[r,s("p",null,[d,u,k,v,m,b,h,s("a",_,[g,e(a)]),y]),f,s("blockquote",null,[s("p",null,[R,s("a",w,[S,e(a)]),j])]),x,s("p",null,[q,s("a",A,[H,e(a)]),I,F,N]),P,L,s("p",null,[W,C,D,B,s("a",T,[U,e(a)]),z,V,$,s("a",E,[M,e(a)]),O]),Q,s("p",null,[G,J,K,X,Y,Z,nn,sn,an,s("a",en,[tn,e(a)]),on]),pn,s("p",null,[cn,ln,rn,dn,un,kn,vn,mn,bn,s("a",hn,[_n,e(a)]),gn]),yn,s("p",null,[fn,s("a",Rn,[wn,e(a)]),Sn,jn,xn,qn,An,Hn,In,Fn,Nn]),Pn,s("blockquote",null,[s("p",null,[Ln,s("a",Wn,[Cn,e(a)]),Dn,Bn,Tn])]),Un,s("p",null,[s("a",zn,[Vn,e(a)])])])}var Gn=o(i,[["render",$n],["__file","usestate.html.vue"]]);export{Gn as default};
