import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,a as p}from"./app.96e5830e.js";const t={},o=p(`<h1 id="\u7B2C25\u5C9B\u5C7F\u6570\u91CF" tabindex="-1"><a class="header-anchor" href="#\u7B2C25\u5C9B\u5C7F\u6570\u91CF" aria-hidden="true">#</a> \u7B2C25\u5C9B\u5C7F\u6570\u91CF</h1><p>\u7ED9\u4F60\u4E00\u4E2A\u7531 <code>&#39;1&#39;</code>\uFF08\u9646\u5730\uFF09\u548C <code>&#39;0&#39;</code>\uFF08\u6C34\uFF09\u7EC4\u6210\u7684\u7684\u4E8C\u7EF4\u7F51\u683C\uFF0C\u8BF7\u4F60\u8BA1\u7B97\u7F51\u683C\u4E2D\u5C9B\u5C7F\u7684\u6570\u91CF\u3002</p><p>\u5C9B\u5C7F\u603B\u662F\u88AB\u6C34\u5305\u56F4\uFF0C\u5E76\u4E14\u6BCF\u5EA7\u5C9B\u5C7F\u53EA\u80FD\u7531\u6C34\u5E73\u65B9\u5411\u548C/\u6216\u7AD6\u76F4\u65B9\u5411\u4E0A\u76F8\u90BB\u7684\u9646\u5730\u8FDE\u63A5\u5F62\u6210\u3002</p><p>\u6B64\u5916\uFF0C\u4F60\u53EF\u4EE5\u5047\u8BBE\u8BE5\u7F51\u683C\u7684\u56DB\u6761\u8FB9\u5747\u88AB\u6C34\u5305\u56F4\u3002</p><p><strong>\u793A\u4F8B 1</strong>\uFF1A</p><p><strong>\u8F93\u5165</strong>\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>grid <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">[</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">]</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u8F93\u51FA</strong>\uFF1A 1</p><p><strong>\u793A\u4F8B 2</strong>\uFF1A</p><p><strong>\u8F93\u5165</strong>\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>grid <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">[</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">]</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u8F93\u51FA</strong>\uFF1A 3</p><h3 id="\u63D0\u793A" tabindex="-1"><a class="header-anchor" href="#\u63D0\u793A" aria-hidden="true">#</a> \u63D0\u793A</h3><ul><li><p><code>m == grid.length</code></p></li><li><p><code>n == grid[i].length</code></p></li><li><p><code>1 &lt;= m, n &lt;= 300</code></p></li><li><p><code>grid[i][j]</code> \u7684\u503C\u4E3A <code>&#39;0&#39;</code> \u6216 <code>&#39;1&#39;</code></p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>character<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">grid</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">numIslands</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">grid</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u65B9\u6CD5\u4E00-\u6DF1\u5EA6\u4F18\u5148\u641C\u7D22" tabindex="-1"><a class="header-anchor" href="#\u65B9\u6CD5\u4E00-\u6DF1\u5EA6\u4F18\u5148\u641C\u7D22" aria-hidden="true">#</a> \u65B9\u6CD5\u4E00\uFF1A\u6DF1\u5EA6\u4F18\u5148\u641C\u7D22</h3><p>\u6211\u4EEC\u53EF\u4EE5\u5C06\u4E8C\u7EF4\u7F51\u683C\u770B\u6210\u4E00\u4E2A\u65E0\u5411\u56FE\uFF0C\u7AD6\u76F4\u6216\u6C34\u5E73\u76F8\u90BB\u7684 <code>11</code> \u4E4B\u95F4\u6709\u8FB9\u76F8\u8FDE\u3002</p><p>\u4E3A\u4E86\u6C42\u51FA\u5C9B\u5C7F\u7684\u6570\u91CF\uFF0C\u6211\u4EEC\u53EF\u4EE5\u626B\u63CF\u6574\u4E2A\u4E8C\u7EF4\u7F51\u683C\u3002\u5982\u679C\u4E00\u4E2A\u4F4D\u7F6E\u4E3A <code>11</code>\uFF0C\u5219\u4EE5\u5176\u4E3A\u8D77\u59CB\u8282\u70B9\u5F00\u59CB\u8FDB\u884C\u6DF1\u5EA6\u4F18\u5148\u641C\u7D22\u3002\u5728\u6DF1\u5EA6\u4F18\u5148\u641C\u7D22\u7684\u8FC7\u7A0B\u4E2D\uFF0C\u6BCF\u4E2A\u641C\u7D22\u5230\u7684 <code>11</code> \u90FD\u4F1A\u88AB\u91CD\u65B0\u6807\u8BB0\u4E3A <code>00</code>\u3002</p><p>\u6700\u7EC8\u5C9B\u5C7F\u7684\u6570\u91CF\u5C31\u662F\u6211\u4EEC\u8FDB\u884C\u6DF1\u5EA6\u4F18\u5148\u641C\u7D22\u7684\u6B21\u6570\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">numIslands</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">grid</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> grid<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> grid<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        count<span class="token operator">++</span>
        <span class="token function">turnZero</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> grid<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> count
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">turnZero</span><span class="token punctuation">(</span><span class="token parameter">i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> grid</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> i <span class="token operator">&gt;=</span> grid<span class="token punctuation">.</span>length <span class="token operator">||</span> j <span class="token operator">&lt;</span> <span class="token number">0</span> 
       <span class="token operator">||</span> j <span class="token operator">&gt;=</span> grid<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">||</span> grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;0&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span>
  grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;0&#39;</span>
  <span class="token function">turnZero</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> grid<span class="token punctuation">)</span>
  <span class="token function">turnZero</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> grid<span class="token punctuation">)</span>
  <span class="token function">turnZero</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> j<span class="token punctuation">,</span> grid<span class="token punctuation">)</span>
  <span class="token function">turnZero</span><span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> j<span class="token punctuation">,</span> grid<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u590D\u6742\u5EA6\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#\u590D\u6742\u5EA6\u5206\u6790" aria-hidden="true">#</a> \u590D\u6742\u5EA6\u5206\u6790</h3><ul><li><p>\u65F6\u95F4\u590D\u6742\u5EA6\uFF1A<code>O(MN)</code>\uFF0C\u5176\u4E2D <code>M</code> \u548C <code>N</code> \u5206\u522B\u4E3A\u884C\u6570\u548C\u5217\u6570\u3002</p></li><li><p>\u7A7A\u95F4\u590D\u6742\u5EA6\uFF1A<code>O(MN)</code>\uFF0C\u5728\u6700\u574F\u60C5\u51B5\u4E0B\uFF0C\u6574\u4E2A\u7F51\u683C\u5747\u4E3A\u9646\u5730\uFF0C\u6DF1\u5EA6\u4F18\u5148\u641C\u7D22\u7684\u6DF1\u5EA6\u8FBE\u5230 <code>MN</code>\u3002</p></li></ul><h2 id="\u65B9\u6CD5\u4E8C-\u5E7F\u5EA6\u4F18\u5148\u641C\u7D22" tabindex="-1"><a class="header-anchor" href="#\u65B9\u6CD5\u4E8C-\u5E7F\u5EA6\u4F18\u5148\u641C\u7D22" aria-hidden="true">#</a> \u65B9\u6CD5\u4E8C\uFF1A\u5E7F\u5EA6\u4F18\u5148\u641C\u7D22</h2><p>\u540C\u6837\u5730\uFF0C\u6211\u4EEC\u4E5F\u53EF\u4EE5\u4F7F\u7528\u5E7F\u5EA6\u4F18\u5148\u641C\u7D22\u4EE3\u66FF\u6DF1\u5EA6\u4F18\u5148\u641C\u7D22\u3002</p><p>\u4E3A\u4E86\u6C42\u51FA\u5C9B\u5C7F\u7684\u6570\u91CF\uFF0C\u6211\u4EEC\u53EF\u4EE5\u626B\u63CF\u6574\u4E2A\u4E8C\u7EF4\u7F51\u683C\u3002\u5982\u679C\u4E00\u4E2A\u4F4D\u7F6E\u4E3A <code>11</code>\uFF0C\u5219\u5C06\u5176\u52A0\u5165\u961F\u5217\uFF0C\u5F00\u59CB\u8FDB\u884C\u5E7F\u5EA6\u4F18\u5148\u641C\u7D22\u3002\u5728\u5E7F\u5EA6\u4F18\u5148\u641C\u7D22\u7684\u8FC7\u7A0B\u4E2D\uFF0C\u6BCF\u4E2A\u641C\u7D22\u5230\u7684 <code>11</code> \u90FD\u4F1A\u88AB\u91CD\u65B0\u6807\u8BB0\u4E3A <code>00</code>\u3002\u76F4\u5230\u961F\u5217\u4E3A\u7A7A\uFF0C\u641C\u7D22\u7ED3\u675F\u3002</p><p>\u6700\u7EC8\u5C9B\u5C7F\u7684\u6570\u91CF\u5C31\u662F\u6211\u4EEC\u8FDB\u884C\u5E7F\u5EA6\u4F18\u5148\u641C\u7D22\u7684\u6B21\u6570\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">numIslands</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">grid</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token keyword">let</span> queue <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> grid<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> grid<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        count<span class="token operator">++</span>
        grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;0&#39;</span> <span class="token comment">// \u505A\u6807\u8BB0\uFF0C\u907F\u514D\u91CD\u590D\u904D\u5386</span>
        queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span>i<span class="token punctuation">,</span> j<span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token function">turnZero</span><span class="token punctuation">(</span>queue<span class="token punctuation">,</span> grid<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> count
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">turnZero</span><span class="token punctuation">(</span><span class="token parameter">queue<span class="token punctuation">,</span> grid</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> dirs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>queue<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> cur <span class="token operator">=</span> queue<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> dir <span class="token keyword">of</span> dirs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> x <span class="token operator">=</span> cur<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> dir<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
      <span class="token keyword">const</span> y <span class="token operator">=</span> cur<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> dir<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> x <span class="token operator">&gt;=</span> grid<span class="token punctuation">.</span>length <span class="token operator">||</span> y <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> y <span class="token operator">&gt;=</span> grid<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">||</span> grid<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">continue</span>
      <span class="token punctuation">}</span>
      grid<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;0&#39;</span>
      queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span>x<span class="token punctuation">,</span> y<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u590D\u6742\u5EA6\u5206\u6790-1" tabindex="-1"><a class="header-anchor" href="#\u590D\u6742\u5EA6\u5206\u6790-1" aria-hidden="true">#</a> \u590D\u6742\u5EA6\u5206\u6790</h3><ul><li><p>\u65F6\u95F4\u590D\u6742\u5EA6\uFF1A<code>O(MN)</code>\uFF0C\u5176\u4E2D <code>M</code> \u548C <code>N</code> \u5206\u522B\u4E3A\u884C\u6570\u548C\u5217\u6570\u3002</p></li><li><p>\u7A7A\u95F4\u590D\u6742\u5EA6\uFF1A<code>O(min(M,N))</code>\uFF0C\u5728\u6700\u574F\u60C5\u51B5\u4E0B\uFF0C\u6574\u4E2A\u7F51\u683C\u5747\u4E3A\u9646\u5730\uFF0C\u961F\u5217\u7684\u5927\u5C0F\u53EF\u4EE5\u8FBE\u5230 <code>min(M,N)</code>\u3002</p></li></ul><h2 id="\u65B9\u6CD5\u4E09-\u5E76\u67E5\u96C6" tabindex="-1"><a class="header-anchor" href="#\u65B9\u6CD5\u4E09-\u5E76\u67E5\u96C6" aria-hidden="true">#</a> \u65B9\u6CD5\u4E09\uFF1A\u5E76\u67E5\u96C6</h2><p>\u540C\u6837\u5730\uFF0C\u6211\u4EEC\u4E5F\u53EF\u4EE5\u4F7F\u7528\u5E76\u67E5\u96C6\u4EE3\u66FF\u641C\u7D22\u3002</p><p>\u4E3A\u4E86\u6C42\u51FA\u5C9B\u5C7F\u7684\u6570\u91CF\uFF0C\u6211\u4EEC\u53EF\u4EE5\u626B\u63CF\u6574\u4E2A\u4E8C\u7EF4\u7F51\u683C\u3002\u5982\u679C\u4E00\u4E2A\u4F4D\u7F6E\u4E3A 1\uFF0C\u5219\u5C06\u5176\u4E0E\u76F8\u90BB\u56DB\u4E2A\u65B9\u5411\u4E0A\u7684 1 \u5728\u5E76\u67E5\u96C6\u4E2D\u8FDB\u884C\u5408\u5E76\u3002</p><p>\u6700\u7EC8\u5C9B\u5C7F\u7684\u6570\u91CF\u5C31\u662F\u5E76\u67E5\u96C6\u4E2D\u8FDE\u901A\u5206\u91CF\u7684\u6570\u76EE\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>character<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">grid</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">numIslands</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">grid</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token constant">Y</span> <span class="token operator">=</span> grid<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token constant">X</span> <span class="token operator">=</span> grid<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">const</span> uf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UnionFind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token constant">Y</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token constant">X</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> uf<span class="token punctuation">.</span><span class="token function">makeSet</span><span class="token punctuation">(</span><span class="token punctuation">[</span>i<span class="token punctuation">,</span> j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token constant">Y</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token constant">X</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i <span class="token punctuation">,</span> j<span class="token punctuation">)</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">&lt;</span> <span class="token constant">Y</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>grid<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> uf<span class="token punctuation">.</span><span class="token function">union</span><span class="token punctuation">(</span><span class="token punctuation">[</span>i<span class="token punctuation">,</span> j<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u53F3\u4FA7</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>j <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">&lt;</span> <span class="token constant">X</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> uf<span class="token punctuation">.</span><span class="token function">union</span><span class="token punctuation">(</span><span class="token punctuation">[</span>i<span class="token punctuation">,</span> j<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>i<span class="token punctuation">,</span> j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u4E0B\u4FA7</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> uf<span class="token punctuation">.</span><span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">class</span> <span class="token class-name">UnionFind</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>parents <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">makeSet</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>parents<span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token operator">=</span> x <span class="token operator">+</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>count<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">findSet</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u8DEF\u5F84\u538B\u7F29\uFF0C\u67E5x\u7684\u6839\u8282\u70B9</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>parents<span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token punctuation">(</span>x <span class="token operator">+</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            x <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>parents<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> x <span class="token operator">+</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">union</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">link</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">findSet</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">findSet</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">link</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">===</span> y<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>parents<span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token operator">=</span> y<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>count<span class="token operator">--</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>count<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u590D\u6742\u5EA6\u5206\u6790-2" tabindex="-1"><a class="header-anchor" href="#\u590D\u6742\u5EA6\u5206\u6790-2" aria-hidden="true">#</a> \u590D\u6742\u5EA6\u5206\u6790</h3><ul><li><p>\u65F6\u95F4\u590D\u6742\u5EA6\uFF1A<code>O(MN\xD7\u03B1(MN))</code>\uFF0C\u5176\u4E2D <code>MM</code> \u548C <code>NN</code> \u5206\u522B\u4E3A\u884C\u6570\u548C\u5217\u6570\u3002\u6CE8\u610F\u5F53\u4F7F\u7528\u8DEF\u5F84\u538B\u7F29\uFF08\u89C1 <code>find</code> \u51FD\u6570\uFF09\u548C\u6309\u79E9\u5408\u5E76\uFF08\u89C1\u6570\u7EC4 rank\uFF09\u5B9E\u73B0\u5E76\u67E5\u96C6\u65F6\uFF0C\u5355\u6B21\u64CD\u4F5C\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A <code>\u03B1(MN)</code>\uFF0C\u5176\u4E2D <code>\u03B1(x)</code> \u4E3A\u53CD\u963F\u514B\u66FC\u51FD\u6570\uFF0C\u5F53\u81EA\u53D8\u91CF xx \u7684\u503C\u5728\u4EBA\u7C7B\u53EF\u89C2\u6D4B\u7684\u8303\u56F4\u5185\uFF08\u5B87\u5B99\u4E2D\u7C92\u5B50\u7684\u6570\u91CF\uFF09\u65F6\uFF0C\u51FD\u6570 <code>\u03B1(x)</code> \u7684\u503C\u4E0D\u4F1A\u8D85\u8FC7 5\uFF0C\u56E0\u6B64\u4E5F\u53EF\u4EE5\u770B\u6210\u662F\u5E38\u6570\u65F6\u95F4\u590D\u6742\u5EA6\u3002</p></li><li><p>\u7A7A\u95F4\u590D\u6742\u5EA6\uFF1A<code>O(MN)</code>\uFF0C\u8FD9\u662F\u5E76\u67E5\u96C6\u9700\u8981\u4F7F\u7528\u7684\u7A7A\u95F4\u3002</p></li></ul>`,36),e=[o];function c(u,l){return s(),a("div",null,e)}var r=n(t,[["render",c],["__file","25.html.vue"]]);export{r as default};
