import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,a as p}from"./app.9a21e182.js";const t={},e=p(`<h1 id="\u7B2C42\u9898-es6-\u65B0\u7279\u6027" tabindex="-1"><a class="header-anchor" href="#\u7B2C42\u9898-es6-\u65B0\u7279\u6027" aria-hidden="true">#</a> \u7B2C42\u9898\uFF1AES6 \u65B0\u7279\u6027</h1><h2 id="\u5173\u4E8Ees6\u548Cjavascript\u7684\u5173\u7CFB" tabindex="-1"><a class="header-anchor" href="#\u5173\u4E8Ees6\u548Cjavascript\u7684\u5173\u7CFB" aria-hidden="true">#</a> \u5173\u4E8EES6\u548CJavaScript\u7684\u5173\u7CFB</h2><h3 id="_1\u3001es6\u662F\u5BF9\u4E8Ees2015-\u7684\u4FD7\u79F0-\u4E5F\u53EF\u4EE5\u8BF4\u662F\u901A\u5E38\u53EB\u6CD5-\u90A3\u4E48-es6\u662F\u4EC0\u4E48\u5462" tabindex="-1"><a class="header-anchor" href="#_1\u3001es6\u662F\u5BF9\u4E8Ees2015-\u7684\u4FD7\u79F0-\u4E5F\u53EF\u4EE5\u8BF4\u662F\u901A\u5E38\u53EB\u6CD5-\u90A3\u4E48-es6\u662F\u4EC0\u4E48\u5462" aria-hidden="true">#</a> 1\u3001ES6\u662F\u5BF9\u4E8EES2015+\u7684\u4FD7\u79F0\uFF0C\u4E5F\u53EF\u4EE5\u8BF4\u662F\u901A\u5E38\u53EB\u6CD5\uFF0C\u90A3\u4E48\uFF0CES6\u662F\u4EC0\u4E48\u5462\uFF1F</h3><p>ES \u5168\u79F0\u662FECAMScript\uFF0C\u5B83\u662FJavaScript\u57FA\u7840\u6784\u5EFA\u7684\u4E00\u79CD\u8BED\u8A00\uFF0CJavaScript\u6B63\u662F\u5EFA\u7ACB\u5728ECAMScript\u8BED\u8A00\u7684\u57FA\u7840\u89C4\u8303\u4E2D\u5EFA\u7ACB\u4F7F\u7528\u7684\uFF0C\u90A3\u4E48\uFF0CECAMScript\u7684\u4F7F\u7528\uFF0C\u5BF9\u4E8EJavaScript\u81F3\u5173\u91CD\u8981\uFF01</p><p>\u5728\u6211\u7684\u7406\u89E3\u4E2D\uFF0CECAMScript\u662F\u4E00\u79CD\u8BED\u8A00\u5C42\u9762\u7684\u4E1C\u897F\uFF0C\u5B83\u53EA\u662F\u5B9A\u4E49\u4E86JavaScript\u4EE5\u53CA\u5728\u5B83\u57FA\u7840\u4E4B\u4E0A\u5EFA\u7ACB\u7684\u5176\u4ED6\u8BED\u8A00\u7684\u8BED\u6CD5\u89C4\u8303\uFF0C\u800CJavaScript\u7684\u8BED\u8A00\uFF0C\u66F4\u5173\u4E8E\u4E00\u79CD\u5E73\u53F0\u6027\u8D28\u5728\u5176\u4E2D\u3002</p><p>JavaScript\u5305\u62EC ECAMScript\u3001DOM\u3001BOM\u4E09\u4E2A\u7EC4\u6210\u90E8\u5206\uFF0CDOM\u548CBOM\u662Fweb API\u63D0\u4F9B\u7684\u63A5\u53E3\u6216\u8005\u662FJavaScript\u548C\u6D4F\u89C8\u5668\u4E4B\u95F4\u8FDB\u884C\u4EA4\u4E92\u7684\u90E8\u5206\uFF0C\u5B9E\u8D28\u5C31\u662F\u64CD\u7EB5\u6587\u6863\u5143\u7D20\uFF0C\u8FDB\u884C\u5C55\u793A\u5E03\u5C40\uFF0C\u800CECAMScript\u5728JavaScript\u4E2D\u5176\u4E2D\u8BED\u6CD5\u7684\u4F5C\u7528\uFF0C\u5B83\u4E0D\u4F1A\u53BB\u8DDF\u6587\u6863\u6709\u76F4\u63A5\u7684\u5173\u7CFB\uFF0C\u4F46\u662F\u4ED6\u7684\u6570\u636E\u5904\u7406\u5B8C\u6210\u540E\u4F1A\u901A\u8FC7web API\u5C55\u793A\u5728\u6587\u6863\u4E2D\u3002</p><h2 id="es6\u65B0\u7279\u6027\u7684\u5206\u7C7B" tabindex="-1"><a class="header-anchor" href="#es6\u65B0\u7279\u6027\u7684\u5206\u7C7B" aria-hidden="true">#</a> ES6\u65B0\u7279\u6027\u7684\u5206\u7C7B</h2><p>\u65B0\u7279\u6027\u4E3B\u8981\u5F52\u4E3A\u56DB\u5927\u7C7B\uFF1A</p><ul><li>\u89E3\u51B3\u539F\u6709\u8BED\u6CD5\u4E0A\u7684\u4E00\u4E9B\u4E0D\u8DB3</li></ul><p>\u6BD4\u5982<code>let</code> \u548C <code>const</code> \u7684\u5757\u7EA7\u4F5C\u7528\u57DF</p><ul><li>\u5BF9\u539F\u6709\u8BED\u6CD5\u8FDB\u884C\u589E\u5F3A</li></ul><p>\u6BD4\u5982\u89E3\u6784\u3001\u5C55\u5F00\u3001\u53C2\u6570\u9ED8\u8BA4\u503C\u3001\u6A21\u677F\u5B57\u7B26\u4E32</p><ul><li>\u5168\u65B0\u7684\u5BF9\u8C61\u3001\u5168\u65B0\u7684\u65B9\u6CD5\u3001\u5168\u65B0\u7684\u529F\u80FD</li></ul><p>\u6BD4\u5982<code>promise</code>\u3001<code>proxy</code>\u3001<code>object</code>\u7684<code>assign</code>\u3001<code>is</code></p><ul><li>\u5168\u65B0\u7684\u6570\u636E\u7C7B\u578B\u548C\u6570\u636E\u7ED3\u6784</li></ul><p>\u6BD4\u5982<code>symbol</code>\u3001<code>set</code>\u3001<code>map</code></p><h2 id="_1-let\u3001const-\u5757\u7EA7\u4F5C\u7528\u57DF\u4EE5\u53CA\u548C-var-\u7684\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#_1-let\u3001const-\u5757\u7EA7\u4F5C\u7528\u57DF\u4EE5\u53CA\u548C-var-\u7684\u533A\u522B" aria-hidden="true">#</a> 1. let\u3001const \u5757\u7EA7\u4F5C\u7528\u57DF\u4EE5\u53CA\u548C var \u7684\u533A\u522B</h2><ul><li><p><code>let</code>\u3001<code>const</code> \u58F0\u660E\u7684\u53D8\u91CF\uFF0C\u5728 <code>for</code>\uFF0C<code>if</code> \u8BED\u53E5\u4E2D\uFF0C\u4F1A\u5F62\u6210\u5757\u7EA7\u4F5C\u7528\u57DF\uFF0C\u5757\u7EA7\u4F5C\u7528\u57DF\u5185\u7684\u53D8\u91CF\uFF0C\u4E0D\u80FD\u88AB\u4F5C\u7528\u57DF\u5916\u90E8\u4F7F\u7528</p></li><li><p><code>let</code>\u3001<code>const</code> \u58F0\u660E\u53D8\u91CF\u4E0D\u518D\u4F1A\u6709\u58F0\u660E\u63D0\u5347\uFF0C\u5728\u53D8\u91CF\u58F0\u660E\u4E4B\u524D\u4F7F\u7528\u8FD0\u884C\u65F6\u4F1A\u62A5\u9519</p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//\u5757\u7EA7\u4F5C\u7528\u57DF\u4E00\u7EA7\u5757\u7EA7\u4F5C\u7528\u57DF\u7684\u4F7F\u7528</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> param <span class="token operator">=</span> <span class="token string">&#39;param in if block&#39;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span> <span class="token comment">//param in if block</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span> <span class="token comment">//\u5757\u7EA7\u4F5C\u7528\u57DF\u5916\u8BBF\u95EE\u5185\u90E8\u5B9A\u4E49\u7684\u53D8\u91CF\uFF0CReferenceError: param is not defined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u5757\u7EA7\u4F5C\u7528\u57DF\u58F0\u660E\u53D8\u91CF\uFF0C\u4F1A\u51FA\u73B0<code>\u201C\u6682\u65F6\u6027\u6B7B\u533A\u201D</code>\uFF0C\u5757\u7EA7\u4F5C\u7528\u57DF\u58F0\u660E\u53D8\u91CF\u524D\u4F7F\u7528\u53D8\u91CF\uFF0C\u5C06\u4F1A\u62A5\u9519</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u6682\u65F6\u6027\u6B7B\u533A</span>
<span class="token keyword">const</span> i <span class="token operator">=</span> <span class="token number">100</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token comment">//ReferenceError: Cannot access &#39;i&#39; before initialization</span>
  <span class="token keyword">const</span> i <span class="token operator">=</span> <span class="token number">1000</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>const</code> \u58F0\u660E\u7684\u662F\u4E00\u4E2A\u5E38\u91CF\uFF0C\u58F0\u660E\u5FC5\u987B\u521D\u59CB\u5316</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// const\u5E38\u91CF\u58F0\u660E\u5FC5\u987B\u521D\u59CB\u5316</span>
<span class="token keyword">const</span> i<span class="token punctuation">;</span>
i <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token comment">//SyntaxError: Missing initializer in const declaration</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u5982\u679C <code>const</code> \u58F0\u660E\u7684\u662F<strong>\u57FA\u672C\u7C7B\u578B\u5E38\u91CF\uFF0C\u521D\u59CB\u5316\u4E4B\u540E\u4E0D\u80FD\u4FEE\u6539</strong>\uFF1B<strong>\u5F15\u7528\u7C7B\u578B\u7684\u5E38\u91CF\uFF0C\u53EF\u4EE5\u4FEE\u6539\u5176\u6210\u5458\u53D8\u91CF</strong>\uFF1B</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u57FA\u672C\u7C7B\u578B\u5E38\u91CF\u4E0D\u80FD\u4FEE\u6539\uFF0C\u5F15\u7528\u7C7B\u578B\u5E38\u91CF\u80FD\u4FEE\u6539\u5C5E\u6027</span>
<span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token string">&#39;str&#39;</span>
str <span class="token operator">=</span> <span class="token string">&#39;str1&#39;</span> <span class="token comment">//TypeError: Assignment to constant variable.</span>

<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>
arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">100</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">//100</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u548C <code>var</code> \u7684\u533A\u522B</li></ul><table><thead><tr><th>\u58F0\u660E\u65B9\u5F0F</th><th>\u53D8\u91CF\u63D0\u5347</th><th>\u4F5C\u7528\u57DF</th><th>\u521D\u59CB\u503C</th><th>\u91CD\u590D\u5B9A\u4E49</th></tr></thead><tbody><tr><td>var</td><td>\u662F</td><td>\u51FD\u6570\u7EA7</td><td>\u4E0D\u9700\u8981</td><td>\u5141\u8BB8</td></tr><tr><td>let</td><td>\u5426</td><td>\u5757\u7EA7</td><td>\u4E0D\u9700\u8981</td><td>\u4E0D\u5141\u8BB8</td></tr><tr><td>const</td><td>\u5426</td><td>\u5757\u7EA7</td><td>\u5FC5\u9700</td><td>\u4E0D\u5141\u8BB8</td></tr></tbody></table><h2 id="_2-\u89E3\u6784-\u5FEB\u901F\u63D0\u53D6\u6570\u7EC4-\u5BF9\u8C61\u4E2D\u7684\u5143\u7D20" tabindex="-1"><a class="header-anchor" href="#_2-\u89E3\u6784-\u5FEB\u901F\u63D0\u53D6\u6570\u7EC4-\u5BF9\u8C61\u4E2D\u7684\u5143\u7D20" aria-hidden="true">#</a> 2.\u89E3\u6784-\u5FEB\u901F\u63D0\u53D6\u6570\u7EC4/\u5BF9\u8C61\u4E2D\u7684\u5143\u7D20</h2><h3 id="\u6570\u7EC4\u89E3\u6784" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u89E3\u6784" aria-hidden="true">#</a> \u6570\u7EC4\u89E3\u6784</h3><ul><li>\u5355\u72EC\u89E3\u6784-\u6839\u636E\u6570\u7EC4\u7D22\u5F15\uFF0C\u5C06\u6570\u7EC4\u89E3\u6784\u6210\u5355\u72EC\u7684\u5143\u7D20</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>

<span class="token keyword">const</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">]</span> <span class="token operator">=</span> arr
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">)</span> <span class="token comment">//1,2,3</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token punctuation">,</span> d<span class="token punctuation">]</span> <span class="token operator">=</span> arr
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span> <span class="token comment">//3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u9ED8\u8BA4\u503C\uFF0C\u89E3\u6784\u65F6\u53EF\u4EE5\u7ED9\u53D8\u91CF\u8BBE\u7F6E\u9ED8\u8BA4\u503C\uFF0C\u6570\u7EC4\u6CA1\u6709\u8FD9\u4E2A\u5143\u7D20\u7684\u8BDD</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>

<span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token punctuation">,</span> <span class="token punctuation">,</span> defaultVal <span class="token operator">=</span> <span class="token string">&#39;4&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> arr
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u8BBE\u7F6E\u9ED8\u8BA4\u503C&#39;</span><span class="token punctuation">,</span> defaultVal<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u5269\u4F59\u89E3\u6784-\u7528 &quot;...+\u53D8\u91CF\u540D&quot; \u89E3\u6784\u5269\u4F59\u53C2\u6570\u5230\u65B0\u6570\u7EC4\uFF0C\u53EA\u80FD\u7528\u4E00\u6B21</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>

<span class="token keyword">const</span> <span class="token punctuation">[</span>e<span class="token punctuation">,</span> <span class="token operator">...</span>rest<span class="token punctuation">]</span> <span class="token operator">=</span> arr
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>rest<span class="token punctuation">)</span> <span class="token comment">//[2, 3]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u5B9E\u4F8B\u5E94\u7528</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u62C6\u5206\u5B57\u7B26\u4E32</span>
<span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token string">&#39;xiaobai/18/200&#39;</span>
<span class="token keyword">const</span> strArr <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> age<span class="token punctuation">]</span> <span class="token operator">=</span> strArr
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span> <span class="token comment">//18</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5BF9\u8C61\u89E3\u6784" tabindex="-1"><a class="header-anchor" href="#\u5BF9\u8C61\u89E3\u6784" aria-hidden="true">#</a> \u5BF9\u8C61\u89E3\u6784</h3><ul><li>\u5355\u4E2A/\u591A\u4E2A\u89E3\u6784-\u8DDF\u6570\u7EC4\u89E3\u6784\u5DEE\u4E0D\u591A</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;xiaohui&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token keyword">undefined</span> <span class="token punctuation">}</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> name<span class="token punctuation">,</span> age <span class="token punctuation">}</span> <span class="token operator">=</span> obj
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">)</span> <span class="token comment">// &#39;xiaohui&#39;, 18</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u89E3\u6784+\u91CD\u547D\u540D-\u7ED9\u89E3\u6784\u51FA\u6765\u7684\u53D8\u91CF\u91CD\u547D\u540D</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;xiaohui&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token keyword">undefined</span> <span class="token punctuation">}</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token literal-property property">mame</span><span class="token operator">:</span> objMame <span class="token punctuation">}</span> <span class="token operator">=</span> obj
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>objMame<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u9ED8\u8BA4\u503C-\u7ED9\u89E3\u6784\u53D8\u91CF\u8BBE\u7F6E\u9ED8\u8BA4\u503C</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;xiaohui&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token keyword">undefined</span> <span class="token punctuation">}</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token literal-property property">mame</span><span class="token operator">:</span> objMame <span class="token punctuation">}</span> <span class="token operator">=</span> obj
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>objMame<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-\u6A21\u677F\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#_3-\u6A21\u677F\u5B57\u7B26\u4E32" aria-hidden="true">#</a> 3.\u6A21\u677F\u5B57\u7B26\u4E32</h2><p>\u7528\u6CD5\uFF1A\u4F7F\u7528\`\`\u5C06\u5B57\u7B26\u4E32\u5305\u88F9\u8D77\u6765</p><p>\u529F\u80FD\uFF1A\u53EF\u4EE5\u6362\u884C\u3001\u63D2\u503C\u3001\u4F7F\u7528\u6807\u7B7E\u51FD\u6570\u8FDB\u884C\u5B57\u7B26\u4E32\u64CD\u4F5C</p><p>\u793A\u4F8B\uFF1A</p><ul><li>\u6362\u884C/\u63D2\u503C</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//\u6362\u884C</span>
<span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">fdsjak
    fdsa</span><span class="token template-punctuation string">\`</span></span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>

<span class="token comment">// \u63D2\u503C</span>
<span class="token keyword">const</span> strs <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">random: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>strs<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u6807\u7B7E\u51FD\u6570-\u53EF\u4EE5\u5BF9\u6A21\u677F\u5B57\u7B26\u4E32\u7684\u5B57\u7B26\u4E32\u548C\u63D2\u503C\u8FDB\u884C\u5904\u7406\u548C\u8FC7\u6EE4\u7B49\u64CD\u4F5C</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * \u5B57\u7B26\u4E32\u6A21\u677F\u51FD\u6570
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>array<span class="token punctuation">}</span></span> <span class="token parameter">strs</span> \u4EE5\u63D2\u503C\u4E3A\u5206\u9694\u7B26\u7EC4\u6210\u7684\u5B57\u7B26\u4E32\u6570\u7EC4
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">name</span> \u63D2\u503C\u7684value\uFF0C\u6709\u591A\u5C11\u4E2A\u5C31\u4F1A\u4F20\u5165\u591A\u5C11\u4E2A
 */</span>
<span class="token keyword">const</span> <span class="token function-variable function">tagFunc</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">strs<span class="token punctuation">,</span> name<span class="token punctuation">,</span> gender</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>str1<span class="token punctuation">,</span> str2<span class="token punctuation">,</span> str3<span class="token punctuation">]</span> <span class="token operator">=</span> strs
  <span class="token keyword">const</span> genderParsed <span class="token operator">=</span> gender <span class="token operator">==</span> <span class="token string">&#39;1&#39;</span> <span class="token operator">?</span> <span class="token string">&#39;\u7537&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;\u5973&#39;</span>
  <span class="token comment">// \u53EF\u4EE5\u5728\u6B64\u505A\u8FC7\u6EE4\uFF0C\u5B57\u7B26\u4E32\u5904\u7406\uFF0C\u591A\u8BED\u8A00\u7B49\u64CD\u4F5C</span>
  <span class="token keyword">return</span> str1 <span class="token operator">+</span> name <span class="token operator">+</span> str2 <span class="token operator">+</span> str3 <span class="token operator">+</span> genderParsed
<span class="token punctuation">}</span>

<span class="token comment">// \u5E26\u6807\u7B7E\u7684\u6A21\u677F\u5B57\u7B26\u4E32,</span>
<span class="token keyword">const</span> person <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;xiaohui&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">gender</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u8FD4\u56DE\u503C\u4E3A\u6807\u7B7E\u51FD\u6570\u7684\u8FD4\u56DE\u503C</span>
<span class="token keyword">const</span> result <span class="token operator">=</span> tagFunc<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">my name is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>person<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.gender is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>person<span class="token punctuation">.</span>gender<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token comment">//my name is xiaohui.gender is \u7537</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-\u5B57\u7B26\u4E32\u6269\u5C55\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_4-\u5B57\u7B26\u4E32\u6269\u5C55\u65B9\u6CD5" aria-hidden="true">#</a> 4. \u5B57\u7B26\u4E32\u6269\u5C55\u65B9\u6CD5</h2><ul><li><p><code>includes</code>-\u662F\u5426\u5305\u542B</p></li><li><p><code>startsWith</code>-\u662F\u5426\u4EE5\u4EC0\u4E48\u5F00\u59CB</p></li><li><p><code>endsWith</code>-\u662F\u5426\u4EE5\u4EC0\u4E48\u7ED3\u675F</p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token string">&#39;abcd&#39;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;e&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-\u53C2\u6570\u9ED8\u8BA4\u503C-\u5269\u4F59\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#_5-\u53C2\u6570\u9ED8\u8BA4\u503C-\u5269\u4F59\u53C2\u6570" aria-hidden="true">#</a> 5.\u53C2\u6570\u9ED8\u8BA4\u503C&amp;\u5269\u4F59\u53C2\u6570</h2><ul><li>\u7ED9\u51FD\u6570\u5F62\u53C2\u8BBE\u7F6E\u9ED8\u8BA4\u503C</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5E26\u9ED8\u8BA4\u53C2\u6570\u7684\u5F62\u53C2\u4E00\u822C\u653E\u5728\u540E\u9762\uFF0C\u51CF\u5C11\u4F20\u53C2\u5BFC\u81F4\u7684\u9519\u8BEF\u51E0\u7387</span>
<span class="token keyword">const</span> <span class="token function-variable function">defaultParams</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age <span class="token operator">=</span> <span class="token number">0</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span>age<span class="token punctuation">,</span> name<span class="token punctuation">]</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">defaultParams</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u4F7F\u7528...rest \u5F62\u5F0F\u8BBE\u7F6E\u5269\u4F59\u5F62\u53C2\uFF0C\u652F\u6301\u65E0\u9650\u53C2\u6570</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5269\u4F59\u53C2\u6570\uFF0C\u8F6C\u5316\u6210\u6570\u7EC4</span>
<span class="token keyword">const</span> <span class="token function-variable function">restParams</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//1, 2, 3, 4, 5</span>
<span class="token punctuation">}</span>

<span class="token function">restParams</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-\u5C55\u5F00\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#_6-\u5C55\u5F00\u6570\u7EC4" aria-hidden="true">#</a> 6.\u5C55\u5F00\u6570\u7EC4</h2><p>\u4F7F\u7528...\u5C06\u6570\u7EC4\u5C55\u5F00</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">...</span>arr<span class="token punctuation">)</span>
<span class="token comment">// \u7B49\u4EF7\u4E8Ees5\u4E2D\u4EE5\u4E0B\u5199\u6CD5</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>console<span class="token punctuation">,</span> arr<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7-\u7BAD\u5934\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#_7-\u7BAD\u5934\u51FD\u6570" aria-hidden="true">#</a> 7.\u7BAD\u5934\u51FD\u6570</h2><p><strong>\u7279\u6027&amp;\u4F18\u52BF</strong>\uFF1A</p><ol><li><p>\u7B80\u5316\u4E86\u51FD\u6570\u7684\u5199\u6CD5</p></li><li><p>\u6CA1\u6709 <code>this</code> \u673A\u5236\uFF0C<code>this</code> \u7EE7\u627F\u81EA\u4E0A\u4E00\u4E2A\u51FD\u6570\u7684\u4E0A\u4E0B\u6587\uFF0C\u5982\u679C\u4E0A\u4E00\u5C42\u6CA1\u6709\u51FD\u6570\uFF0C\u5219\u6307\u5411 <code>window</code></p></li><li><p>\u4F5C\u4E3A\u5F02\u6B65\u56DE\u8C03\u51FD\u6570\u65F6\uFF0C\u53EF\u89E3\u51B3 <code>this</code> \u6307\u5411\u95EE\u9898</p></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">inc</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> n <span class="token operator">+</span> <span class="token number">1</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">inc</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;aa&#39;</span><span class="token punctuation">,</span>
  <span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span> <span class="token comment">//aa</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span> <span class="token comment">//undefined</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
obj<span class="token punctuation">.</span><span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_8-\u5BF9\u8C61\u5B57\u9762\u91CF\u589E\u5F3A" tabindex="-1"><a class="header-anchor" href="#_8-\u5BF9\u8C61\u5B57\u9762\u91CF\u589E\u5F3A" aria-hidden="true">#</a> 8.\u5BF9\u8C61\u5B57\u9762\u91CF\u589E\u5F3A</h2><ul><li><p>\u540C\u540D\u5C5E\u6027\u53EF\u4EE5\u7701\u7565 <code>key:value</code> \u5F62\u5F0F\uFF0C\u76F4\u63A5 <code>key</code>\uFF0C</p></li><li><p>\u51FD\u6570\u53EF\u4EE5\u7701\u7565 <code>key\uFF1Avalue</code> \u5F62\u5F0F</p></li><li><p>\u53EF\u4EE5\u76F4\u63A5 <code>func()</code>,</p></li><li><p>\u53EF\u4EE5\u4F7F\u7528\u8BA1\u7B97\u5C5E\u6027\uFF0C\u6BD4\u5982\uFF1A<code>{[Math.random()]: value}</code></p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * 1\u3001\u589E\u5F3A\u4E86\u5BF9\u8C61\u5B57\u9762\u91CF\uFF1A
 * 1\uFF0C\u540C\u540D\u5C5E\u6027\u53EF\u4EE5\u7701\u7565key:value\u5F62\u5F0F\uFF0C\u76F4\u63A5key\uFF0C
 * 2\uFF0C\u51FD\u6570\u53EF\u4EE5\u7701\u7565key\uFF1Avalue\u5F62\u5F0F
 * 3\uFF0C\u53EF\u4EE5\u76F4\u63A5func(),
 * 4\uFF0C\u53EF\u4EE5\u4F7F\u7528\u8BA1\u7B97\u5C5E\u6027\uFF0C\u6BD4\u5982\uFF1A<span class="token punctuation">{</span>[Math.random()]: value<span class="token punctuation">}</span>
 */</span>
<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  arr<span class="token punctuation">,</span>
  <span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>arr<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">:</span> arr<span class="token punctuation">,</span>
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_9-object-assign-target1-target2-targetn-\u590D\u5236-\u5408\u5E76\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#_9-object-assign-target1-target2-targetn-\u590D\u5236-\u5408\u5E76\u5BF9\u8C61" aria-hidden="true">#</a> 9.Object.assign(target1, target2, targetN)-\u590D\u5236/\u5408\u5E76\u5BF9\u8C61</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * Object.assign(target1, target2, ...targetn)
 * \u540E\u9762\u7684\u5C5E\u6027\u5411\u524D\u9762\u7684\u5C5E\u6027\u5408\u5E76
 * \u5982\u679Ctarget1\u662F\u7A7A\u5BF9\u8C61\uFF0C\u53EF\u4EE5\u521B\u5EFA\u4E00\u4E2A\u5168\u65B0\u5BF9\u8C61\uFF0C\u800C\u4E0D\u662F\u5BF9\u8C61\u5F15\u7528
 */</span>
<span class="token keyword">const</span> obj1 <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> obj2 <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> obj3 <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> obj1<span class="token punctuation">)</span>
obj3<span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token number">5</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj3<span class="token punctuation">,</span> obj2<span class="token punctuation">,</span> obj1<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_10-object-is-value1-value2" tabindex="-1"><a class="header-anchor" href="#_10-object-is-value1-value2" aria-hidden="true">#</a> 10.Object.is(value1, value2)</h2><p>\u4F5C\u7528\uFF1A\u6BD4\u8F83\u4E24\u4E2A\u503C\u662F\u5426\u76F8\u7B49</p><p>\u7279\u6027\uFF1A</p><ul><li><p>\u6CA1\u6709\u9690\u5F0F\u8F6C\u6362</p></li><li><p>\u53EF\u4EE5\u6BD4\u8F83<code>+0</code>,<code>-0</code>\u3001<code>NaN</code></p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">NaN</span> <span class="token operator">===</span> <span class="token number">NaN</span><span class="token punctuation">)</span> <span class="token comment">//false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">,</span> <span class="token number">NaN</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_11-proxy-object-handler" tabindex="-1"><a class="header-anchor" href="#_11-proxy-object-handler" aria-hidden="true">#</a> 11.Proxy(object, handler)</h2><p><strong>\u4F5C\u7528</strong>\uFF1A</p><ul><li>\u4EE3\u7406\u4E00\u4E2A\u5BF9\u8C61\u7684\u6240\u6709\uFF0C\u5305\u62EC\u8BFB\u5199\u64CD\u4F5C\u548C\u5404\u79CD\u64CD\u4F5C\u7684\u76D1\u542C</li></ul><p><strong>\u7528\u6CD5</strong>:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token constant">P</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">n</span><span class="token operator">:</span> <span class="token string">&#39;p&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">19</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span><span class="token constant">P</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> property<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> property<span class="token punctuation">)</span>
    <span class="token keyword">return</span> property <span class="token keyword">in</span> target <span class="token operator">?</span> target<span class="token punctuation">[</span>property<span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token keyword">null</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">defineProperty</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> property<span class="token punctuation">,</span> attrs</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> property<span class="token punctuation">,</span> attrs<span class="token punctuation">)</span>
    <span class="token comment">//   throw new Error(&#39;\u4E0D\u5141\u8BB8\u4FEE\u6539&#39;)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">deleteProperty</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> property</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> property<span class="token punctuation">)</span>
    <span class="token keyword">delete</span> target<span class="token punctuation">[</span>property<span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> property<span class="token punctuation">,</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    target<span class="token punctuation">[</span>property<span class="token punctuation">]</span> <span class="token operator">=</span> value
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

proxy<span class="token punctuation">.</span>c <span class="token operator">=</span> <span class="token number">100</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;pp&#39;</span><span class="token punctuation">,</span> <span class="token constant">P</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0E <code>Object.definePropert</code> \u5BF9\u6BD4</p><p><strong>\u4F18\u52BF</strong>\uFF1A</p><ul><li><p>\u62E5\u6709\u5F88\u591A <code>defineProperty</code> \u6CA1\u6709\u7684\u5C5E\u6027\u65B9\u6CD5\uFF0C\u6BD4\u5982\uFF1A</p><ul><li><p><code>handler.getPrototypeOf()</code> ---Object.getPrototypeOf \u65B9\u6CD5\u7684\u76D1\u542C\u5668</p></li><li><p><code>handler.setPrototypeOf()</code> ---Object.setPrototypeOf \u65B9\u6CD5\u7684\u76D1\u542C\u5668\u3002</p></li><li><p><code>handler.isExtensible()</code> ---Object.isExtensible \u65B9\u6CD5\u7684\u76D1\u542C\u5668\u3002</p></li><li><p><code>handler.preventExtensions()</code> ---Object.preventExtensions \u65B9\u6CD5\u7684\u76D1\u542C\u5668\u3002</p></li><li><p><code>handler.getOwnPropertyDescriptor()</code> ---Object.getOwnPropertyDescriptor \u65B9\u6CD5\u7684\u76D1\u542C\u5668\u3002</p></li><li><p><code>handler.defineProperty()</code> ---Object.defineProperty \u65B9\u6CD5\u7684\u76D1\u542C\u5668\u3002</p></li><li><p><code>handler.has()</code> ---in \u64CD\u4F5C\u7B26\u7684\u76D1\u542C\u5668\u3002</p></li><li><p><code>handler.get()</code> ---\u5C5E\u6027\u8BFB\u53D6\u64CD\u4F5C\u7684\u76D1\u542C\u5668\u3002</p></li><li><p><code>handler.set()</code> ---\u5C5E\u6027\u8BBE\u7F6E\u64CD\u4F5C\u7684\u76D1\u542C\u5668\u3002</p></li><li><p><code>handler.deleteProperty()</code> ---delete \u64CD\u4F5C\u7B26\u7684\u76D1\u542C\u5668handler.ownKeys() ---Object.getOwnPropertyNames \u65B9\u6CD5\u548C Object.getOwnPropertySymbols \u65B9\u6CD5\u7684\u76D1\u542C\u5668\u3002</p></li><li><p><code>handler.apply()</code> ---\u51FD\u6570\u8C03\u7528\u64CD\u4F5C\u7684\u76D1\u542C\u5668\u3002</p></li><li><p><code>handler.construct()</code> ---new \u64CD\u4F5C\u7B26\u7684\u76D1\u542C\u5668\u3002</p></li></ul></li><li><p><strong>\u5BF9\u6570\u7EC4\u7684\u76D1\u89C6\u66F4\u65B9\u4FBF</strong></p></li><li><p><strong>\u4EE5\u975E\u4FB5\u5165\u7684\u8BBF\u89C6\u76D1\u7BA1\u5BF9\u8C61\u7684\u8BFB\u5199</strong></p></li></ul><h2 id="_12-reflect" tabindex="-1"><a class="header-anchor" href="#_12-reflect" aria-hidden="true">#</a> 12.Reflect</h2><p>\u4F5C\u7528\uFF1A</p><p>\u96C6\u6210 <code>Object</code> \u64CD\u4F5C\u7684\u6240\u6709\u65B9\u6CD5\uFF0C\u7EDF\u4E00\u3001\u65B9\u4FBF\uFF0C\u5177\u4F53\u65B9\u6CD5\u5982\u4E0B\uFF1A</p><p>\u7528\u4E8E\u5BF9\u5BF9\u8C61\u7684\u7EDF\u4E00\u64CD\u4F5C\uFF0C\u96C6\u6210 <code>Object</code> \u76F8\u5173\u7684\u6240\u6709\u65B9\u6CD5</p><ol><li><p><code>apply</code>\uFF1A\u7C7B\u4F3C <code>Function.prototype.apply</code></p></li><li><p><code>Reflect.construct()</code> \u5BF9\u6784\u9020\u51FD\u6570\u8FDB\u884C <code>new</code> \u64CD\u4F5C\uFF0C\u76F8\u5F53\u4E8E\u6267\u884C <code>new target(...args)</code>\u3002</p></li><li><p><code>Reflect.defineProperty()</code> \u548C <code>Object.defineProperty()</code> \u7C7B\u4F3C\u3002</p></li><li><p><code>Reflect.deleteProperty()</code> \u4F5C\u4E3A\u51FD\u6570\u7684 <code>delete</code> \u64CD\u4F5C\u7B26\uFF0C\u76F8\u5F53\u4E8E\u6267\u884C <code>delete target[name]</code>\u3002</p></li><li><p><code>Reflect.get()</code> \u83B7\u53D6\u5BF9\u8C61\u8EAB\u4E0A\u67D0\u4E2A\u5C5E\u6027\u7684\u503C\uFF0C\u7C7B\u4F3C\u4E8E <code>target[name]</code>\u3002</p></li><li><p><code>Reflect.getOwnPropertyDescriptor()</code> \u7C7B\u4F3C\u4E8E <code>Object.getOwnPropertyDescriptor()</code>\u3002</p></li><li><p><code>Reflect.getPrototypeOf()</code> \u7C7B\u4F3C\u4E8E <code>Object.getPrototypeOf()</code>, \u83B7\u53D6\u76EE\u6807\u5BF9\u8C61\u7684\u539F\u578B\u3002</p></li><li><p><code>Reflect.has()</code> \u5224\u65AD\u4E00\u4E2A\u5BF9\u8C61\u662F\u5426\u5B58\u5728\u67D0\u4E2A\u5C5E\u6027\uFF0C\u548C <code>in</code> \u8FD0\u7B97\u7B26 \u7684\u529F\u80FD\u5B8C\u5168\u76F8\u540C\u3002</p></li><li><p><code>Reflect.isExtensible()</code> \u7C7B\u4F3C\u4E8E <code>Object.isExtensible()</code>.\u5224\u65AD\u5BF9\u8C61\u662F\u5426\u53EF\u6269\u5C55\uFF0C\u53EF\u4EE5\u6DFB\u52A0\u989D\u5916\u5C5E\u6027 <code>Object.seal(\u5C01\u95ED\u5BF9\u8C61)</code>\uFF0C <code>Object.freeze\uFF08\u51BB\u7ED3\u5BF9\u8C61\uFF09</code>\u662F\u4E0D\u53EF\u6269\u5C55\u7684</p></li><li><p><code>Reflect.ownKeys()</code> \u8FD4\u56DE\u4E00\u4E2A\u5305\u542B\u6240\u6709\u81EA\u8EAB\u5C5E\u6027\uFF08\u4E0D\u5305\u542B\u7EE7\u627F\u5C5E\u6027\uFF09\u7684\u6570\u7EC4\u3002(\u7C7B\u4F3C\u4E8E <code>Object.keys()</code>, \u4F46\u4E0D\u4F1A\u53D7 <code>enumerable</code> \u5F71\u54CD).</p></li><li><p><code>Reflect.preventExtensions()</code> \u7C7B\u4F3C\u4E8E <code>Object.preventExtensions()</code>\u3002\u8FD4\u56DE\u4E00\u4E2A <code>Boolean</code>\u3002</p></li><li><p><code>Reflect.set()</code> \u5C06\u503C\u5206\u914D\u7ED9\u5C5E\u6027\u7684\u51FD\u6570\u3002\u8FD4\u56DE\u4E00\u4E2A <code>Boolean</code>\uFF0C\u5982\u679C\u66F4\u65B0\u6210\u529F\uFF0C\u5219\u8FD4\u56DE <code>true</code>, \u53CD\u4E4B\u8FD4\u56DE <code>false</code>\u3002</p></li><li><p><code>Reflect.setPrototypeOf()</code> \u7C7B\u4F3C\u4E8E <code>Object.setPrototypeOf()</code>\u3002</p></li></ol><p>\u793A\u4F8B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;reflect&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
Reflect<span class="token punctuation">.</span><span class="token function">preventExtensions</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token comment">//\u7981\u6B62\u6269\u5C55</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Reflect<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;xiaobai&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token comment">//{ name: &#39;reflect&#39; }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Reflect<span class="token punctuation">.</span><span class="token function">isExtensible</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Reflect<span class="token punctuation">.</span><span class="token function">ownKeys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//[ &#39;name&#39; ]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_13-promise" tabindex="-1"><a class="header-anchor" href="#_13-promise" aria-hidden="true">#</a> 13.Promise</h2><p>\u4F5C\u7528\uFF1A\u89E3\u51B3\u5F02\u6B65\u7F16\u7A0B\u4E2D\u56DE\u8C03\u5D4C\u5957\u8FC7\u6DF1\u95EE\u9898</p><h2 id="_14-class-\u9759\u6001\u65B9\u6CD5-\u7EE7\u627F" tabindex="-1"><a class="header-anchor" href="#_14-class-\u9759\u6001\u65B9\u6CD5-\u7EE7\u627F" aria-hidden="true">#</a> 14.class&amp;\u9759\u6001\u65B9\u6CD5&amp;\u7EE7\u627F</h2><p><strong>\u5B9A\u4E49</strong></p><ul><li>\u4F7F\u7528 <code>class</code> \u5173\u952E\u5B57\u5B9A\u4E49\u7C7B</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>props <span class="token operator">=</span> props
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u65B9\u6CD5</strong></p><ul><li><p><code>\u5B9E\u4F8B\u65B9\u6CD5</code>\uFF0C\u9700\u8981\u5B9E\u4F8B\u5316\u4E4B\u540E\u624D\u80FD\u8C03\u7528\uFF0C<code>this</code> \u6307\u5411\u5B9E\u4F8B</p></li><li><p><code>\u9759\u6001\u65B9\u6CD5</code>\uFF0C\u7528 <code>static</code> \u4FEE\u9970\u7B26\u4FEE\u9970\uFF0C\u53EF\u4EE5\u76F4\u63A5\u901A\u8FC7\u7C7B\u540D\u8C03\u7528\uFF0C\u4E0D\u9700\u8981\u5B9E\u4F8B\u5316\uFF0C<code>this</code> \u4E0D\u6307\u5411\u5B9E\u4F8B\uFF0C\u800C\u662F\u6307\u5411\u5F53\u524D\u7C7B</p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>props <span class="token operator">=</span> props
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5B9E\u4F8B\u65B9\u6CD5</span>
  <span class="token function">eat</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token comment">// \u9759\u6001\u65B9\u6CD5</span>
  <span class="token keyword">static</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u8C03\u7528\u9759\u6001\u65B9\u6CD5</span>
Person<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> person <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">&#39;props&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// \u8C03\u7528\u5B9E\u4F8B\u65B9\u6CD5</span>
person<span class="token punctuation">.</span><span class="token function">eat</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u7EE7\u627F\uFF1A\u5B50\u7C7B\u4F7F\u7528 <code>extends</code> \u5173\u952E\u5B57\u5B9E\u73B0\u7EE7\u627F\uFF0C\u53EF\u4EE5\u7EE7\u627F\u7236\u7C7B\u6240\u6709\u5C5E\u6027</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Student</span> <span class="token keyword">extends</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token function">printProps</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> student <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">&#39;student&#39;</span><span class="token punctuation">)</span>
student<span class="token punctuation">.</span><span class="token function">printProps</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_15-set" tabindex="-1"><a class="header-anchor" href="#_15-set" aria-hidden="true">#</a> 15.Set</h2><p>\u8BF4\u660E\uFF1A</p><p>Set \u662F\u4E00\u79CD\u7C7B\u4F3C\u4E8E\u6570\u7EC4\u7684\u6570\u636E\u7ED3\u6784</p><p>\u7279\u6027\uFF1A</p><ul><li><p>\u5143\u7D20\u552F\u4E00\u6027\uFF0C\u4E0D\u5141\u8BB8\u91CD\u590D\u5143\u7D20</p></li><li><p>\u4F7F\u7528 <code>add</code> \u589E\u52A0\u91CD\u590D\u5143\u7D20\uFF0C\u5C06\u4F1A\u88AB\u5FFD\u7565</p></li></ul><p>\u7528\u9014\uFF1A</p><ul><li><p>\u6570\u7EC4\u53BB\u91CD</p></li><li><p>\u6570\u636E\u5B58\u50A8</p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> set <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>
set<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>set<span class="token punctuation">.</span>size<span class="token punctuation">)</span> <span class="token comment">//2</span>
<span class="token keyword">const</span> newArr <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>set<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newArr<span class="token punctuation">)</span> <span class="token comment">//[ 1, 3 ]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_16-map" tabindex="-1"><a class="header-anchor" href="#_16-map" aria-hidden="true">#</a> 16.Map</h2><p>\u8BF4\u660E\uFF1A</p><p>\u7C7B\u4F3C <code>Object</code>\uFF0C\u4EE5 <code>key</code>\u3001<code>value</code> \u5F62\u5F0F\u5B58\u50A8\u6570\u636E</p><p>\u533A\u522B\uFF1A</p><p><code>Map</code> \u952E\u4E0D\u4F1A\u9690\u5F0F\u8F6C\u6362\u6210\u5B57\u7B26\u4E32\uFF0C\u800C\u662F\u4FDD\u6301\u539F\u6709\u7C7B\u578B</p><p>\u5B9E\u4F8B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;map&#39;</span><span class="token punctuation">)</span>
map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> obj<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//1</span>
<span class="token doc-comment comment">/**
        1 1
        name map
        <span class="token punctuation">{</span> &#39;1&#39;: 1, true: true, a: &#39;a&#39; <span class="token punctuation">}</span> <span class="token punctuation">{</span> &#39;1&#39;: 1, true: true, a: &#39;a&#39; <span class="token punctuation">}</span>
     */</span>
map<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">val<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> val<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_17-symbol" tabindex="-1"><a class="header-anchor" href="#_17-symbol" aria-hidden="true">#</a> 17.Symbol</h2><p>\u8BF4\u660E\uFF1A</p><p><code>JavaScript</code> \u7B2C\u516D\u79CD\u539F\u59CB\u6570\u636E\u7C7B\u578B\uFF0C\u7528\u6765\u5B9A\u4E49\u4E00\u4E2A\u552F\u4E00\u7684\u53D8\u91CF</p><p>\u4F5C\u7528\uFF1A</p><ul><li><p>\u521B\u5EFA\u552F\u4E00\u7684\u53D8\u91CF\uFF0C\u89E3\u51B3\u5BF9\u8C61\u952E\u540D\u91CD\u590D\u95EE\u9898</p></li><li><p>\u4E3A\u5BF9\u8C61\u3001\u7C7B\u3001\u51FD\u6570\u7B49\u521B\u5EFA\u79C1\u6709\u5C5E\u6027</p></li><li><p>\u4FEE\u6539\u5BF9\u8C61\u7684 <code>toString</code> \u6807\u7B7E</p></li><li><p>\u4E3A\u5BF9\u8C61\u6DFB\u52A0\u8FED\u4EE3\u5668\u5C5E\u6027</p></li></ul><p>\u5982\u4F55\u83B7\u53D6\u5BF9\u8C61\u7684 <code>symbol</code> \u5C5E\u6027\uFF1F</p><ul><li><code>Object.getOwnPropertySymbols(object)</code></li></ul><p>\u5B9E\u4F8B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5BF9\u8C61\u5C5E\u6027\u91CD\u540D\u95EE\u9898\uFF1B</span>
<span class="token keyword">const</span> objSymbol <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span><span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>objSymbol<span class="token punctuation">)</span>

<span class="token comment">// 2\u3001\u4E3A\u5BF9\u8C61\u3001\u7C7B\u3001\u51FD\u6570\u7B49\u521B\u5EFA\u79C1\u6709\u5C5E\u6027</span>
<span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> obj2 <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token string">&#39;symbol&#39;</span><span class="token punctuation">,</span>
  <span class="token function">testPrivate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

obj2<span class="token punctuation">.</span><span class="token function">testPrivate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// \u5B9A\u4E49toString\u6807\u7B7E\uFF1B</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj2<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
obj2<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>toStringTag<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;xx&#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj2<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//[object xx]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_18-for-of" tabindex="-1"><a class="header-anchor" href="#_18-for-of" aria-hidden="true">#</a> 18.for...of...</h2><p>\u7528\u9014\uFF1A</p><p>\u5DF2\u7EDF\u4E00\u7684\u65B9\u5F0F\uFF0C\u904D\u5386\u6240\u6709\u5F15\u7528\u6570\u636E\u7C7B\u578B</p><p>\u7279\u6027\uFF1A</p><p>\u53EF\u4EE5\u968F\u65F6\u4F7F\u7528 <code>break</code> \u7EC8\u6B62\u904D\u5386\uFF0C\u800C <code>forEach</code> \u4E0D\u884C</p><p>\u5B9E\u4F8B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u57FA\u672C\u7528\u6CD5</span>
<span class="token comment">// \u904D\u5386\u6570\u7EC4</span>
<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> item <span class="token keyword">of</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>item <span class="token operator">&gt;</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">break</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>item <span class="token operator">&gt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u904D\u5386set</span>
<span class="token keyword">const</span> set <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
set<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&#39;bar&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> item <span class="token keyword">of</span> set<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;set for of&#39;</span><span class="token punctuation">,</span> item<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u904D\u5386map</span>
<span class="token keyword">const</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;one&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;bar&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;two&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> val<span class="token punctuation">]</span> <span class="token keyword">of</span> map<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;for of map&#39;</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> val<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u8FED\u4EE3\u5BF9\u8C61</span>
<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;xiaohui&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token string">&#39;10&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">store</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token comment">// \u5B9E\u73B0\u53EF\u8FED\u4EE3\u7684\u63A5\u53E3</span>
  <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> params <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>store<span class="token punctuation">]</span>
    <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> ret <span class="token operator">=</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">value</span><span class="token operator">:</span> params<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">,</span>
          <span class="token literal-property property">done</span><span class="token operator">:</span> index <span class="token operator">&gt;=</span> params<span class="token punctuation">.</span>length<span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
        index<span class="token operator">++</span>
        <span class="token keyword">return</span> ret
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> item <span class="token keyword">of</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;obj for of&#39;</span><span class="token punctuation">,</span> item<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_19-\u8FED\u4EE3\u5668\u6A21\u5F0F" tabindex="-1"><a class="header-anchor" href="#_19-\u8FED\u4EE3\u5668\u6A21\u5F0F" aria-hidden="true">#</a> 19. \u8FED\u4EE3\u5668\u6A21\u5F0F</h2><p>\u4F5C\u7528\uFF1A\u901A\u8FC7 <code>Symbol.interator</code> \u5BF9\u5916\u63D0\u4F9B\u7EDF\u4E00\u7684\u63A5\u53E3\uFF0C\u83B7\u53D6\u5185\u90E8\u7684\u6570\u636E</p><p>\u5916\u90E8\u53EF\u4EE5\u901A\u8FC7 <code>for...of...</code>\u53BB\u8FED\u4EE3\u5185\u90E8\u7684\u6570\u636E</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> tods <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">life</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;eat&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;sleep&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">learn</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;js&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;dart&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token comment">// \u589E\u52A0\u7684\u4EFB\u52A1</span>
  <span class="token literal-property property">work</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;sale&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;customer&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> all <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      all<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> ret <span class="token operator">=</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">value</span><span class="token operator">:</span> all<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">,</span>
          <span class="token literal-property property">done</span><span class="token operator">:</span> index <span class="token operator">&gt;=</span> all<span class="token punctuation">.</span>length<span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
        index<span class="token operator">++</span>
        <span class="token keyword">return</span> ret
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> item <span class="token keyword">of</span> tods<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_20-generator-\u751F\u6210\u5668" tabindex="-1"><a class="header-anchor" href="#_20-generator-\u751F\u6210\u5668" aria-hidden="true">#</a> 20.Generator \u751F\u6210\u5668</h2><ul><li><p><code>Generator</code></p></li><li><p>\u51FD\u6570\u524D\u6DFB\u52A0 <code>*</code>\uFF0C\u751F\u6210\u4E00\u4E2A\u751F\u6210\u5668</p></li><li><p>\u4E00\u822C\u914D\u5408 <code>yield</code> \u5173\u952E\u5B57\u4F7F\u7528</p></li><li><p>\u6700\u5927\u7279\u70B9\uFF0C\u60F0\u6027\u6267\u884C\uFF0C\u8C03 <code>next</code> \u624D\u4F1A\u5F80\u4E0B\u6267\u884C</p></li><li><p>\u4E3B\u8981\u7528\u6765\u89E3\u51B3\u5F02\u6B65\u56DE\u8C03\u8FC7\u6DF1\u7684\u95EE\u9898</p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u751F\u6210\u8FED\u4EE3\u5668\u65B9\u6CD5</span>
<span class="token comment">//  \u751F\u6210\u5668Generator\u7684\u5E94\u7528</span>

<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">createIdGenerator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token number">1</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>id <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token keyword">yield</span> id<span class="token operator">++</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> createId <span class="token operator">=</span> <span class="token function">createIdGenerator</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>createId<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//{ value: 1, done: false }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>createId<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//{ value: 2, done: false }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>createId<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//{ value: undefined, done: true }</span>

<span class="token keyword">const</span> todos <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">life</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;eat&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;sleep&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;baba&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">learn</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;es5&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;es6&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;design pattern&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">work</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;framework&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> all <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>life<span class="token punctuation">,</span> <span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>learn<span class="token punctuation">,</span> <span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>work<span class="token punctuation">]</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> i <span class="token keyword">of</span> all<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">yield</span> i
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> item <span class="token keyword">of</span> todos<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_21-includes-\u51FD\u6570-es2016" tabindex="-1"><a class="header-anchor" href="#_21-includes-\u51FD\u6570-es2016" aria-hidden="true">#</a> 21.includes \u51FD\u6570-es2016</h2><p>\u5224\u65AD\u6570\u7EC4\u662F\u5426\u5305\u542B\u67D0\u4E2A\u5143\u7D20\uFF0C\u5305\u542B <code>NaN</code>\uFF0C\u89E3\u51B3 <code>indexOf</code> \u65E0\u6CD5\u67E5\u627E <code>NaN</code> \u95EE\u9898</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//  includes\u51FD\u6570</span>
<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;bar&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;baz&#39;</span><span class="token punctuation">,</span> <span class="token number">NaN</span><span class="token punctuation">]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//-1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_22-\u8FD0\u7B97\u7B26-es2016" tabindex="-1"><a class="header-anchor" href="#_22-\u8FD0\u7B97\u7B26-es2016" aria-hidden="true">#</a> 22. \u8FD0\u7B97\u7B26-es2016</h2><p>\u6307\u6570\u8FD0\u7B97</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u6307\u6570\u8FD0\u7B97\u7B26 **</span>
<span class="token comment">// es5\u4E2D2\u5341\u6B21\u65B9</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// es6\u4E2D2\u5341\u6B21\u65B9</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">**</span> <span class="token number">10</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_23-values-\u51FD\u6570-es2017" tabindex="-1"><a class="header-anchor" href="#_23-values-\u51FD\u6570-es2017" aria-hidden="true">#</a> 23.values \u51FD\u6570-es2017</h2><p>\u5C06\u5BF9\u8C61\u7684\u503C\u4EE5\u6570\u7EC4\u7684\u5F62\u5F0F\u8FD4\u56DE</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token literal-property property">bar</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
  <span class="token literal-property property">baz</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//[ 1, 2, 3 ]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_24-entries-\u51FD\u6570-es2017" tabindex="-1"><a class="header-anchor" href="#_24-entries-\u51FD\u6570-es2017" aria-hidden="true">#</a> 24.entries \u51FD\u6570-es2017</h2><p>\u5C06\u5BF9\u8C61\u4EE5\u952E\u503C\u5BF9\u4E8C\u7EF4\u6570\u7EC4\u8FD4\u56DE\uFF0C\u4F7F\u4E4B\u53EF\u4EE5\u4F7F\u7528 <code>for...of...</code>\u904D\u5386</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token literal-property property">bar</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
  <span class="token literal-property property">baz</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> entry <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> value<span class="token punctuation">]</span> <span class="token keyword">of</span> entry<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_25-object-getownpropertydescriptors-obj-es2017" tabindex="-1"><a class="header-anchor" href="#_25-object-getownpropertydescriptors-obj-es2017" aria-hidden="true">#</a> 25.Object.getOwnPropertyDescriptors(obj)-es2017</h2><p>\u83B7\u53D6\u5BF9\u8C61\u7684\u63CF\u8FF0\u4FE1\u606F</p><p>\u53EF\u4EE5\u901A\u8FC7\u83B7\u5F97\u7684\u63CF\u8FF0\u4FE1\u606F\uFF0C\u914D\u5408 <code>Object.defineProperties</code> \u6765\u5B8C\u6574\u590D\u5236\u5BF9\u8C61\uFF0C\u5305\u542B <code>get</code>\uFF0C<code>set</code> \u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// getOwnPropertyDescriptors</span>

<span class="token comment">// \u666E\u901Aget\u65B9\u6CD5</span>
<span class="token keyword">const</span> objGet <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token literal-property property">bar</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
  <span class="token keyword">get</span> <span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>foo <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>bar
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token comment">// assign\u65B9\u6CD5\u4F1A\u628AgetCount\u5F53\u505A\u666E\u901A\u5C5E\u6027\u590D\u5236\uFF0C\u4ECE\u800CgetCount\u4E3A3\uFF0C\u4FEE\u6539bar\u4E0D\u7BA1\u7528</span>
<span class="token keyword">const</span> objGet1 <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> objGet<span class="token punctuation">)</span>
objGet1<span class="token punctuation">.</span>bar <span class="token operator">=</span> <span class="token number">3</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>objGet1<span class="token punctuation">.</span>getCount<span class="token punctuation">)</span> <span class="token comment">//3</span>
<span class="token comment">// descriptors</span>
<span class="token keyword">const</span> descriptors <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptors</span><span class="token punctuation">(</span>objGet<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;des&#39;</span><span class="token punctuation">,</span> descriptors<span class="token punctuation">)</span>
<span class="token comment">// \u901A\u8FC7descriptors\u6765\u590D\u5236\u5BF9\u8C61\uFF0C\u53EF\u4EE5\u5B8C\u6574\u590D\u5236\u5BF9\u8C61\uFF0C\u5305\u542Bget\uFF0Cset</span>
<span class="token keyword">const</span> objGet2 <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">defineProperties</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> descriptors<span class="token punctuation">)</span>
objGet2<span class="token punctuation">.</span>bar <span class="token operator">=</span> <span class="token number">3</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>objGet2<span class="token punctuation">.</span>getCount<span class="token punctuation">)</span> <span class="token comment">//4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_26-padstart-padend-\u51FD\u6570-es2017" tabindex="-1"><a class="header-anchor" href="#_26-padstart-padend-\u51FD\u6570-es2017" aria-hidden="true">#</a> 26.padStart, padEnd \u51FD\u6570-es2017</h2><p>\u5728\u5B57\u7B26\u4E32\u524D\uFF0C\u6216\u8005\u540E\u9762\u8FFD\u52A0\u6307\u5B9A\u5B57\u7B26\u4E32</p><p>\u53C2\u6570\uFF1A</p><p><code>targetLenght</code>: \u586B\u5145\u540E\u7684\u76EE\u6807\u957F\u5EA6</p><p><code>padString</code>:\u586B\u5145\u7684\u5B57\u7B26\u4E32</p><p>\u89C4\u5219\uFF1A</p><ol><li><p>\u586B\u5145\u7684\u5B57\u7B26\u4E32\u8D85\u8FC7\u76EE\u6807\u957F\u5EA6\uFF0C\u4F1A\u5728\u89C4\u5B9A\u957F\u5EA6\u65F6\u88AB\u622A\u65AD</p></li><li><p>\u586B\u5145\u5B57\u7B26\u4E32\u592A\u77ED\u4F1A\u4EE5\u7A7A\u683C\u586B\u5145</p></li><li><p><code>padString</code> \u672A\u4F20\u503C\uFF0C\u4EE5\u7A7A\u683C\u586B\u5145</p></li></ol><p>\u4F5C\u7528\uFF1A</p><p>\u4E00\u822C\u7528\u6765\u5BF9\u9F50\u5B57\u7B26\u4E32\u8F93\u51FA</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 *  foo.................|1
    barbar..............|2
    bazbazbaz...........|3
*/</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token punctuation">.</span><span class="token function">padEnd</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>value<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">padStart</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;|&#39;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,167),o=[e];function c(l,i){return s(),a("div",null,o)}var k=n(t,[["render",c],["__file","42.html.vue"]]);export{k as default};
