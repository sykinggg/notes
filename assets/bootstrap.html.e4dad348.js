import{_ as p}from"./plugin-vue_export-helper.21dcd24c.js";import{r as c,o as l,c as i,b as n,d as e,a as o,e as s}from"./app.c0be2e7e.js";const r={},u=o('<h1 id="react-\u5E94\u7528\u7684\u542F\u52A8\u8FC7\u7A0B" tabindex="-1"><a class="header-anchor" href="#react-\u5E94\u7528\u7684\u542F\u52A8\u8FC7\u7A0B" aria-hidden="true">#</a> React \u5E94\u7528\u7684\u542F\u52A8\u8FC7\u7A0B</h1><p>\u5728\u524D\u6587<a href="./reconciler-workflow"><code>reconciler \u8FD0\u4F5C\u6D41\u7A0B</code></a>\u628A<code>reconciler</code>\u7684\u6D41\u7A0B\u5F52\u7ED3\u6210 4 \u4E2A\u6B65\u9AA4.</p><p>\u672C\u7AE0\u8282\u4E3B\u8981\u8BB2\u89E3<code>react</code>\u5E94\u7528\u7A0B\u5E8F\u7684\u542F\u52A8\u8FC7\u7A0B, \u4F4D\u4E8E<code>react-dom</code>\u5305, \u8854\u63A5<code>reconciler \u8FD0\u4F5C\u6D41\u7A0B</code>\u4E2D\u7684<a href="./reconciler-workflow#%E8%BE%93%E5%85%A5"><code>\u8F93\u5165</code></a>\u6B65\u9AA4.</p><p>\u5728\u6B63\u5F0F\u5206\u6790\u6E90\u7801\u4E4B\u524D, \u5148\u4E86\u89E3\u4E00\u4E0B<code>react</code>\u5E94\u7528\u7684<code>\u542F\u52A8\u6A21\u5F0F</code>:</p>',4),d=s("\u5728\u5F53\u524D\u7A33\u5B9A\u7248"),k=n("code",null,"react@17.0.2",-1),v=s("\u6E90\u7801\u4E2D, \u6709 3 \u79CD\u542F\u52A8\u65B9\u5F0F. \u5148\u5F15\u51FA\u5B98\u7F51\u4E0A\u5BF9\u4E8E"),m={href:"https://zh-hans.reactjs.org/docs/concurrent-mode-adoption.html#why-so-many-modes",target:"_blank",rel:"noopener noreferrer"},b=s("\u8FD9 3 \u79CD\u6A21\u5F0F\u7684\u4ECB\u7ECD"),h=s(", \u5176\u57FA\u672C\u8BF4\u660E\u5982\u4E0B:"),_=n("code",null,"legacy",-1),g=s(" \u6A21\u5F0F: "),y=n("code",null,"ReactDOM.render(<App />, rootNode)",-1),R=s(". \u8FD9\u662F\u5F53\u524D React app \u4F7F\u7528\u7684\u65B9\u5F0F. \u8FD9\u4E2A\u6A21\u5F0F\u53EF\u80FD\u4E0D\u652F\u6301"),f={href:"https://zh-hans.reactjs.org/docs/concurrent-mode-patterns.html#the-three-steps",target:"_blank",rel:"noopener noreferrer"},w=s("\u8FD9\u4E9B\u65B0\u529F\u80FD(concurrent \u652F\u6301\u7684\u6240\u6709\u529F\u80FD)"),C=s("."),O=o(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// LegacyRoot</span>
ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>App <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;root&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token parameter">dom</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u652F\u6301callback\u56DE\u8C03, \u53C2\u6570\u662F\u4E00\u4E2Adom\u5BF9\u8C61</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,1),M={href:"https://zh-hans.reactjs.org/docs/concurrent-mode-adoption.html#migration-step-blocking-mode",target:"_blank",rel:"noopener noreferrer"},j=s("Blocking \u6A21\u5F0F"),D=s(": "),B=n("code",null,"ReactDOM.createBlockingRoot(rootNode).render(<App />)",-1),F=s(". \u76EE\u524D\u6B63\u5728\u5B9E\u9A8C\u4E2D, \u5B83\u4EC5\u63D0\u4F9B\u4E86 "),x=n("code",null,"concurrent",-1),L=s(" \u6A21\u5F0F\u7684\u5C0F\u90E8\u5206\u529F\u80FD, \u4F5C\u4E3A\u8FC1\u79FB\u5230 "),H=n("code",null,"concurrent",-1),T=s(" \u6A21\u5F0F\u7684\u7B2C\u4E00\u4E2A\u6B65\u9AA4."),I=o(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// BolckingRoot</span>
<span class="token comment">// 1. \u521B\u5EFAReactDOMRoot\u5BF9\u8C61</span>
<span class="token keyword">const</span> reactDOMBolckingRoot <span class="token operator">=</span> ReactDOM<span class="token punctuation">.</span><span class="token function">createBlockingRoot</span><span class="token punctuation">(</span>
  document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;root&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 2. \u8C03\u7528render</span>
reactDOMBolckingRoot<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>App <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u4E0D\u652F\u6301\u56DE\u8C03</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),E={href:"https://zh-hans.reactjs.org/docs/concurrent-mode-adoption.html#enabling-concurrent-mode",target:"_blank",rel:"noopener noreferrer"},A=s("Concurrent \u6A21\u5F0F"),N=s(": "),U=n("code",null,"ReactDOM.createRoot(rootNode).render(<App />)",-1),S=s(". \u76EE\u524D\u5728\u5B9E\u9A8C\u4E2D, \u672A\u6765\u7A33\u5B9A\u4E4B\u540E\uFF0C\u6253\u7B97\u4F5C\u4E3A React \u7684\u9ED8\u8BA4\u5F00\u53D1\u6A21\u5F0F. \u8FD9\u4E2A\u6A21\u5F0F\u5F00\u542F\u4E86\u6240\u6709\u7684\u65B0\u529F\u80FD."),z=o(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// ConcurrentRoot</span>
<span class="token comment">// 1. \u521B\u5EFAReactDOMRoot\u5BF9\u8C61</span>
<span class="token keyword">const</span> reactDOMRoot <span class="token operator">=</span> ReactDOM<span class="token punctuation">.</span><span class="token function">createRoot</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;root&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 2. \u8C03\u7528render</span>
reactDOMRoot<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>App <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u4E0D\u652F\u6301\u56DE\u8C03</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),$=s("\u6CE8\u610F: \u867D\u7136"),q=n("code",null,"17.0.2",-1),G=s("\u7684\u6E90\u7801\u4E2D\u6709"),P={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-dom/src/client/ReactDOM.js#L202",target:"_blank",rel:"noopener noreferrer"},V=n("code",null,"createRoot",-1),Q=s("\u548C"),W=n("code",null,"createBlockingRoot",-1),J=s("\u65B9\u6CD5"),K=s("(\u5982\u679C\u81EA\u884C\u6784\u5EFA, "),X={href:"https://github.com/facebook/react/blob/v17.0.2/scripts/rollup/build.js#L30-L35",target:"_blank",rel:"noopener noreferrer"},Y=s("\u4F1A\u9ED8\u8BA4\u6784\u5EFA"),Z=n("code",null,"experimental",-1),nn=s("\u7248\u672C"),sn=s("), \u4F46\u662F\u7A33\u5B9A\u7248\u7684\u6784\u5EFA\u5165\u53E3"),an={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-dom/index.stable.js",target:"_blank",rel:"noopener noreferrer"},en=s("\u6392\u9664\u6389\u4E86\u8FD9\u4E24\u4E2A api"),on=s(", \u6240\u4EE5\u5B9E\u9645\u5728"),tn=n("code",null,"npm i react-dom",-1),pn=s("\u5B89\u88C5"),cn=n("code",null,"17.0.2",-1),ln=s("\u7A33\u5B9A\u7248\u540E, \u4E0D\u80FD\u4F7F\u7528\u8BE5 api.\u5982\u679C\u8981\u60F3\u4F53\u9A8C\u975E"),rn=n("code",null,"legacy",-1),un=s("\u6A21\u5F0F, \u9700\u8981"),dn={href:"https://github.com/reactwg/react-18/discussions/9",target:"_blank",rel:"noopener noreferrer"},kn=s("\u663E\u793A\u5B89\u88C5 alpha \u7248\u672C"),vn=s("(\u6216\u81EA\u884C\u6784\u5EFA)."),mn=n("h2",{id:"\u542F\u52A8\u6D41\u7A0B",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u542F\u52A8\u6D41\u7A0B","aria-hidden":"true"},"#"),s(" \u542F\u52A8\u6D41\u7A0B")],-1),bn=n("p",null,[s("\u5728\u8C03\u7528\u5165\u53E3\u51FD\u6570\u4E4B\u524D,"),n("code",null,"reactElement(<App/>)"),s("\u548C DOM \u5BF9\u8C61"),n("code",null,"div#root"),s("\u4E4B\u95F4\u6CA1\u6709\u5173\u8054, \u7528\u56FE\u7247\u8868\u793A\u5982\u4E0B:")],-1),hn=["src"],_n=n("h3",{id:"\u521B\u5EFA\u5168\u5C40\u5BF9\u8C61-create-global-obj",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u521B\u5EFA\u5168\u5C40\u5BF9\u8C61-create-global-obj","aria-hidden":"true"},"#"),s(" \u521B\u5EFA\u5168\u5C40\u5BF9\u8C61 {#create-global-obj}")],-1),gn=n("p",null,[s("\u65E0\u8BBA"),n("code",null,"Legacy, Concurrent\u6216Blocking"),s("\u6A21\u5F0F, react \u5728\u521D\u59CB\u5316\u65F6, \u90FD\u4F1A\u521B\u5EFA 3 \u4E2A\u5168\u5C40\u5BF9\u8C61")],-1),yn={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-dom/src/client/ReactDOMRoot.js#L62-L72",target:"_blank",rel:"noopener noreferrer"},Rn=n("code",null,"ReactDOM(Blocking)Root",-1),fn=s("\u5BF9\u8C61"),wn=s("\u5C5E\u4E8E"),Cn=n("code",null,"react-dom",-1),On=s("\u5305, \u8BE5\u5BF9\u8C61"),Mn={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-dom/src/client/ReactDOMRoot.js#L62-L104",target:"_blank",rel:"noopener noreferrer"},jn=s("\u66B4\u9732\u6709"),Dn=n("code",null,"render,unmount",-1),Bn=s("\u65B9\u6CD5"),Fn=s(", \u901A\u8FC7\u8C03\u7528\u8BE5\u5B9E\u4F8B\u7684"),xn=n("code",null,"render",-1),Ln=s("\u65B9\u6CD5, \u53EF\u4EE5\u5F15\u5BFC react \u5E94\u7528\u7684\u542F\u52A8."),Hn={start:"2"},Tn={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberRoot.old.js#L83-L103",target:"_blank",rel:"noopener noreferrer"},In=n("code",null,"fiberRoot",-1),En=s("\u5BF9\u8C61"),An=n("ul",null,[n("li",null,[s("\u5C5E\u4E8E"),n("code",null,"react-reconciler"),s("\u5305, \u4F5C\u4E3A"),n("code",null,"react-reconciler"),s("\u5728\u8FD0\u884C\u8FC7\u7A0B\u4E2D\u7684\u5168\u5C40\u4E0A\u4E0B\u6587, \u4FDD\u5B58 fiber \u6784\u5EFA\u8FC7\u7A0B\u4E2D\u6240\u4F9D\u8D56\u7684\u5168\u5C40\u72B6\u6001.")]),n("li",null,[s("\u5176\u5927\u90E8\u5206\u5B9E\u4F8B\u53D8\u91CF\u7528\u6765\u5B58\u50A8"),n("code",null,"fiber \u6784\u9020\u5FAA\u73AF"),s("(\u8BE6\u89C1"),n("a",{href:"./workloop"},[n("code",null,"\u4E24\u5927\u5DE5\u4F5C\u5FAA\u73AF")]),s(")\u8FC7\u7A0B\u7684\u5404\u79CD\u72B6\u6001.react \u5E94\u7528\u5185\u90E8, \u53EF\u4EE5\u6839\u636E\u8FD9\u4E9B\u5B9E\u4F8B\u53D8\u91CF\u7684\u503C, \u63A7\u5236\u6267\u884C\u903B\u8F91.")])],-1),Nn={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiber.old.js#L431-L449",target:"_blank",rel:"noopener noreferrer"},Un=n("code",null,"HostRootFiber",-1),Sn=s("\u5BF9\u8C61"),zn=n("ul",null,[n("li",null,[s("\u5C5E\u4E8E"),n("code",null,"react-reconciler"),s("\u5305, \u8FD9\u662F react \u5E94\u7528\u4E2D\u7684\u7B2C\u4E00\u4E2A Fiber \u5BF9\u8C61, \u662F Fiber \u6811\u7684\u6839\u8282\u70B9, \u8282\u70B9\u7684\u7C7B\u578B\u662F"),n("code",null,"HostRoot"),s(".")])],-1),$n=n("p",null,[s("\u8FD9 3 \u4E2A\u5BF9\u8C61\u662F react \u4F53\u7CFB\u5F97\u4EE5\u8FD0\u884C\u7684\u57FA\u672C\u4FDD\u969C, \u4E00\u7ECF\u521B\u5EFA\u5927\u591A\u6570\u573A\u666F\u4E0D\u4F1A\u518D\u9500\u6BC1(\u9664\u975E\u5378\u8F7D\u6574\u4E2A\u5E94\u7528"),n("code",null,"root.unmount()"),s(").")],-1),qn=n("p",null,[s("\u8FD9\u4E00\u8FC7\u7A0B\u662F\u4ECE"),n("code",null,"react-dom"),s("\u5305\u53D1\u8D77, \u5185\u90E8\u8C03\u7528\u4E86"),n("code",null,"react-reconciler"),s("\u5305, \u6838\u5FC3\u6D41\u7A0B\u56FE\u5982\u4E0B(\u5176\u4E2D\u7EA2\u8272\u6807\u6CE8\u4E86 3 \u4E2A\u5BF9\u8C61\u7684\u521B\u5EFA\u65F6\u673A).")],-1),Gn=["src"],Pn=o('<p>\u4E0B\u9762\u9010\u4E00\u89E3\u91CA\u8FD9 3 \u4E2A\u5BF9\u8C61\u7684\u521B\u5EFA\u8FC7\u7A0B.</p><h3 id="\u521B\u5EFA-reactdom-blocking-root-\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#\u521B\u5EFA-reactdom-blocking-root-\u5BF9\u8C61" aria-hidden="true">#</a> \u521B\u5EFA ReactDOM(Blocking)Root \u5BF9\u8C61</h3><p>\u7531\u4E8E 3 \u79CD\u6A21\u5F0F\u542F\u52A8\u7684 api \u6709\u6240\u4E0D\u540C, \u6240\u4EE5\u4ECE\u6E90\u7801\u4E0A\u8FFD\u8E2A, \u4E5F\u5BF9\u5E94\u4E86 3 \u79CD\u65B9\u5F0F. \u6700\u7EC8\u90FD new \u4E00\u4E2A<code>ReactDOMRoot</code>\u6216<code>ReactDOMBlockingRoot</code>\u7684\u5B9E\u4F8B, \u9700\u8981\u521B\u5EFA\u8FC7\u7A0B\u4E2D<code>RootTag</code>\u53C2\u6570, 3 \u79CD\u6A21\u5F0F\u5404\u4E0D\u76F8\u540C. \u8BE5<code>RootTag</code>\u7684\u7C7B\u578B\u51B3\u5B9A\u4E86\u6574\u4E2A react \u5E94\u7528\u662F\u5426\u652F\u6301<a href="#%E5%8F%AF%E4%B8%AD%E6%96%AD%E6%B8%B2%E6%9F%93">\u53EF\u4E2D\u65AD\u6E32\u67D3(\u540E\u6587\u6709\u89E3\u91CA)</a>.</p><p>\u4E0B\u9762\u6839\u636E 3 \u79CD mode \u4E0B\u7684\u542F\u52A8\u51FD\u6570\u9010\u4E00\u5206\u6790.</p><h4 id="legacy-\u6A21\u5F0F" tabindex="-1"><a class="header-anchor" href="#legacy-\u6A21\u5F0F" aria-hidden="true">#</a> legacy \u6A21\u5F0F</h4>',5),Vn=n("code",null,"legacy",-1),Qn=s("\u6A21\u5F0F\u8868\u9762\u4E0A\u662F\u76F4\u63A5\u8C03\u7528"),Wn=n("code",null,"ReactDOM.render",-1),Jn=s(", \u8DDF\u8E2A"),Kn=n("code",null,"ReactDOM.render",-1),Xn=s("\u540E\u7EED\u8C03\u7528"),Yn=n("code",null,"legacyRenderSubtreeIntoContainer",-1),Zn=s("("),ns={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-dom/src/client/ReactDOMLegacy.js#L175-L222",target:"_blank",rel:"noopener noreferrer"},ss=s("\u6E90\u7801\u94FE\u63A5"),as=s(")"),es=o(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">legacyRenderSubtreeIntoContainer</span><span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">parentComponent</span><span class="token operator">:</span> <span class="token operator">?</span>React$Component<span class="token operator">&lt;</span>any<span class="token punctuation">,</span> any<span class="token operator">&gt;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">children</span><span class="token operator">:</span> ReactNodeList<span class="token punctuation">,</span>
  <span class="token literal-property property">container</span><span class="token operator">:</span> Container<span class="token punctuation">,</span>
  <span class="token literal-property property">forceHydrate</span><span class="token operator">:</span> boolean<span class="token punctuation">,</span>
  <span class="token literal-property property">callback</span><span class="token operator">:</span> <span class="token operator">?</span>Function<span class="token punctuation">,</span></span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> <span class="token literal-property property">root</span><span class="token operator">:</span> RootType <span class="token operator">=</span> <span class="token punctuation">(</span>container<span class="token punctuation">.</span>_reactRootContainer<span class="token operator">:</span> any<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> fiberRoot<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u521D\u6B21\u8C03\u7528, root\u8FD8\u672A\u521D\u59CB\u5316, \u4F1A\u8FDB\u5165\u6B64\u5206\u652F</span>
    <span class="token comment">//1. \u521B\u5EFAReactDOMRoot\u5BF9\u8C61, \u521D\u59CB\u5316react\u5E94\u7528\u73AF\u5883</span>
    root <span class="token operator">=</span> container<span class="token punctuation">.</span>_reactRootContainer <span class="token operator">=</span> <span class="token function">legacyCreateRootFromDOMContainer</span><span class="token punctuation">(</span>
      container<span class="token punctuation">,</span>
      forceHydrate<span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    fiberRoot <span class="token operator">=</span> root<span class="token punctuation">.</span>_internalRoot<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> callback <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> originalCallback <span class="token operator">=</span> callback<span class="token punctuation">;</span>
      <span class="token function-variable function">callback</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// instance\u6700\u7EC8\u6307\u5411 children(\u5165\u53C2: \u5982&lt;App/&gt;)\u751F\u6210\u7684dom\u8282\u70B9</span>
        <span class="token keyword">const</span> instance <span class="token operator">=</span> <span class="token function">getPublicRootInstance</span><span class="token punctuation">(</span>fiberRoot<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">originalCallback</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>instance<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 2. \u66F4\u65B0\u5BB9\u5668</span>
    <span class="token function">unbatchedUpdates</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">updateContainer</span><span class="token punctuation">(</span>children<span class="token punctuation">,</span> fiberRoot<span class="token punctuation">,</span> parentComponent<span class="token punctuation">,</span> callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// root\u5DF2\u7ECF\u521D\u59CB\u5316, \u4E8C\u6B21\u8C03\u7528render\u4F1A\u8FDB\u5165</span>
    <span class="token comment">// 1. \u83B7\u53D6ReactDOMRoot\u5BF9\u8C61</span>
    fiberRoot <span class="token operator">=</span> root<span class="token punctuation">.</span>_internalRoot<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> callback <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> originalCallback <span class="token operator">=</span> callback<span class="token punctuation">;</span>
      <span class="token function-variable function">callback</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> instance <span class="token operator">=</span> <span class="token function">getPublicRootInstance</span><span class="token punctuation">(</span>fiberRoot<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">originalCallback</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>instance<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 2. \u8C03\u7528\u66F4\u65B0</span>
    <span class="token function">updateContainer</span><span class="token punctuation">(</span>children<span class="token punctuation">,</span> fiberRoot<span class="token punctuation">,</span> parentComponent<span class="token punctuation">,</span> callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token function">getPublicRootInstance</span><span class="token punctuation">(</span>fiberRoot<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7EE7\u7EED\u8DDF\u8E2A<code>legacyCreateRootFromDOMContainer</code>. \u6700\u540E\u8C03\u7528<code>new ReactDOMBlockingRoot(container, LegacyRoot, options);</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">legacyCreateRootFromDOMContainer</span><span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">container</span><span class="token operator">:</span> Container<span class="token punctuation">,</span>
  <span class="token literal-property property">forceHydrate</span><span class="token operator">:</span> boolean<span class="token punctuation">,</span></span>
<span class="token punctuation">)</span><span class="token operator">:</span> RootType <span class="token punctuation">{</span>
  <span class="token keyword">const</span> shouldHydrate <span class="token operator">=</span>
    forceHydrate <span class="token operator">||</span> <span class="token function">shouldHydrateDueToLegacyHeuristic</span><span class="token punctuation">(</span>container<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">createLegacyRoot</span><span class="token punctuation">(</span>
    container<span class="token punctuation">,</span>
    shouldHydrate
      <span class="token operator">?</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">hydrate</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
      <span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">createLegacyRoot</span><span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">container</span><span class="token operator">:</span> Container<span class="token punctuation">,</span>
  options<span class="token operator">?</span><span class="token operator">:</span> RootOptions<span class="token punctuation">,</span></span>
<span class="token punctuation">)</span><span class="token operator">:</span> RootType <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ReactDOMBlockingRoot</span><span class="token punctuation">(</span>container<span class="token punctuation">,</span> LegacyRoot<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6CE8\u610F\u8FD9\u91CC\u7684LegacyRoot\u662F\u56FA\u5B9A\u7684, \u5E76\u4E0D\u662F\u5916\u754C\u4F20\u5165\u7684</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u901A\u8FC7\u4EE5\u4E0A\u5206\u6790,<code>legacy</code>\u6A21\u5F0F\u4E0B\u8C03\u7528<code>ReactDOM.render</code>\u6709 2 \u4E2A\u6838\u5FC3\u6B65\u9AA4:</p><ol><li>\u521B\u5EFA<code>ReactDOMBlockingRoot</code>\u5B9E\u4F8B(\u5728 Concurrent \u6A21\u5F0F\u548C Blocking \u6A21\u5F0F\u4E2D\u8BE6\u7EC6\u5206\u6790\u8BE5\u7C7B), \u521D\u59CB\u5316 react \u5E94\u7528\u73AF\u5883.</li><li>\u8C03\u7528<code>updateContainer</code>\u8FDB\u884C\u66F4\u65B0.</li></ol><h4 id="concurrent-\u6A21\u5F0F\u548C-blocking-\u6A21\u5F0F" tabindex="-1"><a class="header-anchor" href="#concurrent-\u6A21\u5F0F\u548C-blocking-\u6A21\u5F0F" aria-hidden="true">#</a> Concurrent \u6A21\u5F0F\u548C Blocking \u6A21\u5F0F</h4><p><code>Concurrent</code>\u6A21\u5F0F\u548C<code>Blocking</code>\u6A21\u5F0F\u4ECE\u8C03\u7528\u65B9\u5F0F\u4E0A\u76F4\u63A5\u53EF\u4EE5\u770B\u51FA</p><ol><li>\u5206\u522B\u8C03\u7528<code>ReactDOM.createRoot</code>\u548C<code>ReactDOM.createBlockingRoot</code>\u521B\u5EFA<code>ReactDOMRoot</code>\u548C<code>ReactDOMBlockingRoot</code>\u5B9E\u4F8B</li><li>\u8C03\u7528<code>ReactDOMRoot</code>\u548C<code>ReactDOMBlockingRoot</code>\u5B9E\u4F8B\u7684<code>render</code>\u65B9\u6CD5</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">createRoot</span><span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">container</span><span class="token operator">:</span> Container<span class="token punctuation">,</span>
  options<span class="token operator">?</span><span class="token operator">:</span> RootOptions<span class="token punctuation">,</span></span>
<span class="token punctuation">)</span><span class="token operator">:</span> RootType <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ReactDOMRoot</span><span class="token punctuation">(</span>container<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">createBlockingRoot</span><span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">container</span><span class="token operator">:</span> Container<span class="token punctuation">,</span>
  options<span class="token operator">?</span><span class="token operator">:</span> RootOptions<span class="token punctuation">,</span></span>
<span class="token punctuation">)</span><span class="token operator">:</span> RootType <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ReactDOMBlockingRoot</span><span class="token punctuation">(</span>container<span class="token punctuation">,</span> BlockingRoot<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6CE8\u610F\u7B2C2\u4E2A\u53C2\u6570BlockingRoot\u662F\u56FA\u5B9A\u5199\u6B7B\u7684</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7EE7\u7EED\u67E5\u770B<code>ReactDOMRoot</code>\u548C<code>ReactDOMBlockingRoot</code>\u5BF9\u8C61</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">ReactDOMRoot</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">container</span><span class="token operator">:</span> Container<span class="token punctuation">,</span> <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token operator">|</span> RootOptions</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u521B\u5EFA\u4E00\u4E2AfiberRoot\u5BF9\u8C61, \u5E76\u5C06\u5176\u6302\u8F7D\u5230this._internalRoot\u4E4B\u4E0A</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>_internalRoot <span class="token operator">=</span> <span class="token function">createRootImpl</span><span class="token punctuation">(</span>container<span class="token punctuation">,</span> ConcurrentRoot<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">ReactDOMBlockingRoot</span><span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">container</span><span class="token operator">:</span> Container<span class="token punctuation">,</span>
  <span class="token literal-property property">tag</span><span class="token operator">:</span> RootTag<span class="token punctuation">,</span>
  <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token operator">|</span> RootOptions<span class="token punctuation">,</span></span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u521B\u5EFA\u4E00\u4E2AfiberRoot\u5BF9\u8C61, \u5E76\u5C06\u5176\u6302\u8F7D\u5230this._internalRoot\u4E4B\u4E0A</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>_internalRoot <span class="token operator">=</span> <span class="token function">createRootImpl</span><span class="token punctuation">(</span>container<span class="token punctuation">,</span> tag<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token class-name">ReactDOMRoot</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>render <span class="token operator">=</span> <span class="token class-name">ReactDOMBlockingRoot</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">render</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">children</span><span class="token operator">:</span> ReactNodeList<span class="token punctuation">,</span></span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> root <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_internalRoot<span class="token punctuation">;</span>
  <span class="token comment">// \u6267\u884C\u66F4\u65B0</span>
  <span class="token function">updateContainer</span><span class="token punctuation">(</span>children<span class="token punctuation">,</span> root<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token class-name">ReactDOMRoot</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>unmount <span class="token operator">=</span> <span class="token class-name">ReactDOMBlockingRoot</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">unmount</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> root <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_internalRoot<span class="token punctuation">;</span>
  <span class="token keyword">const</span> container <span class="token operator">=</span> root<span class="token punctuation">.</span>containerInfo<span class="token punctuation">;</span>
  <span class="token comment">// \u6267\u884C\u66F4\u65B0</span>
  <span class="token function">updateContainer</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> root<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">unmarkContainerAsRoot</span><span class="token punctuation">(</span>container<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>ReactDOMRoot</code>\u548C<code>ReactDOMBlockingRoot</code>\u6709\u76F8\u540C\u7684\u7279\u6027</p><ol><li>\u8C03\u7528<code>createRootImpl</code>\u521B\u5EFA<code>fiberRoot</code>\u5BF9\u8C61, \u5E76\u5C06\u5176\u6302\u8F7D\u5230<code>this._internalRoot</code>\u4E0A.</li><li>\u539F\u578B\u4E0A\u6709<code>render</code>\u548C<code>umount</code>\u65B9\u6CD5, \u4E14\u5185\u90E8\u90FD\u4F1A\u8C03\u7528<code>updateContainer</code>\u8FDB\u884C\u66F4\u65B0.</li></ol><h3 id="\u521B\u5EFA-fiberroot-\u5BF9\u8C61-create-root-impl" tabindex="-1"><a class="header-anchor" href="#\u521B\u5EFA-fiberroot-\u5BF9\u8C61-create-root-impl" aria-hidden="true">#</a> \u521B\u5EFA fiberRoot \u5BF9\u8C61 {#create-root-impl}</h3><p>\u65E0\u8BBA\u54EA\u79CD\u6A21\u5F0F\u4E0B, \u5728<code>ReactDOM(Blocking)Root</code>\u7684\u521B\u5EFA\u8FC7\u7A0B\u4E2D, \u90FD\u4F1A\u8C03\u7528\u4E00\u4E2A\u76F8\u540C\u7684\u51FD\u6570<code>createRootImpl</code>, \u67E5\u770B\u540E\u7EED\u7684\u51FD\u6570\u8C03\u7528, \u6700\u540E\u4F1A\u521B\u5EFA<code>fiberRoot \u5BF9\u8C61</code>(\u5728\u8FD9\u4E2A\u8FC7\u7A0B\u4E2D, \u7279\u522B\u6CE8\u610F<code>RootTag</code>\u7684\u4F20\u9012\u8FC7\u7A0B):</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u6CE8\u610F: 3\u79CD\u6A21\u5F0F\u4E0B\u7684tag\u662F\u5404\u4E0D\u76F8\u540C(\u5206\u522B\u662FConcurrentRoot,BlockingRoot,LegacyRoot).</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>_internalRoot <span class="token operator">=</span> <span class="token function">createRootImpl</span><span class="token punctuation">(</span>container<span class="token punctuation">,</span> tag<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">createRootImpl</span><span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">container</span><span class="token operator">:</span> Container<span class="token punctuation">,</span>
  <span class="token literal-property property">tag</span><span class="token operator">:</span> RootTag<span class="token punctuation">,</span>
  <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token operator">|</span> RootOptions<span class="token punctuation">,</span></span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ... \u7701\u7565\u90E8\u5206\u6E90\u7801(\u6709\u5173hydrate\u670D\u52A1\u7AEF\u6E32\u67D3\u7B49, \u6682\u65F6\u7528\u4E0D\u4E0A)</span>
  <span class="token comment">// 1. \u521B\u5EFAfiberRoot</span>
  <span class="token keyword">const</span> root <span class="token operator">=</span> <span class="token function">createContainer</span><span class="token punctuation">(</span>container<span class="token punctuation">,</span> tag<span class="token punctuation">,</span> hydrate<span class="token punctuation">,</span> hydrationCallbacks<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6CE8\u610FRootTag\u7684\u4F20\u9012</span>
  <span class="token comment">// 2. \u6807\u8BB0dom\u5BF9\u8C61, \u628Adom\u548Cfiber\u5BF9\u8C61\u5173\u8054\u8D77\u6765</span>
  <span class="token function">markContainerAsRoot</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>current<span class="token punctuation">,</span> container<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// ...\u7701\u7565\u90E8\u5206\u65E0\u5173\u4EE3\u7801</span>
  <span class="token keyword">return</span> root<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">createContainer</span><span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">containerInfo</span><span class="token operator">:</span> Container<span class="token punctuation">,</span>
  <span class="token literal-property property">tag</span><span class="token operator">:</span> RootTag<span class="token punctuation">,</span>
  <span class="token literal-property property">hydrate</span><span class="token operator">:</span> boolean<span class="token punctuation">,</span>
  <span class="token literal-property property">hydrationCallbacks</span><span class="token operator">:</span> <span class="token keyword">null</span> <span class="token operator">|</span> SuspenseHydrationCallbacks<span class="token punctuation">,</span></span>
<span class="token punctuation">)</span><span class="token operator">:</span> OpaqueRoot <span class="token punctuation">{</span>
  <span class="token comment">// \u521B\u5EFAfiberRoot\u5BF9\u8C61</span>
  <span class="token keyword">return</span> <span class="token function">createFiberRoot</span><span class="token punctuation">(</span>containerInfo<span class="token punctuation">,</span> tag<span class="token punctuation">,</span> hydrate<span class="token punctuation">,</span> hydrationCallbacks<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6CE8\u610FRootTag\u7684\u4F20\u9012</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u521B\u5EFA-hostrootfiber-\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#\u521B\u5EFA-hostrootfiber-\u5BF9\u8C61" aria-hidden="true">#</a> \u521B\u5EFA HostRootFiber \u5BF9\u8C61</h3><p>\u5728<code>createFiberRoot</code>\u4E2D, \u521B\u5EFA\u4E86<code>react</code>\u5E94\u7528\u7684\u9996\u4E2A<code>fiber</code>\u5BF9\u8C61, \u79F0\u4E3A<code>HostRootFiber(fiber.tag = HostRoot)</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">createFiberRoot</span><span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">containerInfo</span><span class="token operator">:</span> any<span class="token punctuation">,</span>
  <span class="token literal-property property">tag</span><span class="token operator">:</span> RootTag<span class="token punctuation">,</span>
  <span class="token literal-property property">hydrate</span><span class="token operator">:</span> boolean<span class="token punctuation">,</span>
  <span class="token literal-property property">hydrationCallbacks</span><span class="token operator">:</span> <span class="token keyword">null</span> <span class="token operator">|</span> SuspenseHydrationCallbacks<span class="token punctuation">,</span></span>
<span class="token punctuation">)</span><span class="token operator">:</span> FiberRoot <span class="token punctuation">{</span>
  <span class="token comment">// \u521B\u5EFAfiberRoot\u5BF9\u8C61, \u6CE8\u610FRootTag\u7684\u4F20\u9012</span>
  <span class="token keyword">const</span> <span class="token literal-property property">root</span><span class="token operator">:</span> FiberRoot <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FiberRootNode</span><span class="token punctuation">(</span>containerInfo<span class="token punctuation">,</span> tag<span class="token punctuation">,</span> hydrate<span class="token punctuation">)</span><span class="token operator">:</span> any<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 1. \u8FD9\u91CC\u521B\u5EFA\u4E86\`react\`\u5E94\u7528\u7684\u9996\u4E2A\`fiber\`\u5BF9\u8C61, \u79F0\u4E3A\`HostRootFiber\`</span>
  <span class="token keyword">const</span> uninitializedFiber <span class="token operator">=</span> <span class="token function">createHostRootFiber</span><span class="token punctuation">(</span>tag<span class="token punctuation">)</span><span class="token punctuation">;</span>
  root<span class="token punctuation">.</span>current <span class="token operator">=</span> uninitializedFiber<span class="token punctuation">;</span>
  uninitializedFiber<span class="token punctuation">.</span>stateNode <span class="token operator">=</span> root<span class="token punctuation">;</span>
  <span class="token comment">// 2. \u521D\u59CB\u5316HostRootFiber\u7684updateQueue</span>
  <span class="token function">initializeUpdateQueue</span><span class="token punctuation">(</span>uninitializedFiber<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> root<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u521B\u5EFA<code>HostRootFiber</code>\u65F6, \u5176\u4E2D<code>fiber.mode</code>\u5C5E\u6027, \u4F1A\u4E0E 3 \u79CD<code>RootTag</code>(<code>ConcurrentRoot</code>,<code>BlockingRoot</code>,<code>LegacyRoot</code>)\u5173\u8054\u8D77\u6765.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">createHostRootFiber</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">tag</span><span class="token operator">:</span> RootTag</span><span class="token punctuation">)</span><span class="token operator">:</span> Fiber <span class="token punctuation">{</span>
  <span class="token keyword">let</span> mode<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>tag <span class="token operator">===</span> ConcurrentRoot<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    mode <span class="token operator">=</span> ConcurrentMode <span class="token operator">|</span> BlockingMode <span class="token operator">|</span> StrictMode<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>tag <span class="token operator">===</span> BlockingRoot<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    mode <span class="token operator">=</span> BlockingMode <span class="token operator">|</span> StrictMode<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    mode <span class="token operator">=</span> NoMode<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token function">createFiber</span><span class="token punctuation">(</span>HostRoot<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> mode<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6CE8\u610F\u8FD9\u91CC\u8BBE\u7F6E\u7684mode\u5C5E\u6027\u662F\u7531RootTag\u51B3\u5B9A\u7684</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F:<code>fiber</code>\u6811\u4E2D\u6240\u6709\u8282\u70B9\u7684<code>mode</code>\u90FD\u4F1A\u548C<code>HostRootFiber.mode</code>\u4E00\u81F4(\u65B0\u5EFA\u7684 fiber \u8282\u70B9, \u5176 mode \u6765\u6E90\u4E8E\u7236\u8282\u70B9),\u6240\u4EE5<strong>HostRootFiber.mode</strong>\u975E\u5E38\u91CD\u8981, \u5B83\u51B3\u5B9A\u4E86\u4EE5\u540E\u6574\u4E2A fiber \u6811\u6784\u5EFA\u8FC7\u7A0B.</p><p>\u8FD0\u884C\u5230\u8FD9\u91CC, 3 \u4E2A\u5BF9\u8C61\u521B\u5EFA\u6210\u529F, <code>react</code>\u5E94\u7528\u7684\u521D\u59CB\u5316\u5B8C\u6BD5.</p><p>\u5C06\u6B64\u523B\u5185\u5B58\u4E2D\u5404\u4E2A\u5BF9\u8C61\u7684\u5F15\u7528\u60C5\u51B5\u8868\u793A\u51FA\u6765:</p><ol><li>legacy</li></ol>`,27),os=["src"],ts=n("ol",null,[n("li",null,"concurrent")],-1),ps=["src"],cs=n("ol",null,[n("li",null,"blocking")],-1),ls=["src"],is=o(`<p>\u6CE8\u610F:</p><ol><li>3 \u79CD\u6A21\u5F0F\u4E0B,<code>HostRootFiber.mode</code>\u662F\u4E0D\u4E00\u81F4\u7684</li><li>legacy \u4E0B, <code>div#root</code>\u548C<code>ReactDOMBlockingRoot</code>\u4E4B\u95F4\u901A\u8FC7<code>_reactRootContainer</code>\u5173\u8054. \u5176\u4ED6\u6A21\u5F0F\u662F\u6CA1\u6709\u5173\u8054\u7684</li><li>\u6B64\u65F6<code>reactElement(&lt;App/&gt;)</code>\u8FD8\u662F\u72EC\u7ACB\u5728\u5916\u7684, \u8FD8\u6CA1\u6709\u548C\u76EE\u524D\u521B\u5EFA\u7684 3 \u4E2A\u5168\u5C40\u5BF9\u8C61\u5173\u8054\u8D77\u6765</li></ol><h2 id="\u8C03\u7528\u66F4\u65B0\u5165\u53E3" tabindex="-1"><a class="header-anchor" href="#\u8C03\u7528\u66F4\u65B0\u5165\u53E3" aria-hidden="true">#</a> \u8C03\u7528\u66F4\u65B0\u5165\u53E3</h2><ol><li>legacy \u56DE\u5230<code>legacyRenderSubtreeIntoContainer</code>\u51FD\u6570\u4E2D\u6709:</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 2. \u66F4\u65B0\u5BB9\u5668</span>
<span class="token function">unbatchedUpdates</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">updateContainer</span><span class="token punctuation">(</span>children<span class="token punctuation">,</span> fiberRoot<span class="token punctuation">,</span> parentComponent<span class="token punctuation">,</span> callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>concurrent \u548C blocking \u5728<code>ReactDOM(Blocking)Root</code>\u539F\u578B\u4E0A\u6709<code>render</code>\u65B9\u6CD5</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">ReactDOMRoot</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>render <span class="token operator">=</span> <span class="token class-name">ReactDOMBlockingRoot</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">render</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">children</span><span class="token operator">:</span> ReactNodeList<span class="token punctuation">,</span></span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> root <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_internalRoot<span class="token punctuation">;</span>
  <span class="token comment">// \u6267\u884C\u66F4\u65B0</span>
  <span class="token function">updateContainer</span><span class="token punctuation">(</span>children<span class="token punctuation">,</span> root<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u76F8\u540C\u70B9:</p><ol><li>3 \u79CD\u6A21\u5F0F\u5728\u8C03\u7528\u66F4\u65B0\u65F6\u90FD\u4F1A\u6267\u884C<code>updateContainer</code>. <code>updateContainer</code>\u51FD\u6570\u4E32\u8054\u4E86<code>react-dom</code>\u4E0E<code>react-reconciler</code>, \u4E4B\u540E\u7684\u903B\u8F91\u8FDB\u5165\u4E86<code>react-reconciler</code>\u5305.</li></ol><p>\u4E0D\u540C\u70B9:</p><ol><li><p><code>legacy</code>\u4E0B\u7684\u66F4\u65B0\u4F1A\u5148\u8C03\u7528<code>unbatchedUpdates</code>, \u66F4\u6539\u6267\u884C\u4E0A\u4E0B\u6587\u4E3A<code>LegacyUnbatchedContext</code>, \u4E4B\u540E\u8C03\u7528<code>updateContainer</code>\u8FDB\u884C\u66F4\u65B0.</p></li><li><p><code>concurrent</code>\u548C<code>blocking</code>\u4E0D\u4F1A\u66F4\u6539\u6267\u884C\u4E0A\u4E0B\u6587, \u76F4\u63A5\u8C03\u7528<code>updateContainer</code>\u8FDB\u884C\u66F4\u65B0.</p></li></ol>`,11),rs=s("\u7EE7\u7EED\u8DDF\u8E2A"),us={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberReconciler.old.js#L250-L321",target:"_blank",rel:"noopener noreferrer"},ds=n("code",null,"updateContainer",-1),ks=s("\u51FD\u6570"),vs=o(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">updateContainer</span><span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">element</span><span class="token operator">:</span> ReactNodeList<span class="token punctuation">,</span>
  <span class="token literal-property property">container</span><span class="token operator">:</span> OpaqueRoot<span class="token punctuation">,</span>
  <span class="token literal-property property">parentComponent</span><span class="token operator">:</span> <span class="token operator">?</span>React$Component<span class="token operator">&lt;</span>any<span class="token punctuation">,</span> any<span class="token operator">&gt;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">callback</span><span class="token operator">:</span> <span class="token operator">?</span>Function<span class="token punctuation">,</span></span>
<span class="token punctuation">)</span><span class="token operator">:</span> Lane <span class="token punctuation">{</span>
  <span class="token keyword">const</span> current <span class="token operator">=</span> container<span class="token punctuation">.</span>current<span class="token punctuation">;</span>
  <span class="token comment">// 1. \u83B7\u53D6\u5F53\u524D\u65F6\u95F4\u6233, \u8BA1\u7B97\u672C\u6B21\u66F4\u65B0\u7684\u4F18\u5148\u7EA7</span>
  <span class="token keyword">const</span> eventTime <span class="token operator">=</span> <span class="token function">requestEventTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> lane <span class="token operator">=</span> <span class="token function">requestUpdateLane</span><span class="token punctuation">(</span>current<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 2. \u8BBE\u7F6Efiber.updateQueue</span>
  <span class="token keyword">const</span> update <span class="token operator">=</span> <span class="token function">createUpdate</span><span class="token punctuation">(</span>eventTime<span class="token punctuation">,</span> lane<span class="token punctuation">)</span><span class="token punctuation">;</span>
  update<span class="token punctuation">.</span>payload <span class="token operator">=</span> <span class="token punctuation">{</span> element <span class="token punctuation">}</span><span class="token punctuation">;</span>
  callback <span class="token operator">=</span> callback <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> callback<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>callback <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    update<span class="token punctuation">.</span>callback <span class="token operator">=</span> callback<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">enqueueUpdate</span><span class="token punctuation">(</span>current<span class="token punctuation">,</span> update<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 3. \u8FDB\u5165reconcier\u8FD0\u4F5C\u6D41\u7A0B\u4E2D\u7684\`\u8F93\u5165\`\u73AF\u8282</span>
  <span class="token function">scheduleUpdateOnFiber</span><span class="token punctuation">(</span>current<span class="token punctuation">,</span> lane<span class="token punctuation">,</span> eventTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> lane<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>updateContainer</code>\u51FD\u6570\u4F4D\u4E8E<code>react-reconciler</code>\u5305\u4E2D, \u5B83\u4E32\u8054\u4E86<code>react-dom</code>\u4E0E<code>react-reconciler</code>. \u6B64\u5904\u6682\u65F6\u4E0D\u6DF1\u5165\u5206\u6790<code>updateContainer</code>\u51FD\u6570\u7684\u5177\u4F53\u529F\u80FD, \u9700\u8981\u5173\u6CE8\u5176\u6700\u540E\u8C03\u7528\u4E86<code>scheduleUpdateOnFiber</code>.</p><p>\u5728\u524D\u6587<a href="./reconciler-workflow"><code>reconciler \u8FD0\u4F5C\u6D41\u7A0B</code></a>\u4E2D, \u91CD\u70B9\u5206\u6790\u8FC7<code>scheduleUpdateOnFiber</code>\u662F<code>\u8F93\u5165</code>\u9636\u6BB5\u7684\u5165\u53E3\u51FD\u6570.</p><p>\u6240\u4EE5\u5230\u6B64\u4E3A\u6B62, \u901A\u8FC7\u8C03\u7528<code>react-dom</code>\u5305\u7684<code>api</code>(\u5982: <code>ReactDOM.render</code>), <code>react</code>\u5185\u90E8\u7ECF\u8FC7\u4E00\u7CFB\u5217\u8FD0\u8F6C, \u5B8C\u6210\u4E86\u521D\u59CB\u5316, \u5E76\u4E14\u8FDB\u5165\u4E86<code>reconciler \u8FD0\u4F5C\u6D41\u7A0B</code>\u7684\u7B2C\u4E00\u4E2A\u9636\u6BB5.</p><h2 id="\u601D\u8003" tabindex="-1"><a class="header-anchor" href="#\u601D\u8003" aria-hidden="true">#</a> \u601D\u8003</h2><h3 id="\u53EF\u4E2D\u65AD\u6E32\u67D3" tabindex="-1"><a class="header-anchor" href="#\u53EF\u4E2D\u65AD\u6E32\u67D3" aria-hidden="true">#</a> \u53EF\u4E2D\u65AD\u6E32\u67D3</h3><p>react \u4E2D\u6700\u5E7F\u4E3A\u4EBA\u77E5\u7684\u53EF\u4E2D\u65AD\u6E32\u67D3(render \u53EF\u4EE5\u4E2D\u65AD, \u90E8\u5206\u751F\u547D\u5468\u671F\u51FD\u6570\u6709\u53EF\u80FD\u6267\u884C\u591A\u6B21, <code>UNSAFE_componentWillMount</code>,<code>UNSAFE_componentWillReceiveProps</code>)\u53EA\u6709\u5728<code>HostRootFiber.mode === ConcurrentRoot | BlockingRoot</code>\u624D\u4F1A\u5F00\u542F. \u5982\u679C\u4F7F\u7528\u7684\u662F<code>legacy</code>, \u5373\u901A\u8FC7<code>ReactDOM.render(&lt;App/&gt;, dom)</code>\u8FD9\u79CD\u65B9\u5F0F\u542F\u52A8\u65F6<code>HostRootFiber.mode = NoMode</code>, \u8FD9\u79CD\u60C5\u51B5\u4E0B\u65E0\u8BBA\u662F\u9996\u6B21 render \u8FD8\u662F\u540E\u7EED update \u90FD\u53EA\u4F1A\u8FDB\u5165\u540C\u6B65\u5DE5\u4F5C\u5FAA\u73AF, <code>reconciliation</code>\u6CA1\u6709\u673A\u4F1A\u4E2D\u65AD, \u6240\u4EE5\u751F\u547D\u5468\u671F\u51FD\u6570\u53EA\u4F1A\u8C03\u7528\u4E00\u6B21.</p>`,7),ms=s("\u5BF9\u4E8E"),bs=n("code",null,"\u53EF\u4E2D\u65AD\u6E32\u67D3",-1),hs=s("\u7684\u5BA3\u4F20\u6700\u65E9\u6765\u81EA"),_s={href:"http://conf2017.reactjs.org/speakers/lin",target:"_blank",rel:"noopener noreferrer"},gs=s("2017 \u5E74 Lin Clark \u7684\u6F14\u8BB2"),ys=s(". \u6F14\u8BB2\u4E2D\u9610\u8FF0\u4E86\u672A\u6765 react \u4F1A\u5E94\u7528 fiber \u67B6\u6784, "),Rs=n("code",null,"reconciliation\u53EF\u4E2D\u65AD",-1),fs=s("\u7B49(13:15 \u79D2). \u5728"),ws={href:"https://github.com/facebook/react/blob/master/CHANGELOG#1610-november-9-2017",target:"_blank",rel:"noopener noreferrer"},Cs=n("code",null,"v16.1.0",-1),Os=s("\u4E2D\u5E94\u7528\u4E86 fiber."),Ms=s("\u5728\u6700\u65B0\u7A33\u5B9A\u7248"),js={href:"https://github.com/facebook/react/blob/main/CHANGELOG#1702-march-22-2021",target:"_blank",rel:"noopener noreferrer"},Ds=n("code",null,"v17.0.2",-1),Bs=s("\u4E2D, "),Fs=n("code",null,"\u53EF\u4E2D\u65AD\u6E32\u67D3",-1),xs=s("\u867D\u7136\u5B9E\u73B0, \u4F46\u662F\u5E76\u6CA1\u6709\u5728\u7A33\u5B9A\u7248\u66B4\u9732\u51FA api. \u53EA\u80FD"),Ls={href:"https://github.com/reactwg/react-18/discussions/9",target:"_blank",rel:"noopener noreferrer"},Hs=s("\u5B89\u88C5 alpha \u7248\u672C"),Ts=s("\u624D\u80FD\u4F53\u9A8C\u8BE5\u7279\u6027."),Is=o('<p>\u4F46\u662F\u4E0D\u5C11\u5F00\u53D1\u4EBA\u5458\u8BA4\u4E3A\u7A33\u5B9A\u7248\u672C\u7684<code>react</code>\u5DF2\u7ECF\u662F\u53EF\u4E2D\u65AD\u6E32\u67D3(\u5176\u5B9E\u662F\u6709\u8BEF\u533A\u7684), \u5927\u6982\u7387\u4E5F\u662F\u53D7\u5230\u4E86\u5404\u7C7B\u5BA3\u4F20\u6587\u7AE0\u7684\u5F71\u54CD. \u524D\u7AEF\u5927\u73AF\u5883\u8FD8\u662F\u6BD4\u8F83\u6D6E\u8E81\u7684, \u5728\u5F53\u4E0B, \u66F4\u9700\u8981\u9759\u4E0B\u5FC3\u6765\u5B66\u4E60.</p><h2 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h2><p>\u672C\u7AE0\u8282\u4ECB\u7ECD\u4E86<code>react</code>\u5E94\u7528\u7684 3 \u79CD\u542F\u52A8\u65B9\u5F0F. \u5206\u6790\u4E86\u542F\u52A8\u540E\u521B\u5EFA\u4E86 3 \u4E2A\u5173\u952E\u5BF9\u8C61, \u5E76\u7ED8\u5236\u4E86\u5BF9\u8C61\u5728\u5185\u5B58\u4E2D\u7684\u5F15\u7528\u5173\u7CFB. \u542F\u52A8\u8FC7\u7A0B\u6700\u540E\u8C03\u7528<code>updateContainer</code>\u8FDB\u5165<code>react-reconciler</code>\u5305,\u8FDB\u800C\u8C03\u7528<code>schedulerUpdateOnFiber</code>\u51FD\u6570, \u4E0E<code>reconciler\u8FD0\u4F5C\u6D41\u7A0B</code>\u4E2D\u7684<code>\u8F93\u5165</code>\u9636\u6BB5\u76F8\u8854\u63A5.</p>',3);function Es(t,As){const a=c("ExternalLinkIcon");return l(),i("div",null,[u,n("p",null,[d,k,v,n("a",m,[b,e(a)]),h]),n("ol",null,[n("li",null,[n("p",null,[_,g,y,R,n("a",f,[w,e(a)]),C]),O]),n("li",null,[n("p",null,[n("a",M,[j,e(a)]),D,B,F,x,L,H,T]),I]),n("li",null,[n("p",null,[n("a",E,[A,e(a)]),N,U,S]),z])]),n("p",null,[$,q,G,n("a",P,[V,Q,W,J,e(a)]),K,n("a",X,[Y,Z,nn,e(a)]),sn,n("a",an,[en,e(a)]),on,tn,pn,cn,ln,rn,un,n("a",dn,[kn,e(a)]),vn]),mn,bn,n("img",{src:t.$withBase("/assets/react-illustration-series/process-before.png"),alt:"demo"},null,8,hn),_n,gn,n("ol",null,[n("li",null,[n("a",yn,[Rn,fn,e(a)])])]),n("ul",null,[n("li",null,[wn,Cn,On,n("a",Mn,[jn,Dn,Bn,e(a)]),Fn,xn,Ln])]),n("ol",Hn,[n("li",null,[n("p",null,[n("a",Tn,[In,En,e(a)])]),An]),n("li",null,[n("p",null,[n("a",Nn,[Un,Sn,e(a)])]),zn])]),$n,qn,n("img",{src:t.$withBase("/assets/react-illustration-series/function-call.png"),alt:"demo"},null,8,Gn),Pn,n("p",null,[Vn,Qn,Wn,Jn,Kn,Xn,Yn,Zn,n("a",ns,[ss,e(a)]),as]),es,n("img",{src:t.$withBase("/assets/react-illustration-series/process-legacy.png"),alt:"demo"},null,8,os),ts,n("img",{src:t.$withBase("/assets/react-illustration-series/process-concurrent.png"),alt:"demo"},null,8,ps),cs,n("img",{src:t.$withBase("/assets/react-illustration-series/process-blocking.png"),alt:"demo"},null,8,ls),is,n("p",null,[rs,n("a",us,[ds,ks,e(a)])]),vs,n("p",null,[ms,bs,hs,n("a",_s,[gs,e(a)]),ys,Rs,fs,n("a",ws,[Cs,e(a)]),Os]),n("p",null,[Ms,n("a",js,[Ds,e(a)]),Bs,Fs,xs,n("a",Ls,[Hs,e(a)]),Ts]),Is])}var Ss=p(r,[["render",Es],["__file","bootstrap.html.vue"]]);export{Ss as default};
