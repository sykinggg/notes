import{_ as p}from"./plugin-vue_export-helper.21dcd24c.js";import{r as c,o as l,c as i,b as n,d as e,e as s,a as t}from"./app.83201bd9.js";const u={},r=n("h1",{id:"hook-\u539F\u7406-\u72B6\u6001-hook",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#hook-\u539F\u7406-\u72B6\u6001-hook","aria-hidden":"true"},"#"),s(" Hook \u539F\u7406(\u72B6\u6001 Hook)")],-1),d=n("p",null,[s("\u9996\u5148\u56DE\u987E\u4E00\u4E0B\u524D\u6587"),n("a",{href:"./hook-summary"},"Hook \u539F\u7406(\u6982\u89C8)"),s(", \u5176\u4E3B\u8981\u5185\u5BB9\u6709:")],-1),k=n("code",null,"function",-1),v=s("\u7C7B\u578B\u7684"),m=n("code",null,"fiber",-1),b=s("\u8282\u70B9, \u5B83\u7684\u5904\u7406\u51FD\u6570\u662F"),h={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberBeginWork.old.js#L702-L783",target:"_blank",rel:"noopener noreferrer"},y=s("updateFunctionComponent"),g=s(", \u5176\u4E2D\u518D\u901A\u8FC7"),_={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberHooks.old.js#L342-L476",target:"_blank",rel:"noopener noreferrer"},f=s("renderWithHooks"),w=s("\u8C03\u7528"),S=n("code",null,"function",-1),R=s("."),L=t("<li>\u5728<code>function</code>\u4E2D, \u901A\u8FC7<code>Hook Api</code>(\u5982: <code>useState, useEffect</code>)\u521B\u5EFA<code>Hook</code>\u5BF9\u8C61. <ul><li><code>\u72B6\u6001Hook</code>\u5B9E\u73B0\u4E86\u72B6\u6001\u6301\u4E45\u5316(\u7B49\u540C\u4E8E<code>class\u7EC4\u4EF6</code>\u7EF4\u62A4<code>fiber.memoizedState</code>).</li><li><code>\u526F\u4F5C\u7528Hook</code>\u5219\u5B9E\u73B0\u4E86\u7EF4\u62A4<code>fiber.flags</code>,\u5E76\u63D0\u4F9B<code>\u526F\u4F5C\u7528\u56DE\u8C03</code>(\u7C7B\u4F3C\u4E8E<code>class\u7EC4\u4EF6</code>\u7684\u751F\u547D\u5468\u671F\u56DE\u8C03)</li></ul></li><li>\u591A\u4E2A<code>Hook</code>\u5BF9\u8C61\u6784\u6210\u4E00\u4E2A<code>\u94FE\u8868\u7ED3\u6784</code>, \u5E76\u6302\u8F7D\u5230<code>fiber.memoizedState</code>\u4E4B\u4E0A.</li><li><code>fiber\u6811</code>\u66F4\u65B0\u9636\u6BB5, \u628A<code>current.memoizedState</code>\u94FE\u8868\u4E0A\u7684\u6240\u6709<code>Hook</code>\u6309\u7167\u987A\u5E8F\u514B\u9686\u5230<code>workInProgress.memoizedState</code>\u4E0A, \u5B9E\u73B0\u6570\u636E\u7684\u6301\u4E45\u5316.</li>",3),q=n("p",null,[s("\u5728\u6B64\u57FA\u7840\u4E4B\u4E0A, \u672C\u8282\u5C06\u6DF1\u5165\u5206\u6790"),n("code",null,"\u72B6\u6001Hook"),s("\u7684\u7279\u6027\u548C\u5B9E\u73B0\u539F\u7406.")],-1),x=n("h2",{id:"\u521B\u5EFA-hook",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u521B\u5EFA-hook","aria-hidden":"true"},"#"),s(" \u521B\u5EFA Hook")],-1),j=s("\u5728"),Q=n("code",null,"fiber",-1),B=s("\u521D\u6B21\u6784\u9020\u9636\u6BB5, "),A={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberHooks.old.js#L1787",target:"_blank",rel:"noopener noreferrer"},H=s("useState"),F=s("\u5BF9\u5E94\u6E90\u7801"),z={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberHooks.old.js#L1113-L1136",target:"_blank",rel:"noopener noreferrer"},I=s("mountState"),U=s(", "),P={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberHooks.old.js#L1785",target:"_blank",rel:"noopener noreferrer"},D=s("useReducer"),$=s("\u5BF9\u5E94\u6E90\u7801"),E={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberHooks.old.js#L624-L649",target:"_blank",rel:"noopener noreferrer"},N=s("mountReducer"),O=t(`<p><code>mountState</code>:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> mountState<span class="token operator">&lt;</span><span class="token constant">S</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>
  <span class="token literal-property property">initialState</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">S</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token constant">S</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token constant">S</span><span class="token punctuation">,</span> Dispatch<span class="token operator">&lt;</span>BasicStateAction<span class="token operator">&lt;</span><span class="token constant">S</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
  <span class="token comment">// 1. \u521B\u5EFAhook</span>
  <span class="token keyword">const</span> hook <span class="token operator">=</span> <span class="token function">mountWorkInProgressHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> initialState <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    initialState <span class="token operator">=</span> <span class="token function">initialState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 2. \u521D\u59CB\u5316hook\u7684\u5C5E\u6027</span>
  <span class="token comment">// 2.1 \u8BBE\u7F6E hook.memoizedState/hook.baseState</span>
  <span class="token comment">// 2.2 \u8BBE\u7F6E hook.queue</span>
  hook<span class="token punctuation">.</span>memoizedState <span class="token operator">=</span> hook<span class="token punctuation">.</span>baseState <span class="token operator">=</span> initialState<span class="token punctuation">;</span>
  <span class="token keyword">const</span> queue <span class="token operator">=</span> <span class="token punctuation">(</span>hook<span class="token punctuation">.</span>queue <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">pending</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dispatch</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
    <span class="token comment">// queue.lastRenderedReducer\u662F\u5185\u7F6E\u51FD\u6570</span>
    <span class="token literal-property property">lastRenderedReducer</span><span class="token operator">:</span> basicStateReducer<span class="token punctuation">,</span>
    <span class="token literal-property property">lastRenderedState</span><span class="token operator">:</span> <span class="token punctuation">(</span>initialState<span class="token operator">:</span> any<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 2.3 \u8BBE\u7F6E hook.dispatch</span>
  <span class="token keyword">const</span> <span class="token literal-property property">dispatch</span><span class="token operator">:</span> Dispatch<span class="token operator">&lt;</span>
    BasicStateAction<span class="token operator">&lt;</span><span class="token constant">S</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
  <span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">(</span>queue<span class="token punctuation">.</span>dispatch <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token function">dispatchAction</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>
    <span class="token keyword">null</span><span class="token punctuation">,</span>
    currentlyRenderingFiber<span class="token punctuation">,</span>
    queue<span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token operator">:</span> any<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 3. \u8FD4\u56DE[\u5F53\u524D\u72B6\u6001, dispatch\u51FD\u6570]</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span>hook<span class="token punctuation">.</span>memoizedState<span class="token punctuation">,</span> dispatch<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>mountReducer</code>:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> mountReducer<span class="token operator">&lt;</span><span class="token constant">S</span><span class="token punctuation">,</span> <span class="token constant">I</span><span class="token punctuation">,</span> <span class="token constant">A</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>
  <span class="token function-variable function">reducer</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token constant">S</span><span class="token punctuation">,</span> <span class="token constant">A</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">S</span><span class="token punctuation">,</span>
  <span class="token literal-property property">initialArg</span><span class="token operator">:</span> <span class="token constant">I</span><span class="token punctuation">,</span>
  init<span class="token operator">?</span><span class="token operator">:</span> <span class="token parameter"><span class="token constant">I</span></span> <span class="token operator">=&gt;</span> <span class="token constant">S</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token constant">S</span><span class="token punctuation">,</span> Dispatch<span class="token operator">&lt;</span><span class="token constant">A</span><span class="token operator">&gt;</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
  <span class="token comment">// 1. \u521B\u5EFAhook</span>
  <span class="token keyword">const</span> hook <span class="token operator">=</span> <span class="token function">mountWorkInProgressHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> initialState<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>init <span class="token operator">!==</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    initialState <span class="token operator">=</span> <span class="token function">init</span><span class="token punctuation">(</span>initialArg<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    initialState <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>initialArg<span class="token operator">:</span> any<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">S</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 2. \u521D\u59CB\u5316hook\u7684\u5C5E\u6027</span>
  <span class="token comment">// 2.1 \u8BBE\u7F6E hook.memoizedState/hook.baseState</span>
  hook<span class="token punctuation">.</span>memoizedState <span class="token operator">=</span> hook<span class="token punctuation">.</span>baseState <span class="token operator">=</span> initialState<span class="token punctuation">;</span>
  <span class="token comment">// 2.2 \u8BBE\u7F6E hook.queue</span>
  <span class="token keyword">const</span> queue <span class="token operator">=</span> <span class="token punctuation">(</span>hook<span class="token punctuation">.</span>queue <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">pending</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dispatch</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
    <span class="token comment">// queue.lastRenderedReducer\u662F\u7531\u5916\u4F20\u5165</span>
    <span class="token literal-property property">lastRenderedReducer</span><span class="token operator">:</span> reducer<span class="token punctuation">,</span>
    <span class="token literal-property property">lastRenderedState</span><span class="token operator">:</span> <span class="token punctuation">(</span>initialState<span class="token operator">:</span> any<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 2.3 \u8BBE\u7F6E hook.dispatch</span>
  <span class="token keyword">const</span> <span class="token literal-property property">dispatch</span><span class="token operator">:</span> Dispatch<span class="token operator">&lt;</span><span class="token constant">A</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">(</span>queue<span class="token punctuation">.</span>dispatch <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token function">dispatchAction</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>
    <span class="token keyword">null</span><span class="token punctuation">,</span>
    currentlyRenderingFiber<span class="token punctuation">,</span>
    queue<span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token operator">:</span> any<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 3. \u8FD4\u56DE[\u5F53\u524D\u72B6\u6001, dispatch\u51FD\u6570]</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span>hook<span class="token punctuation">.</span>memoizedState<span class="token punctuation">,</span> dispatch<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>mountState</code>\u548C<code>mountReducer</code>\u903B\u8F91\u7B80\u5355: \u4E3B\u8981\u8D1F\u8D23\u521B\u5EFA<code>hook</code>, \u521D\u59CB\u5316<code>hook</code>\u7684\u5C5E\u6027, \u6700\u540E\u8FD4\u56DE<code>[\u5F53\u524D\u72B6\u6001, dispatch\u51FD\u6570]</code>.</p><p>\u552F\u4E00\u7684\u4E0D\u540C\u70B9\u662F<code>hook.queue.lastRenderedReducer</code>:</p>`,6),W=n("code",null,"mountState",-1),T=s("\u4F7F\u7528\u7684\u662F\u5185\u7F6E\u7684"),C={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberHooks.old.js#L619-L622",target:"_blank",rel:"noopener noreferrer"},V=s("basicStateReducer"),G=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> basicStateReducer<span class="token operator">&lt;</span><span class="token constant">S</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>state<span class="token operator">:</span> <span class="token constant">S</span><span class="token punctuation">,</span> <span class="token literal-property property">action</span><span class="token operator">:</span> BasicStateAction<span class="token operator">&lt;</span><span class="token constant">S</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">S</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">typeof</span> action <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span> <span class="token operator">?</span> <span class="token function">action</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token operator">:</span> action<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),J=n("li",null,[n("code",null,"mountReducer"),s("\u4F7F\u7528\u7684\u662F\u5916\u90E8\u4F20\u5165\u81EA\u5B9A\u4E49"),n("code",null,"reducer")],-1),K=t(`<p>\u53EF\u89C1<code>mountState</code>\u662F<code>mountReducer</code>\u7684\u4E00\u79CD\u7279\u6B8A\u60C5\u51B5, \u5373<code>useState</code>\u4E5F\u662F<code>useReducer</code>\u7684\u4E00\u79CD\u7279\u6B8A\u60C5\u51B5, \u4E5F\u662F\u6700\u7B80\u5355\u7684\u60C5\u51B5.</p><p><code>useState</code>\u53EF\u4EE5\u8F6C\u6362\u6210<code>useReducer</code>:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">[</span>state<span class="token punctuation">,</span> dispatch<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u7B49\u4EF7\u4E8E</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span>state<span class="token punctuation">,</span> dispatch<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useReducer</span><span class="token punctuation">(</span>
  <span class="token keyword">function</span> <span class="token function">basicStateReducer</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> action</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">typeof</span> action <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span> <span class="token operator">?</span> <span class="token function">action</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token operator">:</span> action<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u5F53\u9700\u8981\u66F4\u65B0state\u65F6, \u67092\u79CD\u65B9\u5F0F</span>
<span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1.\u76F4\u63A5\u8BBE\u7F6E</span>
<span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token parameter">state</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">count</span><span class="token operator">:</span> state<span class="token punctuation">.</span>count <span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2.\u901A\u8FC7\u56DE\u8C03\u51FD\u6570\u8BBE\u7F6E</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),M=n("code",null,"userReducer",-1),X=s("\u7684"),Y={href:"https://zh-hans.reactjs.org/docs/hooks-reference.html#usereducer",target:"_blank",rel:"noopener noreferrer"},Z=s("\u5B98\u7F51\u793A\u4F8B"),nn=s(":"),sn=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">[</span>state<span class="token punctuation">,</span> dispatch<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useReducer</span><span class="token punctuation">(</span>
  <span class="token keyword">function</span> <span class="token function">reducer</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> action</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>action<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">case</span> <span class="token string">&#39;increment&#39;</span><span class="token operator">:</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">count</span><span class="token operator">:</span> state<span class="token punctuation">.</span>count <span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token string">&#39;decrement&#39;</span><span class="token operator">:</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">count</span><span class="token operator">:</span> state<span class="token punctuation">.</span>count <span class="token operator">-</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token keyword">default</span><span class="token operator">:</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u5F53\u9700\u8981\u66F4\u65B0state\u65F6, \u53EA\u67091\u79CD\u65B9\u5F0F</span>
<span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;decrement&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u89C1, <code>useState</code>\u5C31\u662F\u5BF9<code>useReducer</code>\u7684\u57FA\u672C\u5C01\u88C5, \u5185\u7F6E\u4E86\u4E00\u4E2A\u7279\u6B8A\u7684<code>reducer</code>(\u540E\u6587\u4E0D\u518D\u533A\u5206<code>useState, useReducer</code>, \u90FD\u4EE5<code>useState</code>\u4E3A\u4F8B).<code>\u521B\u5EFAhook</code>\u4E4B\u540E\u8FD4\u56DE\u503C<code>[hook.memoizedState, dispatch]</code>\u4E2D\u7684<code>dispath</code>\u5B9E\u9645\u4E0A\u4F1A\u8C03\u7528<code>reducer</code>\u51FD\u6570.</p><h2 id="\u72B6\u6001\u521D\u59CB\u5316" tabindex="-1"><a class="header-anchor" href="#\u72B6\u6001\u521D\u59CB\u5316" aria-hidden="true">#</a> \u72B6\u6001\u521D\u59CB\u5316</h2><p>\u5728<code>useState(initialState)</code>\u51FD\u6570\u5185\u90E8, \u8BBE\u7F6E<code>hook.memoizedState = hook.baseState = initialState;</code>, \u521D\u59CB\u72B6\u6001\u88AB\u540C\u65F6\u4FDD\u5B58\u5230\u4E86<code>hook.baseState</code>,<code>hook.memoizedState</code>\u4E2D.</p><ol><li><code>hook.memoizedState</code>: \u5F53\u524D\u72B6\u6001</li><li><code>hook.baseState</code>: <code>\u57FA\u7840</code>\u72B6\u6001, \u4F5C\u4E3A\u5408\u5E76<code>hook.baseQueue</code>\u7684\u521D\u59CB\u503C(\u4E0B\u6587\u4ECB\u7ECD).</li></ol><p>\u6700\u540E\u8FD4\u56DE<code>[hook.memoizedState, dispatch]</code>, \u6240\u4EE5\u5728<code>function</code>\u4E2D\u4F7F\u7528\u7684\u662F<code>hook.memoizedState</code>.</p><h2 id="\u72B6\u6001\u66F4\u65B0" tabindex="-1"><a class="header-anchor" href="#\u72B6\u6001\u66F4\u65B0" aria-hidden="true">#</a> \u72B6\u6001\u66F4\u65B0</h2>`,7),an=s("\u6709\u5982\u4E0B\u4EE3\u7801:"),en={href:"https://codesandbox.io/s/hook-status-vhlf8?fontsize=14&hidenavigation=1&theme=dark",target:"_blank",rel:"noopener noreferrer"},tn=n("img",{src:"https://codesandbox.io/static/img/play-codesandbox.svg",alt:"Edit hook-status"},null,-1),on=t(`<div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>count<span class="token punctuation">,</span> dispatch<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span>
      <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
    <span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token punctuation">{</span>count<span class="token punctuation">}</span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u521D\u6B21\u6E32\u67D3\u65F6<code>count = 0</code>, \u8FD9\u65F6<code>hook</code>\u5BF9\u8C61\u7684\u5185\u5B58\u72B6\u6001\u5982\u4E0B:</p>`,2),pn=["src"],cn=s("\u70B9\u51FB"),ln=n("code",null,"button",-1),un=s(", \u901A\u8FC7"),rn=n("code",null,"dispatch",-1),dn=s("\u51FD\u6570\u8FDB\u884C\u66F4\u65B0, "),kn=n("code",null,"dispatch",-1),vn=s("\u5B9E\u9645\u5C31\u662F"),mn={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberHooks.old.js#L1645-L1753",target:"_blank",rel:"noopener noreferrer"},bn=s("dispatchAction"),hn=s(":"),yn=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> dispatchAction<span class="token operator">&lt;</span><span class="token constant">S</span><span class="token punctuation">,</span> <span class="token constant">A</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>
  <span class="token literal-property property">fiber</span><span class="token operator">:</span> Fiber<span class="token punctuation">,</span>
  <span class="token literal-property property">queue</span><span class="token operator">:</span> UpdateQueue<span class="token operator">&lt;</span><span class="token constant">S</span><span class="token punctuation">,</span> <span class="token constant">A</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">action</span><span class="token operator">:</span> <span class="token constant">A</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 1. \u521B\u5EFAupdate\u5BF9\u8C61</span>
  <span class="token keyword">const</span> eventTime <span class="token operator">=</span> <span class="token function">requestEventTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> lane <span class="token operator">=</span> <span class="token function">requestUpdateLane</span><span class="token punctuation">(</span>fiber<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Legacy\u6A21\u5F0F\u8FD4\u56DESyncLane</span>
  <span class="token keyword">const</span> <span class="token literal-property property">update</span><span class="token operator">:</span> Update<span class="token operator">&lt;</span><span class="token constant">S</span><span class="token punctuation">,</span> <span class="token constant">A</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    lane<span class="token punctuation">,</span>
    action<span class="token punctuation">,</span>
    <span class="token literal-property property">eagerReducer</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
    <span class="token literal-property property">eagerState</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
    <span class="token literal-property property">next</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token keyword">null</span><span class="token operator">:</span> any<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token comment">// 2. \u5C06update\u5BF9\u8C61\u6DFB\u52A0\u5230hook.queue.pending\u961F\u5217</span>
  <span class="token keyword">const</span> pending <span class="token operator">=</span> queue<span class="token punctuation">.</span>pending<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>pending <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u9996\u4E2Aupdate, \u521B\u5EFA\u4E00\u4E2A\u73AF\u5F62\u94FE\u8868</span>
    update<span class="token punctuation">.</span>next <span class="token operator">=</span> update<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    update<span class="token punctuation">.</span>next <span class="token operator">=</span> pending<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    pending<span class="token punctuation">.</span>next <span class="token operator">=</span> update<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  queue<span class="token punctuation">.</span>pending <span class="token operator">=</span> update<span class="token punctuation">;</span>

  <span class="token keyword">const</span> alternate <span class="token operator">=</span> fiber<span class="token punctuation">.</span>alternate<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>
    fiber <span class="token operator">===</span> currentlyRenderingFiber <span class="token operator">||</span>
    <span class="token punctuation">(</span>alternate <span class="token operator">!==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> alternate <span class="token operator">===</span> currentlyRenderingFiber<span class="token punctuation">)</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6E32\u67D3\u65F6\u66F4\u65B0, \u505A\u597D\u5168\u5C40\u6807\u8BB0</span>
    didScheduleRenderPhaseUpdateDuringThisPass <span class="token operator">=</span> didScheduleRenderPhaseUpdate <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...\u7701\u7565\u6027\u80FD\u4F18\u5316\u90E8\u5206, \u4E0B\u6587\u4ECB\u7ECD</span>

    <span class="token comment">// 3. \u53D1\u8D77\u8C03\u5EA6\u66F4\u65B0, \u8FDB\u5165\`reconciler \u8FD0\u4F5C\u6D41\u7A0B\`\u4E2D\u7684\u8F93\u5165\u9636\u6BB5.</span>
    <span class="token function">scheduleUpdateOnFiber</span><span class="token punctuation">(</span>fiber<span class="token punctuation">,</span> lane<span class="token punctuation">,</span> eventTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u903B\u8F91\u5341\u5206\u6E05\u6670:</p><ol><li>\u521B\u5EFA<code>update</code>\u5BF9\u8C61, \u5176\u4E2D<code>update.lane</code>\u4EE3\u8868\u4F18\u5148\u7EA7(\u53EF\u56DE\u987E<a href="./fibertree-prepare#update-lane">fiber \u6811\u6784\u9020(\u57FA\u7840\u51C6\u5907)</a>\u4E2D\u7684<code>update\u4F18\u5148\u7EA7</code>).</li><li>\u5C06<code>update</code>\u5BF9\u8C61\u6DFB\u52A0\u5230<code>hook.queue.pending</code>\u73AF\u5F62\u94FE\u8868. <ul><li><code>\u73AF\u5F62\u94FE\u8868</code>\u7684\u7279\u5F81: \u4E3A\u4E86\u65B9\u4FBF\u6DFB\u52A0\u65B0\u5143\u7D20\u548C\u5FEB\u901F\u62FF\u5230\u961F\u9996\u5143\u7D20(\u90FD\u662F<code>O(1)</code>), \u6240\u4EE5<code>pending</code>\u6307\u9488\u6307\u5411\u4E86\u94FE\u8868\u4E2D\u6700\u540E\u4E00\u4E2A\u5143\u7D20.</li><li>\u94FE\u8868\u7684\u4F7F\u7528\u65B9\u5F0F\u53EF\u4EE5\u53C2\u8003<a href="../algorithm/linkedlist">React \u7B97\u6CD5\u4E4B\u94FE\u8868\u64CD\u4F5C</a></li></ul></li><li>\u53D1\u8D77\u8C03\u5EA6\u66F4\u65B0: \u8C03\u7528<code>scheduleUpdateOnFiber</code>, \u8FDB\u5165<code>reconciler \u8FD0\u4F5C\u6D41\u7A0B</code>\u4E2D\u7684\u8F93\u5165\u9636\u6BB5.</li></ol><p>\u4ECE\u8C03\u7528<code>scheduleUpdateOnFiber</code>\u5F00\u59CB, \u8FDB\u5165\u4E86<code>react-reconciler</code>\u5305, \u5176\u4E2D\u7684\u6240\u6709\u903B\u8F91\u53EF\u56DE\u987E<a href="./reconciler-workflow">reconciler \u8FD0\u4F5C\u6D41\u7A0B</a>, \u672C\u8282\u53EA\u8BA8\u8BBA<code>\u72B6\u6001Hook</code>\u76F8\u5173\u903B\u8F91.</p><p>\u6CE8\u610F: \u672C\u793A\u4F8B\u4E2D\u867D\u7136\u540C\u65F6\u6267\u884C\u4E86 3 \u6B21 dispatch, \u4F1A\u8BF7\u6C42 3 \u6B21\u8C03\u5EA6, \u7531\u4E8E\u8C03\u5EA6\u4E2D\u5FC3\u7684<a href="./scheduler##throttle-debounce">\u8282\u6D41\u4F18\u5316</a>, \u6700\u540E\u53EA\u4F1A\u6267\u884C\u4E00\u6B21\u6E32\u67D3</p>`,5),gn=s("\u5728"),_n=n("code",null,"fiber\u6811\u6784\u9020(\u5BF9\u6BD4\u66F4\u65B0)",-1),fn=s("\u8FC7\u7A0B\u4E2D, \u518D\u6B21\u8C03\u7528"),wn=n("code",null,"function",-1),Sn=s(", \u8FD9\u65F6"),Rn={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberHooks.old.js#L1808",target:"_blank",rel:"noopener noreferrer"},Ln=s("useState"),qn=s("\u5BF9\u5E94\u7684\u51FD\u6570\u662F"),xn={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberHooks.old.js#L1138-L1142",target:"_blank",rel:"noopener noreferrer"},jn=s("updateState"),Qn=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> updateState<span class="token operator">&lt;</span><span class="token constant">S</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>
  <span class="token literal-property property">initialState</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">S</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token constant">S</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token constant">S</span><span class="token punctuation">,</span> Dispatch<span class="token operator">&lt;</span>BasicStateAction<span class="token operator">&lt;</span><span class="token constant">S</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">updateReducer</span><span class="token punctuation">(</span>basicStateReducer<span class="token punctuation">,</span> <span class="token punctuation">(</span>initialState<span class="token operator">:</span> any<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),Bn=s("\u5B9E\u9645\u8C03\u7528"),An={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberHooks.old.js#L651-L783",target:"_blank",rel:"noopener noreferrer"},Hn=s("updateReducer"),Fn=s("."),zn=n("p",null,[s("\u5728\u6267\u884C"),n("code",null,"updateReducer"),s("\u4E4B\u524D, "),n("code",null,"hook"),s("\u76F8\u5173\u7684\u5185\u5B58\u7ED3\u6784\u5982\u4E0B:")],-1),In=["src"],Un=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> updateReducer<span class="token operator">&lt;</span><span class="token constant">S</span><span class="token punctuation">,</span> <span class="token constant">I</span><span class="token punctuation">,</span> <span class="token constant">A</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>
  <span class="token function-variable function">reducer</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token constant">S</span><span class="token punctuation">,</span> <span class="token constant">A</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">S</span><span class="token punctuation">,</span>
  <span class="token literal-property property">initialArg</span><span class="token operator">:</span> <span class="token constant">I</span><span class="token punctuation">,</span>
  init<span class="token operator">?</span><span class="token operator">:</span> <span class="token parameter"><span class="token constant">I</span></span> <span class="token operator">=&gt;</span> <span class="token constant">S</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token constant">S</span><span class="token punctuation">,</span> Dispatch<span class="token operator">&lt;</span><span class="token constant">A</span><span class="token operator">&gt;</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
  <span class="token comment">// 1. \u83B7\u53D6workInProgressHook\u5BF9\u8C61</span>
  <span class="token keyword">const</span> hook <span class="token operator">=</span> <span class="token function">updateWorkInProgressHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> queue <span class="token operator">=</span> hook<span class="token punctuation">.</span>queue<span class="token punctuation">;</span>
  queue<span class="token punctuation">.</span>lastRenderedReducer <span class="token operator">=</span> reducer<span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token literal-property property">current</span><span class="token operator">:</span> Hook <span class="token operator">=</span> <span class="token punctuation">(</span>currentHook<span class="token operator">:</span> any<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> baseQueue <span class="token operator">=</span> current<span class="token punctuation">.</span>baseQueue<span class="token punctuation">;</span>

  <span class="token comment">// 2. \u94FE\u8868\u62FC\u63A5: \u5C06 hook.queue.pending \u62FC\u63A5\u5230 current.baseQueue</span>
  <span class="token keyword">const</span> pendingQueue <span class="token operator">=</span> queue<span class="token punctuation">.</span>pending<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>pendingQueue <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>baseQueue <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> baseFirst <span class="token operator">=</span> baseQueue<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
      <span class="token keyword">const</span> pendingFirst <span class="token operator">=</span> pendingQueue<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
      baseQueue<span class="token punctuation">.</span>next <span class="token operator">=</span> pendingFirst<span class="token punctuation">;</span>
      pendingQueue<span class="token punctuation">.</span>next <span class="token operator">=</span> baseFirst<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    current<span class="token punctuation">.</span>baseQueue <span class="token operator">=</span> baseQueue <span class="token operator">=</span> pendingQueue<span class="token punctuation">;</span>
    queue<span class="token punctuation">.</span>pending <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 3. \u72B6\u6001\u8BA1\u7B97</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>baseQueue <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> first <span class="token operator">=</span> baseQueue<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token keyword">let</span> newState <span class="token operator">=</span> current<span class="token punctuation">.</span>baseState<span class="token punctuation">;</span>

    <span class="token keyword">let</span> newBaseState <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> newBaseQueueFirst <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> newBaseQueueLast <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> update <span class="token operator">=</span> first<span class="token punctuation">;</span>

    <span class="token keyword">do</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> updateLane <span class="token operator">=</span> update<span class="token punctuation">.</span>lane<span class="token punctuation">;</span>
      <span class="token comment">// 3.1 \u4F18\u5148\u7EA7\u63D0\u53D6update</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isSubsetOfLanes</span><span class="token punctuation">(</span>renderLanes<span class="token punctuation">,</span> updateLane<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u4F18\u5148\u7EA7\u4E0D\u591F: \u52A0\u5165\u5230baseQueue\u4E2D, \u7B49\u5F85\u4E0B\u4E00\u6B21render</span>
        <span class="token keyword">const</span> <span class="token literal-property property">clone</span><span class="token operator">:</span> Update<span class="token operator">&lt;</span><span class="token constant">S</span><span class="token punctuation">,</span> <span class="token constant">A</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">lane</span><span class="token operator">:</span> updateLane<span class="token punctuation">,</span>
          <span class="token literal-property property">action</span><span class="token operator">:</span> update<span class="token punctuation">.</span>action<span class="token punctuation">,</span>
          <span class="token literal-property property">eagerReducer</span><span class="token operator">:</span> update<span class="token punctuation">.</span>eagerReducer<span class="token punctuation">,</span>
          <span class="token literal-property property">eagerState</span><span class="token operator">:</span> update<span class="token punctuation">.</span>eagerState<span class="token punctuation">,</span>
          <span class="token literal-property property">next</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token keyword">null</span><span class="token operator">:</span> any<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>newBaseQueueLast <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          newBaseQueueFirst <span class="token operator">=</span> newBaseQueueLast <span class="token operator">=</span> clone<span class="token punctuation">;</span>
          newBaseState <span class="token operator">=</span> newState<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          newBaseQueueLast <span class="token operator">=</span> newBaseQueueLast<span class="token punctuation">.</span>next <span class="token operator">=</span> clone<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        currentlyRenderingFiber<span class="token punctuation">.</span>lanes <span class="token operator">=</span> <span class="token function">mergeLanes</span><span class="token punctuation">(</span>
          currentlyRenderingFiber<span class="token punctuation">.</span>lanes<span class="token punctuation">,</span>
          updateLane<span class="token punctuation">,</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">markSkippedUpdateLanes</span><span class="token punctuation">(</span>updateLane<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u4F18\u5148\u7EA7\u8DB3\u591F: \u72B6\u6001\u5408\u5E76</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>newBaseQueueLast <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// \u66F4\u65B0baseQueue</span>
          <span class="token keyword">const</span> <span class="token literal-property property">clone</span><span class="token operator">:</span> Update<span class="token operator">&lt;</span><span class="token constant">S</span><span class="token punctuation">,</span> <span class="token constant">A</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">lane</span><span class="token operator">:</span> NoLane<span class="token punctuation">,</span>
            <span class="token literal-property property">action</span><span class="token operator">:</span> update<span class="token punctuation">.</span>action<span class="token punctuation">,</span>
            <span class="token literal-property property">eagerReducer</span><span class="token operator">:</span> update<span class="token punctuation">.</span>eagerReducer<span class="token punctuation">,</span>
            <span class="token literal-property property">eagerState</span><span class="token operator">:</span> update<span class="token punctuation">.</span>eagerState<span class="token punctuation">,</span>
            <span class="token literal-property property">next</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token keyword">null</span><span class="token operator">:</span> any<span class="token punctuation">)</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">;</span>
          newBaseQueueLast <span class="token operator">=</span> newBaseQueueLast<span class="token punctuation">.</span>next <span class="token operator">=</span> clone<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>update<span class="token punctuation">.</span>eagerReducer <span class="token operator">===</span> reducer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// \u6027\u80FD\u4F18\u5316: \u5982\u679C\u5B58\u5728 update.eagerReducer, \u76F4\u63A5\u4F7F\u7528update.eagerState.\u907F\u514D\u91CD\u590D\u8C03\u7528reducer</span>
          newState <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>update<span class="token punctuation">.</span>eagerState<span class="token operator">:</span> any<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">S</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token keyword">const</span> action <span class="token operator">=</span> update<span class="token punctuation">.</span>action<span class="token punctuation">;</span>
          <span class="token comment">// \u8C03\u7528reducer\u83B7\u53D6\u6700\u65B0\u72B6\u6001</span>
          newState <span class="token operator">=</span> <span class="token function">reducer</span><span class="token punctuation">(</span>newState<span class="token punctuation">,</span> action<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      update <span class="token operator">=</span> update<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span>update <span class="token operator">!==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> update <span class="token operator">!==</span> first<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 3.2. \u66F4\u65B0\u5C5E\u6027</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>newBaseQueueLast <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      newBaseState <span class="token operator">=</span> newState<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      newBaseQueueLast<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token punctuation">(</span>newBaseQueueFirst<span class="token operator">:</span> any<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">is</span><span class="token punctuation">(</span>newState<span class="token punctuation">,</span> hook<span class="token punctuation">.</span>memoizedState<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">markWorkInProgressReceivedUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u628A\u8BA1\u7B97\u4E4B\u540E\u7684\u7ED3\u679C\u66F4\u65B0\u5230workInProgressHook\u4E0A</span>
    hook<span class="token punctuation">.</span>memoizedState <span class="token operator">=</span> newState<span class="token punctuation">;</span>
    hook<span class="token punctuation">.</span>baseState <span class="token operator">=</span> newBaseState<span class="token punctuation">;</span>
    hook<span class="token punctuation">.</span>baseQueue <span class="token operator">=</span> newBaseQueueLast<span class="token punctuation">;</span>
    queue<span class="token punctuation">.</span>lastRenderedState <span class="token operator">=</span> newState<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> <span class="token literal-property property">dispatch</span><span class="token operator">:</span> Dispatch<span class="token operator">&lt;</span><span class="token constant">A</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">(</span>queue<span class="token punctuation">.</span>dispatch<span class="token operator">:</span> any<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span>hook<span class="token punctuation">.</span>memoizedState<span class="token punctuation">,</span> dispatch<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>updateReducer</code>\u51FD\u6570, \u4EE3\u7801\u76F8\u5BF9\u8F83\u957F, \u4F46\u662F\u903B\u8F91\u5206\u660E:</p>`,2),Pn=n("li",null,[n("p",null,[s("\u8C03\u7528"),n("code",null,"updateWorkInProgressHook"),s("\u83B7\u53D6"),n("code",null,"workInProgressHook"),s("\u5BF9\u8C61")])],-1),Dn=n("p",null,[s("\u94FE\u8868\u62FC\u63A5: \u5C06 "),n("code",null,"hook.queue.pending"),s(" \u62FC\u63A5\u5230 "),n("code",null,"current.baseQueue")],-1),$n=["src"],En=n("p",null,"\u72B6\u6001\u8BA1\u7B97",-1),Nn=n("li",null,[n("p",null,[n("code",null,"update"),s("\u4F18\u5148\u7EA7\u4E0D\u591F: \u52A0\u5165\u5230 baseQueue \u4E2D, \u7B49\u5F85\u4E0B\u4E00\u6B21 render")])],-1),On=n("li",null,[n("p",null,[n("code",null,"update"),s("\u4F18\u5148\u7EA7\u8DB3\u591F: \u72B6\u6001\u5408\u5E76")])],-1),Wn=n("p",null,"\u66F4\u65B0\u5C5E\u6027",-1),Tn=["src"],Cn=t(`<h3 id="\u6027\u80FD\u4F18\u5316" tabindex="-1"><a class="header-anchor" href="#\u6027\u80FD\u4F18\u5316" aria-hidden="true">#</a> \u6027\u80FD\u4F18\u5316</h3><p><code>dispatchAction</code>\u51FD\u6570\u4E2D, \u5728\u8C03\u7528<code>scheduleUpdateOnFiber</code>\u4E4B\u524D, \u9488\u5BF9<code>update</code>\u5BF9\u8C61\u505A\u4E86\u6027\u80FD\u4F18\u5316.</p><ol><li><code>queue.pending</code>\u4E2D\u53EA\u5305\u542B\u5F53\u524D<code>update</code>\u65F6, \u5373\u5F53\u524D<code>update</code>\u662F<code>queue.pending</code>\u4E2D\u7684\u7B2C\u4E00\u4E2A<code>update</code></li><li>\u76F4\u63A5\u8C03\u7528<code>queue.lastRenderedReducer</code>,\u8BA1\u7B97\u51FA<code>update</code>\u4E4B\u540E\u7684 state, \u8BB0\u4E3A<code>eagerState</code></li><li>\u5982\u679C<code>eagerState</code>\u4E0E<code>currentState</code>\u76F8\u540C, \u5219\u76F4\u63A5\u9000\u51FA, \u4E0D\u7528\u53D1\u8D77\u8C03\u5EA6\u66F4\u65B0.</li><li>\u5DF2\u7ECF\u88AB\u6302\u8F7D\u5230<code>queue.pending</code>\u4E0A\u7684<code>update</code>\u4F1A\u5728\u4E0B\u4E00\u6B21<code>render</code>\u65F6\u518D\u6B21\u5408\u5E76.</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> dispatchAction<span class="token operator">&lt;</span><span class="token constant">S</span><span class="token punctuation">,</span> <span class="token constant">A</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>
  <span class="token literal-property property">fiber</span><span class="token operator">:</span> Fiber<span class="token punctuation">,</span>
  <span class="token literal-property property">queue</span><span class="token operator">:</span> UpdateQueue<span class="token operator">&lt;</span><span class="token constant">S</span><span class="token punctuation">,</span> <span class="token constant">A</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">action</span><span class="token operator">:</span> <span class="token constant">A</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...\u7701\u7565\u65E0\u5173\u4EE3\u7801 ...\u53EA\u4FDD\u7559\u6027\u80FD\u4F18\u5316\u90E8\u5206\u4EE3\u7801:</span>

  <span class="token comment">// \u4E0B\u9762\u8FD9\u4E2Aif\u5224\u65AD, \u80FD\u4FDD\u8BC1\u5F53\u524D\u521B\u5EFA\u7684update, \u662F\`queue.pending\`\u4E2D\u7B2C\u4E00\u4E2A\`update\`. \u4E3A\u4EC0\u4E48? \u53D1\u8D77\u66F4\u65B0\u4E4B\u540Efiber.lanes\u4F1A\u88AB\u6539\u52A8(\u53EF\u4EE5\u56DE\u987E\`fiber \u6811\u6784\u9020(\u5BF9\u6BD4\u66F4\u65B0)\`\u7AE0\u8282), \u5982\u679C\`fiber.lanes &amp;&amp; alternate.lanes\`\u6CA1\u6709\u88AB\u6539\u52A8, \u81EA\u7136\u5C31\u662F\u9996\u4E2Aupdate</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>
    fiber<span class="token punctuation">.</span>lanes <span class="token operator">===</span> NoLanes <span class="token operator">&amp;&amp;</span>
    <span class="token punctuation">(</span>alternate <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token operator">||</span> alternate<span class="token punctuation">.</span>lanes <span class="token operator">===</span> NoLanes<span class="token punctuation">)</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> lastRenderedReducer <span class="token operator">=</span> queue<span class="token punctuation">.</span>lastRenderedReducer<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>lastRenderedReducer <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> prevDispatcher<span class="token punctuation">;</span>
      <span class="token keyword">const</span> <span class="token literal-property property">currentState</span><span class="token operator">:</span> <span class="token constant">S</span> <span class="token operator">=</span> <span class="token punctuation">(</span>queue<span class="token punctuation">.</span>lastRenderedState<span class="token operator">:</span> any<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> eagerState <span class="token operator">=</span> <span class="token function">lastRenderedReducer</span><span class="token punctuation">(</span>currentState<span class="token punctuation">,</span> action<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// \u6682\u5B58\`eagerReducer\`\u548C\`eagerState\`, \u5982\u679C\u5728render\u9636\u6BB5reducer==update.eagerReducer, \u5219\u53EF\u4EE5\u76F4\u63A5\u4F7F\u7528\u65E0\u9700\u518D\u6B21\u8BA1\u7B97</span>
      update<span class="token punctuation">.</span>eagerReducer <span class="token operator">=</span> lastRenderedReducer<span class="token punctuation">;</span>
      update<span class="token punctuation">.</span>eagerState <span class="token operator">=</span> eagerState<span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is</span><span class="token punctuation">(</span>eagerState<span class="token punctuation">,</span> currentState<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5FEB\u901F\u901A\u9053, eagerState\u4E0EcurrentState\u76F8\u540C, \u65E0\u9700\u8C03\u5EA6\u66F4\u65B0</span>
        <span class="token comment">// \u6CE8: update\u5DF2\u7ECF\u88AB\u6DFB\u52A0\u5230\u4E86queue.pending, \u5E76\u6CA1\u6709\u4E22\u5F03. \u4E4B\u540E\u9700\u8981\u66F4\u65B0\u7684\u65F6\u5019, \u6B64update\u8FD8\u662F\u4F1A\u8D77\u4F5C\u7528</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u53D1\u8D77\u8C03\u5EA6\u66F4\u65B0, \u8FDB\u5165\`reconciler \u8FD0\u4F5C\u6D41\u7A0B\`\u4E2D\u7684\u8F93\u5165\u9636\u6BB5.</span>
  <span class="token function">scheduleUpdateOnFiber</span><span class="token punctuation">(</span>fiber<span class="token punctuation">,</span> lane<span class="token punctuation">,</span> eventTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),Vn=s("\u4E3A\u4E86\u9A8C\u8BC1\u4E0A\u8FF0\u4F18\u5316, \u53EF\u4EE5\u67E5\u770B\u8FD9\u4E2A demo:"),Gn={href:"https://codesandbox.io/s/hook-throttle-58ly5?fontsize=14&hidenavigation=1&theme=dark",target:"_blank",rel:"noopener noreferrer"},Jn=n("img",{src:"https://codesandbox.io/static/img/play-codesandbox.svg",alt:"Edit hook-throttle"},null,-1),Kn=t('<h3 id="\u5F02\u6B65\u66F4\u65B0" tabindex="-1"><a class="header-anchor" href="#\u5F02\u6B65\u66F4\u65B0" aria-hidden="true">#</a> \u5F02\u6B65\u66F4\u65B0</h3><p>\u4E0A\u8FF0\u793A\u4F8B\u90FD\u662F\u4E3A\u5728<code>Legacy</code>\u6A21\u5F0F\u4E0B, \u6240\u4EE5\u5747\u4E3A\u540C\u6B65\u66F4\u65B0. \u6240\u4EE5<code>update</code>\u5BF9\u8C61\u4F1A\u88AB\u5168\u91CF\u5408\u5E76,<code>hook.baseQueue</code>\u548C<code>hook.baseState</code>\u5E76\u6CA1\u6709\u8D77\u5230\u5B9E\u8D28\u4F5C\u7528.</p><p>\u867D\u7136\u5728<code>v17.x</code>\u7248\u672C\u4E2D, \u5E76\u6CA1\u6709<code>Concurrent</code>\u6A21\u5F0F\u7684\u5165\u53E3, \u5373\u5C06\u53D1\u5E03\u7684<code>v18.x</code>\u7248\u672C\u5C06\u5168\u9762\u8FDB\u5165\u5F02\u6B65\u65F6\u4EE3, \u6240\u4EE5\u672C\u8282\u63D0\u524D\u68B3\u7406\u4E00\u4E0B<code>update</code>\u5F02\u6B65\u5408\u5E76\u7684\u903B\u8F91. \u540C\u65F6\u52A0\u6DF1<code>hook.baseQueue</code>\u548C<code>hook.baseState</code>\u7684\u7406\u89E3.</p><p>\u5047\u8BBE\u6709\u4E00\u4E2A<code>queue.pending</code>\u94FE\u8868, \u5176\u4E2D<code>update</code>\u4F18\u5148\u7EA7\u4E0D\u540C, <code>\u7EFF\u8272</code>\u8868\u793A\u9AD8\u4F18\u5148\u7EA7, <code>\u7070\u8272</code>\u8868\u793A\u4F4E\u4F18\u5148\u7EA7, <code>\u7EA2\u8272</code>\u8868\u793A\u6700\u9AD8\u4F18\u5148\u7EA7.</p><p>\u5728\u6267\u884C<code>updateReducer</code>\u4E4B\u524D, <code>hook.memoizedState</code>\u6709\u5982\u4E0B\u7ED3\u6784(\u5176\u4E2D<code>update3, update4</code>\u662F\u4F4E\u4F18\u5148\u7EA7):</p>',5),Mn=["src"],Xn=n("p",null,"\u94FE\u8868\u62FC\u63A5:",-1),Yn=n("ul",null,[n("li",null,[s("\u548C\u540C\u6B65\u66F4\u65B0\u65F6\u4E00\u81F4, \u76F4\u63A5\u628A"),n("code",null,"queue.pending"),s("\u62FC\u63A5\u5230"),n("code",null,"current.baseQueue")])],-1),Zn=["src"],ns=t("<p>\u72B6\u6001\u8BA1\u7B97:</p><ul><li>\u53EA\u4F1A\u63D0\u53D6<code>update1, update2</code>\u8FD9 2 \u4E2A\u9AD8\u4F18\u5148\u7EA7\u7684<code>update</code>, \u6240\u4EE5\u6700\u540E<code>memoizedState=2</code></li><li>\u4FDD\u7559\u5176\u4F59\u4F4E\u4F18\u5148\u7EA7\u7684<code>update</code>, \u7B49\u5F85\u4E0B\u4E00\u6B21<code>render</code></li><li>\u4ECE\u7B2C\u4E00\u4E2A\u4F4E\u4F18\u5148\u7EA7<code>update3</code>\u5F00\u59CB, \u968F\u540E\u7684\u6240\u6709<code>update</code>\u90FD\u4F1A\u88AB\u6DFB\u52A0\u5230<code>baseQueue</code>, \u7531\u4E8E<code>update2</code>\u5DF2\u7ECF\u662F\u9AD8\u4F18\u5148\u7EA7, \u4F1A\u8BBE\u7F6E<code>update2.lane=NoLane</code>\u5C06\u4F18\u5148\u7EA7\u5347\u7EA7\u5230\u6700\u9AD8(\u7EA2\u8272\u8868\u793A).</li><li>\u800C<code>baseState</code>\u4EE3\u8868\u7B2C\u4E00\u4E2A\u4F4E\u4F18\u5148\u7EA7<code>update3</code>\u4E4B\u524D\u7684<code>state</code>, \u5728\u672C\u4F8B\u4E2D, <code>baseState=1</code></li></ul>",2),ss=["src"],as=t("<p><code>function</code>\u8282\u70B9\u88AB\u5904\u7406\u5B8C\u540E, \u9AD8\u4F18\u5148\u7EA7\u7684<code>update</code>, \u4F1A\u7387\u5148\u88AB\u4F7F\u7528(<code>memoizedState=2</code>). \u4E00\u6BB5\u65F6\u95F4\u540E, \u4F4E\u4F18\u5148\u7EA7<code>update3, update4</code>\u7B26\u5408\u6E32\u67D3, \u8FD9\u79CD\u60C5\u51B5\u4E0B\u518D\u6B21\u6267\u884C<code>updateReducer</code>\u91CD\u590D\u4E4B\u524D\u7684\u6B65\u9AA4.</p><p>\u94FE\u8868\u62FC\u63A5:</p><ul><li>\u7531\u4E8E<code>queue.pending = null</code>, \u6545\u62FC\u63A5\u524D\u540E\u6CA1\u6709\u5B9E\u8D28\u53D8\u5316</li></ul>",3),es=["src"],ts=n("p",null,"\u72B6\u6001\u8BA1\u7B97:",-1),os=n("ul",null,[n("li",null,[s("\u73B0\u5728\u6240\u6709"),n("code",null,"update.lane"),s("\u90FD\u7B26\u5408"),n("code",null,"\u6E32\u67D3\u4F18\u5148\u7EA7"),s(", \u6240\u4EE5\u6700\u540E\u7684\u5185\u5B58\u7ED3\u6784\u4E0E\u540C\u6B65\u66F4\u65B0\u4E00\u81F4("),n("code",null,"memoizedState=4,baseState=4"),s(").")])],-1),ps=["src"],cs=t('<blockquote><p>\u7ED3\u8BBA: \u5C3D\u7BA1<code>update</code>\u94FE\u8868\u7684\u4F18\u5148\u7EA7\u4E0D\u540C, \u4E2D\u95F4\u7684<code>render</code>\u53EF\u80FD\u6709\u591A\u6B21, \u4F46\u6700\u7EC8\u7684\u66F4\u65B0\u7ED3\u679C\u7B49\u4E8E<code>update</code>\u94FE\u8868<code>\u6309\u987A\u5E8F\u5408\u5E76</code>.</p></blockquote><h2 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h2><p>\u672C\u8282\u6DF1\u5165\u5206\u6790<code>\u72B6\u6001Hook</code>\u5373<code>useState</code>\u7684\u5185\u90E8\u539F\u7406, \u4ECE<code>\u540C\u6B65,\u5F02\u6B65</code>\u66F4\u65B0\u7406\u89E3\u4E86<code>update</code>\u5BF9\u8C61\u7684\u5408\u5E76\u65B9\u5F0F, \u6700\u7EC8\u7ED3\u679C\u5B58\u50A8\u5728<code>hook.memoizedState</code>\u4F9B\u7ED9<code>function</code>\u4F7F\u7528.</p>',3);function ls(o,is){const a=c("ExternalLinkIcon");return l(),i("div",null,[r,d,n("ol",null,[n("li",null,[k,v,m,b,n("a",h,[y,e(a)]),g,n("a",_,[f,e(a)]),w,S,R]),L]),q,x,n("p",null,[j,Q,B,n("a",A,[H,e(a)]),F,n("a",z,[I,e(a)]),U,n("a",P,[D,e(a)]),$,n("a",E,[N,e(a)])]),O,n("ul",null,[n("li",null,[W,T,n("a",C,[V,e(a)]),G]),J]),K,n("p",null,[M,X,n("a",Y,[Z,e(a)]),nn]),sn,n("p",null,[an,n("a",en,[tn,e(a)])]),on,n("img",{src:o.$withBase("/assets/react-illustration-series/initial-state.png"),alt:"demo"},null,8,pn),n("p",null,[cn,ln,un,rn,dn,kn,vn,n("a",mn,[bn,e(a)]),hn]),yn,n("p",null,[gn,_n,fn,wn,Sn,n("a",Rn,[Ln,e(a)]),qn,n("a",xn,[jn,e(a)])]),Qn,n("p",null,[Bn,n("a",An,[Hn,e(a)]),Fn]),zn,n("img",{src:o.$withBase("/assets/react-illustration-series/before-basequeue-combine.png"),alt:"demo"},null,8,In),Un,n("ol",null,[Pn,n("li",null,[Dn,n("img",{src:o.$withBase("/assets/react-illustration-series/after-basequeue-combine.png"),alt:"demo"},null,8,$n)]),n("li",null,[En,n("ol",null,[Nn,On,n("li",null,[Wn,n("img",{src:o.$withBase("/assets/react-illustration-series/state-compute.png"),alt:"demo"},null,8,Tn)])])])]),Cn,n("p",null,[Vn,n("a",Gn,[Jn,e(a)])]),Kn,n("img",{src:o.$withBase("/assets/react-illustration-series/async-update-before-combine.png"),alt:"demo"},null,8,Mn),Xn,Yn,n("img",{src:o.$withBase("/assets/react-illustration-series/async-update-after-combine.png"),alt:"demo"},null,8,Zn),ns,n("img",{src:o.$withBase("/assets/react-illustration-series/async-update-state-compute.png"),alt:"demo"},null,8,ss),as,n("img",{src:o.$withBase("/assets/react-illustration-series/async-final-combine.png"),alt:"demo"},null,8,es),ts,os,n("img",{src:o.$withBase("/assets/react-illustration-series/async-final-compute.png"),alt:"demo"},null,8,ps),cs])}var ds=p(u,[["render",ls],["__file","hook-state.html.vue"]]);export{ds as default};
